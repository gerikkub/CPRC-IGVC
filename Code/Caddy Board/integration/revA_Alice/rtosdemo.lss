
rtosdemo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000024  00800200  00004138  000041cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00004138  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000018b5  00800224  00800224  000041f0  2**0
                  ALLOC
  3 .stab         000092e8  00000000  00000000  000041f0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00004f1a  00000000  00000000  0000d4d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  000123f2  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      2c:	0c 94 fd 1d 	jmp	0x3bfa	; 0x3bfa <__vector_11>
      30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      44:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      54:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      5c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      80:	0c 94 20 18 	jmp	0x3040	; 0x3040 <__vector_32>
      84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      90:	0c 94 d6 18 	jmp	0x31ac	; 0x31ac <__vector_36>
      94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c8:	0c 94 e1 01 	jmp	0x3c2	; 0x3c2 <__vector_50>
      cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e8 e3       	ldi	r30, 0x38	; 56
      fc:	f1 e4       	ldi	r31, 0x41	; 65
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a4 32       	cpi	r26, 0x24	; 36
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	1a e1       	ldi	r17, 0x1A	; 26
     110:	a4 e2       	ldi	r26, 0x24	; 36
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a9 3d       	cpi	r26, 0xD9	; 217
     11a:	b1 07       	cpc	r27, r17
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	0e 94 ac 00 	call	0x158	; 0x158 <main>
     122:	0c 94 9a 20 	jmp	0x4134	; 0x4134 <_exit>

00000126 <__bad_interrupt>:
     126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <vApplicationTickHook>:
int count = 0;

int sonarTime;

void vApplicationTickHook()
{
     12a:	df 93       	push	r29
     12c:	cf 93       	push	r28
     12e:	cd b7       	in	r28, 0x3d	; 61
     130:	de b7       	in	r29, 0x3e	; 62
    count++;
     132:	80 91 24 02 	lds	r24, 0x0224
     136:	90 91 25 02 	lds	r25, 0x0225
     13a:	01 96       	adiw	r24, 0x01	; 1
     13c:	90 93 25 02 	sts	0x0225, r25
     140:	80 93 24 02 	sts	0x0224, r24
}
     144:	cf 91       	pop	r28
     146:	df 91       	pop	r29
     148:	08 95       	ret

0000014a <vApplicationStackOverflowHook>:

void vApplicationStackOverflowHook(){
     14a:	df 93       	push	r29
     14c:	cf 93       	push	r28
     14e:	cd b7       	in	r28, 0x3d	; 61
     150:	de b7       	in	r29, 0x3e	; 62
	return;
}
     152:	cf 91       	pop	r28
     154:	df 91       	pop	r29
     156:	08 95       	ret

00000158 <main>:
/*-----------------------------------------------------------*/

int main( void )
{
     158:	af 92       	push	r10
     15a:	bf 92       	push	r11
     15c:	cf 92       	push	r12
     15e:	df 92       	push	r13
     160:	ef 92       	push	r14
     162:	ff 92       	push	r15
     164:	0f 93       	push	r16
     166:	df 93       	push	r29
     168:	cf 93       	push	r28
     16a:	00 d0       	rcall	.+0      	; 0x16c <main+0x14>
     16c:	00 d0       	rcall	.+0      	; 0x16e <main+0x16>
     16e:	cd b7       	in	r28, 0x3d	; 61
     170:	de b7       	in	r29, 0x3e	; 62
    
    //- wimpy variable defs
	uint8_t val[2] = {0x3F, 0xFE};
     172:	8f e3       	ldi	r24, 0x3F	; 63
     174:	8d 83       	std	Y+5, r24	; 0x05
     176:	8e ef       	ldi	r24, 0xFE	; 254
     178:	8e 83       	std	Y+6, r24	; 0x06
    uint8_t *val0, *val1;
    
	//- avoid pesky warnings...
	val0 = val + 0;
     17a:	ce 01       	movw	r24, r28
     17c:	05 96       	adiw	r24, 0x05	; 5
     17e:	9a 83       	std	Y+2, r25	; 0x02
     180:	89 83       	std	Y+1, r24	; 0x01
	val1 = val + 1;
     182:	ce 01       	movw	r24, r28
     184:	05 96       	adiw	r24, 0x05	; 5
     186:	01 96       	adiw	r24, 0x01	; 1
     188:	9c 83       	std	Y+4, r25	; 0x04
     18a:	8b 83       	std	Y+3, r24	; 0x03
    
	DDRD = 0xFF;
     18c:	8a e2       	ldi	r24, 0x2A	; 42
     18e:	90 e0       	ldi	r25, 0x00	; 0
     190:	2f ef       	ldi	r18, 0xFF	; 255
     192:	fc 01       	movw	r30, r24
     194:	20 83       	st	Z, r18
	DDRE = 0xFF;
     196:	8d e2       	ldi	r24, 0x2D	; 45
     198:	90 e0       	ldi	r25, 0x00	; 0
     19a:	2f ef       	ldi	r18, 0xFF	; 255
     19c:	fc 01       	movw	r30, r24
     19e:	20 83       	st	Z, r18
	DDRK = 0;
     1a0:	87 e0       	ldi	r24, 0x07	; 7
     1a2:	91 e0       	ldi	r25, 0x01	; 1
     1a4:	fc 01       	movw	r30, r24
     1a6:	10 82       	st	Z, r1

	PORTD = 0;
     1a8:	8b e2       	ldi	r24, 0x2B	; 43
     1aa:	90 e0       	ldi	r25, 0x00	; 0
     1ac:	fc 01       	movw	r30, r24
     1ae:	10 82       	st	Z, r1
	PORTE = 0;
     1b0:	8e e2       	ldi	r24, 0x2E	; 46
     1b2:	90 e0       	ldi	r25, 0x00	; 0
     1b4:	fc 01       	movw	r30, r24
     1b6:	10 82       	st	Z, r1
	PORTK = 2;
     1b8:	88 e0       	ldi	r24, 0x08	; 8
     1ba:	91 e0       	ldi	r25, 0x01	; 1
     1bc:	22 e0       	ldi	r18, 0x02	; 2
     1be:	fc 01       	movw	r30, r24
     1c0:	20 83       	st	Z, r18

    //- init IO with goodness
	vIO_init();
     1c2:	0e 94 32 02 	call	0x464	; 0x464 <vIO_init>

	//- Create a 
	xTaskCreate( (pdTASK_CODE) vTaskFunction_1, (signed char *) "T0", configMINIMAL_STACK_SIZE+1000,
     1c6:	81 e2       	ldi	r24, 0x21	; 33
     1c8:	92 e0       	ldi	r25, 0x02	; 2
     1ca:	40 e0       	ldi	r20, 0x00	; 0
     1cc:	52 e0       	ldi	r21, 0x02	; 2
     1ce:	2b 81       	ldd	r18, Y+3	; 0x03
     1d0:	3c 81       	ldd	r19, Y+4	; 0x04
     1d2:	ba 01       	movw	r22, r20
     1d4:	4d e3       	ldi	r20, 0x3D	; 61
     1d6:	54 e0       	ldi	r21, 0x04	; 4
     1d8:	01 e0       	ldi	r16, 0x01	; 1
     1da:	ee 24       	eor	r14, r14
     1dc:	ff 24       	eor	r15, r15
     1de:	cc 24       	eor	r12, r12
     1e0:	dd 24       	eor	r13, r13
     1e2:	aa 24       	eor	r10, r10
     1e4:	bb 24       	eor	r11, r11
     1e6:	0e 94 42 02 	call	0x484	; 0x484 <xTaskGenericCreate>
                (void *) val1, 1, NULL );
    
   xTaskCreate( (pdTASK_CODE) vTaskSonar, (signed char *) "T1", configMINIMAL_STACK_SIZE+1000,
     1ea:	86 e9       	ldi	r24, 0x96	; 150
     1ec:	9e e1       	ldi	r25, 0x1E	; 30
     1ee:	43 e0       	ldi	r20, 0x03	; 3
     1f0:	52 e0       	ldi	r21, 0x02	; 2
     1f2:	2b 81       	ldd	r18, Y+3	; 0x03
     1f4:	3c 81       	ldd	r19, Y+4	; 0x04
     1f6:	ba 01       	movw	r22, r20
     1f8:	4d e3       	ldi	r20, 0x3D	; 61
     1fa:	54 e0       	ldi	r21, 0x04	; 4
     1fc:	01 e0       	ldi	r16, 0x01	; 1
     1fe:	ee 24       	eor	r14, r14
     200:	ff 24       	eor	r15, r15
     202:	cc 24       	eor	r12, r12
     204:	dd 24       	eor	r13, r13
     206:	aa 24       	eor	r10, r10
     208:	bb 24       	eor	r11, r11
     20a:	0e 94 42 02 	call	0x484	; 0x484 <xTaskGenericCreate>
                (void *) val1, 1, NULL );

   xTaskCreate( (pdTASK_CODE) vTaskUSARTWrite, (signed char *) "T2", configMINIMAL_STACK_SIZE+1000,
     20e:	8e e4       	ldi	r24, 0x4E	; 78
     210:	99 e1       	ldi	r25, 0x19	; 25
     212:	46 e0       	ldi	r20, 0x06	; 6
     214:	52 e0       	ldi	r21, 0x02	; 2
     216:	2b 81       	ldd	r18, Y+3	; 0x03
     218:	3c 81       	ldd	r19, Y+4	; 0x04
     21a:	ba 01       	movw	r22, r20
     21c:	4d e3       	ldi	r20, 0x3D	; 61
     21e:	54 e0       	ldi	r21, 0x04	; 4
     220:	01 e0       	ldi	r16, 0x01	; 1
     222:	ee 24       	eor	r14, r14
     224:	ff 24       	eor	r15, r15
     226:	cc 24       	eor	r12, r12
     228:	dd 24       	eor	r13, r13
     22a:	aa 24       	eor	r10, r10
     22c:	bb 24       	eor	r11, r11
     22e:	0e 94 42 02 	call	0x484	; 0x484 <xTaskGenericCreate>
   				(void *) val1, 1, NULL);

   xTaskCreate( (pdTASK_CODE) vTaskUSARTRead, (signed char *) "T3", configMINIMAL_STACK_SIZE+1000,
     232:	85 ee       	ldi	r24, 0xE5	; 229
     234:	99 e1       	ldi	r25, 0x19	; 25
     236:	49 e0       	ldi	r20, 0x09	; 9
     238:	52 e0       	ldi	r21, 0x02	; 2
     23a:	2b 81       	ldd	r18, Y+3	; 0x03
     23c:	3c 81       	ldd	r19, Y+4	; 0x04
     23e:	ba 01       	movw	r22, r20
     240:	4d e3       	ldi	r20, 0x3D	; 61
     242:	54 e0       	ldi	r21, 0x04	; 4
     244:	01 e0       	ldi	r16, 0x01	; 1
     246:	ee 24       	eor	r14, r14
     248:	ff 24       	eor	r15, r15
     24a:	cc 24       	eor	r12, r12
     24c:	dd 24       	eor	r13, r13
     24e:	aa 24       	eor	r10, r10
     250:	bb 24       	eor	r11, r11
     252:	0e 94 42 02 	call	0x484	; 0x484 <xTaskGenericCreate>

//   xTaskCreate( (pdTASK_CODE) vTaskUSARTLog, (signed char *) "T4", configMINIMAL_STACK_SIZE+1000,
//   				(void *) val1, 1, NULL);
    
    //- kick off the scheduler
	vTaskStartScheduler();
     256:	0e 94 37 05 	call	0xa6e	; 0xa6e <vTaskStartScheduler>
    
	return 0;
     25a:	80 e0       	ldi	r24, 0x00	; 0
     25c:	90 e0       	ldi	r25, 0x00	; 0
}
     25e:	26 96       	adiw	r28, 0x06	; 6
     260:	0f b6       	in	r0, 0x3f	; 63
     262:	f8 94       	cli
     264:	de bf       	out	0x3e, r29	; 62
     266:	0f be       	out	0x3f, r0	; 63
     268:	cd bf       	out	0x3d, r28	; 61
     26a:	cf 91       	pop	r28
     26c:	df 91       	pop	r29
     26e:	0f 91       	pop	r16
     270:	ff 90       	pop	r15
     272:	ef 90       	pop	r14
     274:	df 90       	pop	r13
     276:	cf 90       	pop	r12
     278:	bf 90       	pop	r11
     27a:	af 90       	pop	r10
     27c:	08 95       	ret

0000027e <printHex>:
/*-----------------------------------------------------------*/

void printHex(int i){
     27e:	df 93       	push	r29
     280:	cf 93       	push	r28
     282:	cd b7       	in	r28, 0x3d	; 61
     284:	de b7       	in	r29, 0x3e	; 62
     286:	62 97       	sbiw	r28, 0x12	; 18
     288:	0f b6       	in	r0, 0x3f	; 63
     28a:	f8 94       	cli
     28c:	de bf       	out	0x3e, r29	; 62
     28e:	0f be       	out	0x3f, r0	; 63
     290:	cd bf       	out	0x3d, r28	; 61
     292:	9a 8b       	std	Y+18, r25	; 0x12
     294:	89 8b       	std	Y+17, r24	; 0x11
	char hex[] = {'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};
     296:	ce 01       	movw	r24, r28
     298:	01 96       	adiw	r24, 0x01	; 1
     29a:	2c e0       	ldi	r18, 0x0C	; 12
     29c:	32 e0       	ldi	r19, 0x02	; 2
     29e:	40 e1       	ldi	r20, 0x10	; 16
     2a0:	f9 01       	movw	r30, r18
     2a2:	00 80       	ld	r0, Z
     2a4:	2f 5f       	subi	r18, 0xFF	; 255
     2a6:	3f 4f       	sbci	r19, 0xFF	; 255
     2a8:	fc 01       	movw	r30, r24
     2aa:	00 82       	st	Z, r0
     2ac:	01 96       	adiw	r24, 0x01	; 1
     2ae:	41 50       	subi	r20, 0x01	; 1
     2b0:	44 23       	and	r20, r20
     2b2:	b1 f7       	brne	.-20     	; 0x2a0 <printHex+0x22>

	USART_Write(hex[(i&0xF000) >> 12]);
     2b4:	89 89       	ldd	r24, Y+17	; 0x11
     2b6:	9a 89       	ldd	r25, Y+18	; 0x12
     2b8:	89 2f       	mov	r24, r25
     2ba:	99 27       	eor	r25, r25
     2bc:	82 95       	swap	r24
     2be:	8f 70       	andi	r24, 0x0F	; 15
     2c0:	9e 01       	movw	r18, r28
     2c2:	2f 5f       	subi	r18, 0xFF	; 255
     2c4:	3f 4f       	sbci	r19, 0xFF	; 255
     2c6:	82 0f       	add	r24, r18
     2c8:	93 1f       	adc	r25, r19
     2ca:	fc 01       	movw	r30, r24
     2cc:	80 81       	ld	r24, Z
     2ce:	0e 94 90 18 	call	0x3120	; 0x3120 <USART_Write>
	USART_Write(hex[(i&0xF00) >> 8]);
     2d2:	89 89       	ldd	r24, Y+17	; 0x11
     2d4:	9a 89       	ldd	r25, Y+18	; 0x12
     2d6:	80 70       	andi	r24, 0x00	; 0
     2d8:	9f 70       	andi	r25, 0x0F	; 15
     2da:	89 2f       	mov	r24, r25
     2dc:	99 0f       	add	r25, r25
     2de:	99 0b       	sbc	r25, r25
     2e0:	9e 01       	movw	r18, r28
     2e2:	2f 5f       	subi	r18, 0xFF	; 255
     2e4:	3f 4f       	sbci	r19, 0xFF	; 255
     2e6:	82 0f       	add	r24, r18
     2e8:	93 1f       	adc	r25, r19
     2ea:	fc 01       	movw	r30, r24
     2ec:	80 81       	ld	r24, Z
     2ee:	0e 94 90 18 	call	0x3120	; 0x3120 <USART_Write>
	USART_Write(hex[(i&0xF0) >> 4]);
     2f2:	89 89       	ldd	r24, Y+17	; 0x11
     2f4:	9a 89       	ldd	r25, Y+18	; 0x12
     2f6:	80 7f       	andi	r24, 0xF0	; 240
     2f8:	90 70       	andi	r25, 0x00	; 0
     2fa:	95 95       	asr	r25
     2fc:	87 95       	ror	r24
     2fe:	95 95       	asr	r25
     300:	87 95       	ror	r24
     302:	95 95       	asr	r25
     304:	87 95       	ror	r24
     306:	95 95       	asr	r25
     308:	87 95       	ror	r24
     30a:	9e 01       	movw	r18, r28
     30c:	2f 5f       	subi	r18, 0xFF	; 255
     30e:	3f 4f       	sbci	r19, 0xFF	; 255
     310:	82 0f       	add	r24, r18
     312:	93 1f       	adc	r25, r19
     314:	fc 01       	movw	r30, r24
     316:	80 81       	ld	r24, Z
     318:	0e 94 90 18 	call	0x3120	; 0x3120 <USART_Write>
	USART_Write(hex[i&0xF]);
     31c:	89 89       	ldd	r24, Y+17	; 0x11
     31e:	9a 89       	ldd	r25, Y+18	; 0x12
     320:	8f 70       	andi	r24, 0x0F	; 15
     322:	90 70       	andi	r25, 0x00	; 0
     324:	9e 01       	movw	r18, r28
     326:	2f 5f       	subi	r18, 0xFF	; 255
     328:	3f 4f       	sbci	r19, 0xFF	; 255
     32a:	82 0f       	add	r24, r18
     32c:	93 1f       	adc	r25, r19
     32e:	fc 01       	movw	r30, r24
     330:	80 81       	ld	r24, Z
     332:	0e 94 90 18 	call	0x3120	; 0x3120 <USART_Write>

}
     336:	62 96       	adiw	r28, 0x12	; 18
     338:	0f b6       	in	r0, 0x3f	; 63
     33a:	f8 94       	cli
     33c:	de bf       	out	0x3e, r29	; 62
     33e:	0f be       	out	0x3f, r0	; 63
     340:	cd bf       	out	0x3d, r28	; 61
     342:	cf 91       	pop	r28
     344:	df 91       	pop	r29
     346:	08 95       	ret

00000348 <printNum>:

void printNum(unsigned char i){
     348:	df 93       	push	r29
     34a:	cf 93       	push	r28
     34c:	cd b7       	in	r28, 0x3d	; 61
     34e:	de b7       	in	r29, 0x3e	; 62
     350:	2d 97       	sbiw	r28, 0x0d	; 13
     352:	0f b6       	in	r0, 0x3f	; 63
     354:	f8 94       	cli
     356:	de bf       	out	0x3e, r29	; 62
     358:	0f be       	out	0x3f, r0	; 63
     35a:	cd bf       	out	0x3d, r28	; 61
     35c:	8d 87       	std	Y+13, r24	; 0x0d
    
    char str[10];
    memset(str,0,10);
     35e:	ce 01       	movw	r24, r28
     360:	03 96       	adiw	r24, 0x03	; 3
     362:	60 e0       	ldi	r22, 0x00	; 0
     364:	70 e0       	ldi	r23, 0x00	; 0
     366:	4a e0       	ldi	r20, 0x0A	; 10
     368:	50 e0       	ldi	r21, 0x00	; 0
     36a:	0e 94 3f 20 	call	0x407e	; 0x407e <memset>
    itoa(i,str,10);
     36e:	8d 85       	ldd	r24, Y+13	; 0x0d
     370:	88 2f       	mov	r24, r24
     372:	90 e0       	ldi	r25, 0x00	; 0
     374:	9e 01       	movw	r18, r28
     376:	2d 5f       	subi	r18, 0xFD	; 253
     378:	3f 4f       	sbci	r19, 0xFF	; 255
     37a:	b9 01       	movw	r22, r18
     37c:	4a e0       	ldi	r20, 0x0A	; 10
     37e:	50 e0       	ldi	r21, 0x00	; 0
     380:	0e 94 55 20 	call	0x40aa	; 0x40aa <itoa>
    char * irr = str;
     384:	ce 01       	movw	r24, r28
     386:	03 96       	adiw	r24, 0x03	; 3
     388:	9a 83       	std	Y+2, r25	; 0x02
     38a:	89 83       	std	Y+1, r24	; 0x01
    while(*irr){
     38c:	0b c0       	rjmp	.+22     	; 0x3a4 <printNum+0x5c>
        USART_AddToQueue((unsigned char )*irr);
     38e:	89 81       	ldd	r24, Y+1	; 0x01
     390:	9a 81       	ldd	r25, Y+2	; 0x02
     392:	fc 01       	movw	r30, r24
     394:	80 81       	ld	r24, Z
     396:	0e 94 19 19 	call	0x3232	; 0x3232 <USART_AddToQueue>
        irr++;
     39a:	89 81       	ldd	r24, Y+1	; 0x01
     39c:	9a 81       	ldd	r25, Y+2	; 0x02
     39e:	01 96       	adiw	r24, 0x01	; 1
     3a0:	9a 83       	std	Y+2, r25	; 0x02
     3a2:	89 83       	std	Y+1, r24	; 0x01
    
    char str[10];
    memset(str,0,10);
    itoa(i,str,10);
    char * irr = str;
    while(*irr){
     3a4:	89 81       	ldd	r24, Y+1	; 0x01
     3a6:	9a 81       	ldd	r25, Y+2	; 0x02
     3a8:	fc 01       	movw	r30, r24
     3aa:	80 81       	ld	r24, Z
     3ac:	88 23       	and	r24, r24
     3ae:	79 f7       	brne	.-34     	; 0x38e <printNum+0x46>
        USART_AddToQueue((unsigned char )*irr);
        irr++;
    }
    
}
     3b0:	2d 96       	adiw	r28, 0x0d	; 13
     3b2:	0f b6       	in	r0, 0x3f	; 63
     3b4:	f8 94       	cli
     3b6:	de bf       	out	0x3e, r29	; 62
     3b8:	0f be       	out	0x3f, r0	; 63
     3ba:	cd bf       	out	0x3d, r28	; 61
     3bc:	cf 91       	pop	r28
     3be:	df 91       	pop	r29
     3c0:	08 95       	ret

000003c2 <__vector_50>:

ISR(TIMER5_OVF_vect){
     3c2:	1f 92       	push	r1
     3c4:	0f 92       	push	r0
     3c6:	0f b6       	in	r0, 0x3f	; 63
     3c8:	0f 92       	push	r0
     3ca:	00 90 5b 00 	lds	r0, 0x005B
     3ce:	0f 92       	push	r0
     3d0:	11 24       	eor	r1, r1
     3d2:	2f 93       	push	r18
     3d4:	3f 93       	push	r19
     3d6:	8f 93       	push	r24
     3d8:	9f 93       	push	r25
     3da:	ef 93       	push	r30
     3dc:	ff 93       	push	r31
     3de:	df 93       	push	r29
     3e0:	cf 93       	push	r28
     3e2:	cd b7       	in	r28, 0x3d	; 61
     3e4:	de b7       	in	r29, 0x3e	; 62

	PORTB ^= 0xFF;
     3e6:	85 e2       	ldi	r24, 0x25	; 37
     3e8:	90 e0       	ldi	r25, 0x00	; 0
     3ea:	25 e2       	ldi	r18, 0x25	; 37
     3ec:	30 e0       	ldi	r19, 0x00	; 0
     3ee:	f9 01       	movw	r30, r18
     3f0:	20 81       	ld	r18, Z
     3f2:	20 95       	com	r18
     3f4:	fc 01       	movw	r30, r24
     3f6:	20 83       	st	Z, r18
	TCNT3L = 0;
     3f8:	84 e9       	ldi	r24, 0x94	; 148
     3fa:	90 e0       	ldi	r25, 0x00	; 0
     3fc:	fc 01       	movw	r30, r24
     3fe:	10 82       	st	Z, r1
	TCNT3H = 0;
     400:	85 e9       	ldi	r24, 0x95	; 149
     402:	90 e0       	ldi	r25, 0x00	; 0
     404:	fc 01       	movw	r30, r24
     406:	10 82       	st	Z, r1

}
     408:	cf 91       	pop	r28
     40a:	df 91       	pop	r29
     40c:	ff 91       	pop	r31
     40e:	ef 91       	pop	r30
     410:	9f 91       	pop	r25
     412:	8f 91       	pop	r24
     414:	3f 91       	pop	r19
     416:	2f 91       	pop	r18
     418:	0f 90       	pop	r0
     41a:	00 92 5b 00 	sts	0x005B, r0
     41e:	0f 90       	pop	r0
     420:	0f be       	out	0x3f, r0	; 63
     422:	0f 90       	pop	r0
     424:	1f 90       	pop	r1
     426:	18 95       	reti

00000428 <getTimerCount2>:

unsigned int getTimerCount2(){
     428:	df 93       	push	r29
     42a:	cf 93       	push	r28
     42c:	cd b7       	in	r28, 0x3d	; 61
     42e:	de b7       	in	r29, 0x3e	; 62

	//volatile char timerLow = TCNT3L;

	return TCNT0;
     430:	86 e4       	ldi	r24, 0x46	; 70
     432:	90 e0       	ldi	r25, 0x00	; 0
     434:	fc 01       	movw	r30, r24
     436:	80 81       	ld	r24, Z
     438:	88 2f       	mov	r24, r24
     43a:	90 e0       	ldi	r25, 0x00	; 0

}
     43c:	cf 91       	pop	r28
     43e:	df 91       	pop	r29
     440:	08 95       	ret

00000442 <vTaskFunction_1>:

void vTaskFunction_1(void *pvParameters)
{	
     442:	df 93       	push	r29
     444:	cf 93       	push	r28
     446:	0f 92       	push	r0
     448:	0f 92       	push	r0
     44a:	cd b7       	in	r28, 0x3d	; 61
     44c:	de b7       	in	r29, 0x3e	; 62
     44e:	9a 83       	std	Y+2, r25	; 0x02
     450:	89 83       	std	Y+1, r24	; 0x01
    USART_Init(9600, 16000000);
     452:	80 e8       	ldi	r24, 0x80	; 128
     454:	95 e2       	ldi	r25, 0x25	; 37
     456:	40 e0       	ldi	r20, 0x00	; 0
     458:	54 e2       	ldi	r21, 0x24	; 36
     45a:	64 ef       	ldi	r22, 0xF4	; 244
     45c:	70 e0       	ldi	r23, 0x00	; 0
     45e:	0e 94 23 18 	call	0x3046	; 0x3046 <USART_Init>
    for(;;);
     462:	ff cf       	rjmp	.-2      	; 0x462 <vTaskFunction_1+0x20>

00000464 <vIO_init>:
        // UDR0;
    }
}

void vIO_init(void)
{
     464:	df 93       	push	r29
     466:	cf 93       	push	r28
     468:	cd b7       	in	r28, 0x3d	; 61
     46a:	de b7       	in	r29, 0x3e	; 62
    //- set PortB as output
	DDRB = 0xFF; 
     46c:	84 e2       	ldi	r24, 0x24	; 36
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	2f ef       	ldi	r18, 0xFF	; 255
     472:	fc 01       	movw	r30, r24
     474:	20 83       	st	Z, r18
    PORTB = 0; 
     476:	85 e2       	ldi	r24, 0x25	; 37
     478:	90 e0       	ldi	r25, 0x00	; 0
     47a:	fc 01       	movw	r30, r24
     47c:	10 82       	st	Z, r1
}
     47e:	cf 91       	pop	r28
     480:	df 91       	pop	r29
     482:	08 95       	ret

00000484 <xTaskGenericCreate>:
     484:	af 92       	push	r10
     486:	bf 92       	push	r11
     488:	cf 92       	push	r12
     48a:	df 92       	push	r13
     48c:	ef 92       	push	r14
     48e:	ff 92       	push	r15
     490:	0f 93       	push	r16
     492:	1f 93       	push	r17
     494:	df 93       	push	r29
     496:	cf 93       	push	r28
     498:	cd b7       	in	r28, 0x3d	; 61
     49a:	de b7       	in	r29, 0x3e	; 62
     49c:	64 97       	sbiw	r28, 0x14	; 20
     49e:	0f b6       	in	r0, 0x3f	; 63
     4a0:	f8 94       	cli
     4a2:	de bf       	out	0x3e, r29	; 62
     4a4:	0f be       	out	0x3f, r0	; 63
     4a6:	cd bf       	out	0x3d, r28	; 61
     4a8:	9f 83       	std	Y+7, r25	; 0x07
     4aa:	8e 83       	std	Y+6, r24	; 0x06
     4ac:	79 87       	std	Y+9, r23	; 0x09
     4ae:	68 87       	std	Y+8, r22	; 0x08
     4b0:	5b 87       	std	Y+11, r21	; 0x0b
     4b2:	4a 87       	std	Y+10, r20	; 0x0a
     4b4:	3d 87       	std	Y+13, r19	; 0x0d
     4b6:	2c 87       	std	Y+12, r18	; 0x0c
     4b8:	0e 87       	std	Y+14, r16	; 0x0e
     4ba:	f8 8a       	std	Y+16, r15	; 0x10
     4bc:	ef 86       	std	Y+15, r14	; 0x0f
     4be:	da 8a       	std	Y+18, r13	; 0x12
     4c0:	c9 8a       	std	Y+17, r12	; 0x11
     4c2:	bc 8a       	std	Y+20, r11	; 0x14
     4c4:	ab 8a       	std	Y+19, r10	; 0x13
     4c6:	8a 85       	ldd	r24, Y+10	; 0x0a
     4c8:	9b 85       	ldd	r25, Y+11	; 0x0b
     4ca:	29 89       	ldd	r18, Y+17	; 0x11
     4cc:	3a 89       	ldd	r19, Y+18	; 0x12
     4ce:	b9 01       	movw	r22, r18
     4d0:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <prvAllocateTCBAndStack>
     4d4:	9c 83       	std	Y+4, r25	; 0x04
     4d6:	8b 83       	std	Y+3, r24	; 0x03
     4d8:	8b 81       	ldd	r24, Y+3	; 0x03
     4da:	9c 81       	ldd	r25, Y+4	; 0x04
     4dc:	00 97       	sbiw	r24, 0x00	; 0
     4de:	09 f4       	brne	.+2      	; 0x4e2 <xTaskGenericCreate+0x5e>
     4e0:	99 c0       	rjmp	.+306    	; 0x614 <xTaskGenericCreate+0x190>
     4e2:	eb 81       	ldd	r30, Y+3	; 0x03
     4e4:	fc 81       	ldd	r31, Y+4	; 0x04
     4e6:	27 89       	ldd	r18, Z+23	; 0x17
     4e8:	30 8d       	ldd	r19, Z+24	; 0x18
     4ea:	8a 85       	ldd	r24, Y+10	; 0x0a
     4ec:	9b 85       	ldd	r25, Y+11	; 0x0b
     4ee:	01 97       	sbiw	r24, 0x01	; 1
     4f0:	82 0f       	add	r24, r18
     4f2:	93 1f       	adc	r25, r19
     4f4:	9a 83       	std	Y+2, r25	; 0x02
     4f6:	89 83       	std	Y+1, r24	; 0x01
     4f8:	8b 81       	ldd	r24, Y+3	; 0x03
     4fa:	9c 81       	ldd	r25, Y+4	; 0x04
     4fc:	28 85       	ldd	r18, Y+8	; 0x08
     4fe:	39 85       	ldd	r19, Y+9	; 0x09
     500:	eb 89       	ldd	r30, Y+19	; 0x13
     502:	fc 89       	ldd	r31, Y+20	; 0x14
     504:	aa 85       	ldd	r26, Y+10	; 0x0a
     506:	bb 85       	ldd	r27, Y+11	; 0x0b
     508:	b9 01       	movw	r22, r18
     50a:	4e 85       	ldd	r20, Y+14	; 0x0e
     50c:	9f 01       	movw	r18, r30
     50e:	8d 01       	movw	r16, r26
     510:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <prvInitialiseTCBVariables>
     514:	89 81       	ldd	r24, Y+1	; 0x01
     516:	9a 81       	ldd	r25, Y+2	; 0x02
     518:	2e 81       	ldd	r18, Y+6	; 0x06
     51a:	3f 81       	ldd	r19, Y+7	; 0x07
     51c:	4c 85       	ldd	r20, Y+12	; 0x0c
     51e:	5d 85       	ldd	r21, Y+13	; 0x0d
     520:	b9 01       	movw	r22, r18
     522:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <pxPortInitialiseStack>
     526:	eb 81       	ldd	r30, Y+3	; 0x03
     528:	fc 81       	ldd	r31, Y+4	; 0x04
     52a:	91 83       	std	Z+1, r25	; 0x01
     52c:	80 83       	st	Z, r24
     52e:	8f 85       	ldd	r24, Y+15	; 0x0f
     530:	98 89       	ldd	r25, Y+16	; 0x10
     532:	00 97       	sbiw	r24, 0x00	; 0
     534:	31 f0       	breq	.+12     	; 0x542 <xTaskGenericCreate+0xbe>
     536:	ef 85       	ldd	r30, Y+15	; 0x0f
     538:	f8 89       	ldd	r31, Y+16	; 0x10
     53a:	8b 81       	ldd	r24, Y+3	; 0x03
     53c:	9c 81       	ldd	r25, Y+4	; 0x04
     53e:	91 83       	std	Z+1, r25	; 0x01
     540:	80 83       	st	Z, r24
     542:	0f b6       	in	r0, 0x3f	; 63
     544:	f8 94       	cli
     546:	0f 92       	push	r0
     548:	80 91 28 02 	lds	r24, 0x0228
     54c:	8f 5f       	subi	r24, 0xFF	; 255
     54e:	80 93 28 02 	sts	0x0228, r24
     552:	80 91 26 02 	lds	r24, 0x0226
     556:	90 91 27 02 	lds	r25, 0x0227
     55a:	00 97       	sbiw	r24, 0x00	; 0
     55c:	69 f4       	brne	.+26     	; 0x578 <xTaskGenericCreate+0xf4>
     55e:	8b 81       	ldd	r24, Y+3	; 0x03
     560:	9c 81       	ldd	r25, Y+4	; 0x04
     562:	90 93 27 02 	sts	0x0227, r25
     566:	80 93 26 02 	sts	0x0226, r24
     56a:	80 91 28 02 	lds	r24, 0x0228
     56e:	81 30       	cpi	r24, 0x01	; 1
     570:	a9 f4       	brne	.+42     	; 0x59c <xTaskGenericCreate+0x118>
     572:	0e 94 43 09 	call	0x1286	; 0x1286 <prvInitialiseTaskLists>
     576:	12 c0       	rjmp	.+36     	; 0x59c <xTaskGenericCreate+0x118>
     578:	80 91 2d 02 	lds	r24, 0x022D
     57c:	88 23       	and	r24, r24
     57e:	71 f4       	brne	.+28     	; 0x59c <xTaskGenericCreate+0x118>
     580:	e0 91 26 02 	lds	r30, 0x0226
     584:	f0 91 27 02 	lds	r31, 0x0227
     588:	96 89       	ldd	r25, Z+22	; 0x16
     58a:	8e 85       	ldd	r24, Y+14	; 0x0e
     58c:	89 17       	cp	r24, r25
     58e:	30 f0       	brcs	.+12     	; 0x59c <xTaskGenericCreate+0x118>
     590:	8b 81       	ldd	r24, Y+3	; 0x03
     592:	9c 81       	ldd	r25, Y+4	; 0x04
     594:	90 93 27 02 	sts	0x0227, r25
     598:	80 93 26 02 	sts	0x0226, r24
     59c:	eb 81       	ldd	r30, Y+3	; 0x03
     59e:	fc 81       	ldd	r31, Y+4	; 0x04
     5a0:	96 89       	ldd	r25, Z+22	; 0x16
     5a2:	80 91 2b 02 	lds	r24, 0x022B
     5a6:	89 17       	cp	r24, r25
     5a8:	28 f4       	brcc	.+10     	; 0x5b4 <xTaskGenericCreate+0x130>
     5aa:	eb 81       	ldd	r30, Y+3	; 0x03
     5ac:	fc 81       	ldd	r31, Y+4	; 0x04
     5ae:	86 89       	ldd	r24, Z+22	; 0x16
     5b0:	80 93 2b 02 	sts	0x022B, r24
     5b4:	80 91 32 02 	lds	r24, 0x0232
     5b8:	8f 5f       	subi	r24, 0xFF	; 255
     5ba:	80 93 32 02 	sts	0x0232, r24
     5be:	eb 81       	ldd	r30, Y+3	; 0x03
     5c0:	fc 81       	ldd	r31, Y+4	; 0x04
     5c2:	96 89       	ldd	r25, Z+22	; 0x16
     5c4:	80 91 2c 02 	lds	r24, 0x022C
     5c8:	89 17       	cp	r24, r25
     5ca:	28 f4       	brcc	.+10     	; 0x5d6 <xTaskGenericCreate+0x152>
     5cc:	eb 81       	ldd	r30, Y+3	; 0x03
     5ce:	fc 81       	ldd	r31, Y+4	; 0x04
     5d0:	86 89       	ldd	r24, Z+22	; 0x16
     5d2:	80 93 2c 02 	sts	0x022C, r24
     5d6:	eb 81       	ldd	r30, Y+3	; 0x03
     5d8:	fc 81       	ldd	r31, Y+4	; 0x04
     5da:	86 89       	ldd	r24, Z+22	; 0x16
     5dc:	28 2f       	mov	r18, r24
     5de:	30 e0       	ldi	r19, 0x00	; 0
     5e0:	c9 01       	movw	r24, r18
     5e2:	88 0f       	add	r24, r24
     5e4:	99 1f       	adc	r25, r25
     5e6:	88 0f       	add	r24, r24
     5e8:	99 1f       	adc	r25, r25
     5ea:	88 0f       	add	r24, r24
     5ec:	99 1f       	adc	r25, r25
     5ee:	82 0f       	add	r24, r18
     5f0:	93 1f       	adc	r25, r19
     5f2:	ac 01       	movw	r20, r24
     5f4:	4d 5c       	subi	r20, 0xCD	; 205
     5f6:	5d 4f       	sbci	r21, 0xFD	; 253
     5f8:	8b 81       	ldd	r24, Y+3	; 0x03
     5fa:	9c 81       	ldd	r25, Y+4	; 0x04
     5fc:	9c 01       	movw	r18, r24
     5fe:	2e 5f       	subi	r18, 0xFE	; 254
     600:	3f 4f       	sbci	r19, 0xFF	; 255
     602:	ca 01       	movw	r24, r20
     604:	b9 01       	movw	r22, r18
     606:	0e 94 dd 10 	call	0x21ba	; 0x21ba <vListInsertEnd>
     60a:	81 e0       	ldi	r24, 0x01	; 1
     60c:	8d 83       	std	Y+5, r24	; 0x05
     60e:	0f 90       	pop	r0
     610:	0f be       	out	0x3f, r0	; 63
     612:	02 c0       	rjmp	.+4      	; 0x618 <xTaskGenericCreate+0x194>
     614:	8f ef       	ldi	r24, 0xFF	; 255
     616:	8d 83       	std	Y+5, r24	; 0x05
     618:	8d 81       	ldd	r24, Y+5	; 0x05
     61a:	81 30       	cpi	r24, 0x01	; 1
     61c:	71 f4       	brne	.+28     	; 0x63a <xTaskGenericCreate+0x1b6>
     61e:	80 91 2d 02 	lds	r24, 0x022D
     622:	88 23       	and	r24, r24
     624:	51 f0       	breq	.+20     	; 0x63a <xTaskGenericCreate+0x1b6>
     626:	e0 91 26 02 	lds	r30, 0x0226
     62a:	f0 91 27 02 	lds	r31, 0x0227
     62e:	96 89       	ldd	r25, Z+22	; 0x16
     630:	8e 85       	ldd	r24, Y+14	; 0x0e
     632:	98 17       	cp	r25, r24
     634:	10 f4       	brcc	.+4      	; 0x63a <xTaskGenericCreate+0x1b6>
     636:	0e 94 01 17 	call	0x2e02	; 0x2e02 <vPortYield>
     63a:	8d 81       	ldd	r24, Y+5	; 0x05
     63c:	64 96       	adiw	r28, 0x14	; 20
     63e:	0f b6       	in	r0, 0x3f	; 63
     640:	f8 94       	cli
     642:	de bf       	out	0x3e, r29	; 62
     644:	0f be       	out	0x3f, r0	; 63
     646:	cd bf       	out	0x3d, r28	; 61
     648:	cf 91       	pop	r28
     64a:	df 91       	pop	r29
     64c:	1f 91       	pop	r17
     64e:	0f 91       	pop	r16
     650:	ff 90       	pop	r15
     652:	ef 90       	pop	r14
     654:	df 90       	pop	r13
     656:	cf 90       	pop	r12
     658:	bf 90       	pop	r11
     65a:	af 90       	pop	r10
     65c:	08 95       	ret

0000065e <vTaskDelayUntil>:
     65e:	df 93       	push	r29
     660:	cf 93       	push	r28
     662:	cd b7       	in	r28, 0x3d	; 61
     664:	de b7       	in	r29, 0x3e	; 62
     666:	28 97       	sbiw	r28, 0x08	; 8
     668:	0f b6       	in	r0, 0x3f	; 63
     66a:	f8 94       	cli
     66c:	de bf       	out	0x3e, r29	; 62
     66e:	0f be       	out	0x3f, r0	; 63
     670:	cd bf       	out	0x3d, r28	; 61
     672:	9e 83       	std	Y+6, r25	; 0x06
     674:	8d 83       	std	Y+5, r24	; 0x05
     676:	78 87       	std	Y+8, r23	; 0x08
     678:	6f 83       	std	Y+7, r22	; 0x07
     67a:	19 82       	std	Y+1, r1	; 0x01
     67c:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <vTaskSuspendAll>
     680:	ed 81       	ldd	r30, Y+5	; 0x05
     682:	fe 81       	ldd	r31, Y+6	; 0x06
     684:	20 81       	ld	r18, Z
     686:	31 81       	ldd	r19, Z+1	; 0x01
     688:	8f 81       	ldd	r24, Y+7	; 0x07
     68a:	98 85       	ldd	r25, Y+8	; 0x08
     68c:	82 0f       	add	r24, r18
     68e:	93 1f       	adc	r25, r19
     690:	9c 83       	std	Y+4, r25	; 0x04
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	ed 81       	ldd	r30, Y+5	; 0x05
     696:	fe 81       	ldd	r31, Y+6	; 0x06
     698:	20 81       	ld	r18, Z
     69a:	31 81       	ldd	r19, Z+1	; 0x01
     69c:	80 91 29 02 	lds	r24, 0x0229
     6a0:	90 91 2a 02 	lds	r25, 0x022A
     6a4:	82 17       	cp	r24, r18
     6a6:	93 07       	cpc	r25, r19
     6a8:	a8 f4       	brcc	.+42     	; 0x6d4 <vTaskDelayUntil+0x76>
     6aa:	ed 81       	ldd	r30, Y+5	; 0x05
     6ac:	fe 81       	ldd	r31, Y+6	; 0x06
     6ae:	20 81       	ld	r18, Z
     6b0:	31 81       	ldd	r19, Z+1	; 0x01
     6b2:	8b 81       	ldd	r24, Y+3	; 0x03
     6b4:	9c 81       	ldd	r25, Y+4	; 0x04
     6b6:	82 17       	cp	r24, r18
     6b8:	93 07       	cpc	r25, r19
     6ba:	00 f5       	brcc	.+64     	; 0x6fc <vTaskDelayUntil+0x9e>
     6bc:	20 91 29 02 	lds	r18, 0x0229
     6c0:	30 91 2a 02 	lds	r19, 0x022A
     6c4:	8b 81       	ldd	r24, Y+3	; 0x03
     6c6:	9c 81       	ldd	r25, Y+4	; 0x04
     6c8:	28 17       	cp	r18, r24
     6ca:	39 07       	cpc	r19, r25
     6cc:	b8 f4       	brcc	.+46     	; 0x6fc <vTaskDelayUntil+0x9e>
     6ce:	81 e0       	ldi	r24, 0x01	; 1
     6d0:	89 83       	std	Y+1, r24	; 0x01
     6d2:	14 c0       	rjmp	.+40     	; 0x6fc <vTaskDelayUntil+0x9e>
     6d4:	ed 81       	ldd	r30, Y+5	; 0x05
     6d6:	fe 81       	ldd	r31, Y+6	; 0x06
     6d8:	20 81       	ld	r18, Z
     6da:	31 81       	ldd	r19, Z+1	; 0x01
     6dc:	8b 81       	ldd	r24, Y+3	; 0x03
     6de:	9c 81       	ldd	r25, Y+4	; 0x04
     6e0:	82 17       	cp	r24, r18
     6e2:	93 07       	cpc	r25, r19
     6e4:	48 f0       	brcs	.+18     	; 0x6f8 <vTaskDelayUntil+0x9a>
     6e6:	20 91 29 02 	lds	r18, 0x0229
     6ea:	30 91 2a 02 	lds	r19, 0x022A
     6ee:	8b 81       	ldd	r24, Y+3	; 0x03
     6f0:	9c 81       	ldd	r25, Y+4	; 0x04
     6f2:	28 17       	cp	r18, r24
     6f4:	39 07       	cpc	r19, r25
     6f6:	10 f4       	brcc	.+4      	; 0x6fc <vTaskDelayUntil+0x9e>
     6f8:	81 e0       	ldi	r24, 0x01	; 1
     6fa:	89 83       	std	Y+1, r24	; 0x01
     6fc:	ed 81       	ldd	r30, Y+5	; 0x05
     6fe:	fe 81       	ldd	r31, Y+6	; 0x06
     700:	8b 81       	ldd	r24, Y+3	; 0x03
     702:	9c 81       	ldd	r25, Y+4	; 0x04
     704:	91 83       	std	Z+1, r25	; 0x01
     706:	80 83       	st	Z, r24
     708:	89 81       	ldd	r24, Y+1	; 0x01
     70a:	88 23       	and	r24, r24
     70c:	59 f0       	breq	.+22     	; 0x724 <vTaskDelayUntil+0xc6>
     70e:	80 91 26 02 	lds	r24, 0x0226
     712:	90 91 27 02 	lds	r25, 0x0227
     716:	02 96       	adiw	r24, 0x02	; 2
     718:	0e 94 94 11 	call	0x2328	; 0x2328 <uxListRemove>
     71c:	8b 81       	ldd	r24, Y+3	; 0x03
     71e:	9c 81       	ldd	r25, Y+4	; 0x04
     720:	0e 94 87 09 	call	0x130e	; 0x130e <prvAddCurrentTaskToDelayedList>
     724:	0e 94 86 05 	call	0xb0c	; 0xb0c <xTaskResumeAll>
     728:	8a 83       	std	Y+2, r24	; 0x02
     72a:	8a 81       	ldd	r24, Y+2	; 0x02
     72c:	88 23       	and	r24, r24
     72e:	11 f4       	brne	.+4      	; 0x734 <vTaskDelayUntil+0xd6>
     730:	0e 94 01 17 	call	0x2e02	; 0x2e02 <vPortYield>
     734:	28 96       	adiw	r28, 0x08	; 8
     736:	0f b6       	in	r0, 0x3f	; 63
     738:	f8 94       	cli
     73a:	de bf       	out	0x3e, r29	; 62
     73c:	0f be       	out	0x3f, r0	; 63
     73e:	cd bf       	out	0x3d, r28	; 61
     740:	cf 91       	pop	r28
     742:	df 91       	pop	r29
     744:	08 95       	ret

00000746 <vTaskDelay>:
     746:	df 93       	push	r29
     748:	cf 93       	push	r28
     74a:	00 d0       	rcall	.+0      	; 0x74c <vTaskDelay+0x6>
     74c:	0f 92       	push	r0
     74e:	0f 92       	push	r0
     750:	cd b7       	in	r28, 0x3d	; 61
     752:	de b7       	in	r29, 0x3e	; 62
     754:	9d 83       	std	Y+5, r25	; 0x05
     756:	8c 83       	std	Y+4, r24	; 0x04
     758:	19 82       	std	Y+1, r1	; 0x01
     75a:	8c 81       	ldd	r24, Y+4	; 0x04
     75c:	9d 81       	ldd	r25, Y+5	; 0x05
     75e:	00 97       	sbiw	r24, 0x00	; 0
     760:	d1 f0       	breq	.+52     	; 0x796 <vTaskDelay+0x50>
     762:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <vTaskSuspendAll>
     766:	20 91 29 02 	lds	r18, 0x0229
     76a:	30 91 2a 02 	lds	r19, 0x022A
     76e:	8c 81       	ldd	r24, Y+4	; 0x04
     770:	9d 81       	ldd	r25, Y+5	; 0x05
     772:	82 0f       	add	r24, r18
     774:	93 1f       	adc	r25, r19
     776:	9b 83       	std	Y+3, r25	; 0x03
     778:	8a 83       	std	Y+2, r24	; 0x02
     77a:	80 91 26 02 	lds	r24, 0x0226
     77e:	90 91 27 02 	lds	r25, 0x0227
     782:	02 96       	adiw	r24, 0x02	; 2
     784:	0e 94 94 11 	call	0x2328	; 0x2328 <uxListRemove>
     788:	8a 81       	ldd	r24, Y+2	; 0x02
     78a:	9b 81       	ldd	r25, Y+3	; 0x03
     78c:	0e 94 87 09 	call	0x130e	; 0x130e <prvAddCurrentTaskToDelayedList>
     790:	0e 94 86 05 	call	0xb0c	; 0xb0c <xTaskResumeAll>
     794:	89 83       	std	Y+1, r24	; 0x01
     796:	89 81       	ldd	r24, Y+1	; 0x01
     798:	88 23       	and	r24, r24
     79a:	11 f4       	brne	.+4      	; 0x7a0 <vTaskDelay+0x5a>
     79c:	0e 94 01 17 	call	0x2e02	; 0x2e02 <vPortYield>
     7a0:	0f 90       	pop	r0
     7a2:	0f 90       	pop	r0
     7a4:	0f 90       	pop	r0
     7a6:	0f 90       	pop	r0
     7a8:	0f 90       	pop	r0
     7aa:	cf 91       	pop	r28
     7ac:	df 91       	pop	r29
     7ae:	08 95       	ret

000007b0 <vTaskSuspend>:
     7b0:	df 93       	push	r29
     7b2:	cf 93       	push	r28
     7b4:	00 d0       	rcall	.+0      	; 0x7b6 <vTaskSuspend+0x6>
     7b6:	00 d0       	rcall	.+0      	; 0x7b8 <vTaskSuspend+0x8>
     7b8:	cd b7       	in	r28, 0x3d	; 61
     7ba:	de b7       	in	r29, 0x3e	; 62
     7bc:	9c 83       	std	Y+4, r25	; 0x04
     7be:	8b 83       	std	Y+3, r24	; 0x03
     7c0:	0f b6       	in	r0, 0x3f	; 63
     7c2:	f8 94       	cli
     7c4:	0f 92       	push	r0
     7c6:	20 91 26 02 	lds	r18, 0x0226
     7ca:	30 91 27 02 	lds	r19, 0x0227
     7ce:	8b 81       	ldd	r24, Y+3	; 0x03
     7d0:	9c 81       	ldd	r25, Y+4	; 0x04
     7d2:	82 17       	cp	r24, r18
     7d4:	93 07       	cpc	r25, r19
     7d6:	11 f4       	brne	.+4      	; 0x7dc <vTaskSuspend+0x2c>
     7d8:	1c 82       	std	Y+4, r1	; 0x04
     7da:	1b 82       	std	Y+3, r1	; 0x03
     7dc:	8b 81       	ldd	r24, Y+3	; 0x03
     7de:	9c 81       	ldd	r25, Y+4	; 0x04
     7e0:	00 97       	sbiw	r24, 0x00	; 0
     7e2:	39 f4       	brne	.+14     	; 0x7f2 <vTaskSuspend+0x42>
     7e4:	80 91 26 02 	lds	r24, 0x0226
     7e8:	90 91 27 02 	lds	r25, 0x0227
     7ec:	9e 83       	std	Y+6, r25	; 0x06
     7ee:	8d 83       	std	Y+5, r24	; 0x05
     7f0:	04 c0       	rjmp	.+8      	; 0x7fa <vTaskSuspend+0x4a>
     7f2:	8b 81       	ldd	r24, Y+3	; 0x03
     7f4:	9c 81       	ldd	r25, Y+4	; 0x04
     7f6:	9e 83       	std	Y+6, r25	; 0x06
     7f8:	8d 83       	std	Y+5, r24	; 0x05
     7fa:	8d 81       	ldd	r24, Y+5	; 0x05
     7fc:	9e 81       	ldd	r25, Y+6	; 0x06
     7fe:	9a 83       	std	Y+2, r25	; 0x02
     800:	89 83       	std	Y+1, r24	; 0x01
     802:	89 81       	ldd	r24, Y+1	; 0x01
     804:	9a 81       	ldd	r25, Y+2	; 0x02
     806:	02 96       	adiw	r24, 0x02	; 2
     808:	0e 94 94 11 	call	0x2328	; 0x2328 <uxListRemove>
     80c:	e9 81       	ldd	r30, Y+1	; 0x01
     80e:	fa 81       	ldd	r31, Y+2	; 0x02
     810:	84 89       	ldd	r24, Z+20	; 0x14
     812:	95 89       	ldd	r25, Z+21	; 0x15
     814:	00 97       	sbiw	r24, 0x00	; 0
     816:	29 f0       	breq	.+10     	; 0x822 <vTaskSuspend+0x72>
     818:	89 81       	ldd	r24, Y+1	; 0x01
     81a:	9a 81       	ldd	r25, Y+2	; 0x02
     81c:	0c 96       	adiw	r24, 0x0c	; 12
     81e:	0e 94 94 11 	call	0x2328	; 0x2328 <uxListRemove>
     822:	89 81       	ldd	r24, Y+1	; 0x01
     824:	9a 81       	ldd	r25, Y+2	; 0x02
     826:	9c 01       	movw	r18, r24
     828:	2e 5f       	subi	r18, 0xFE	; 254
     82a:	3f 4f       	sbci	r19, 0xFF	; 255
     82c:	86 e7       	ldi	r24, 0x76	; 118
     82e:	92 e0       	ldi	r25, 0x02	; 2
     830:	b9 01       	movw	r22, r18
     832:	0e 94 dd 10 	call	0x21ba	; 0x21ba <vListInsertEnd>
     836:	0f 90       	pop	r0
     838:	0f be       	out	0x3f, r0	; 63
     83a:	8b 81       	ldd	r24, Y+3	; 0x03
     83c:	9c 81       	ldd	r25, Y+4	; 0x04
     83e:	00 97       	sbiw	r24, 0x00	; 0
     840:	a1 f4       	brne	.+40     	; 0x86a <vTaskSuspend+0xba>
     842:	80 91 2d 02 	lds	r24, 0x022D
     846:	88 23       	and	r24, r24
     848:	19 f0       	breq	.+6      	; 0x850 <vTaskSuspend+0xa0>
     84a:	0e 94 01 17 	call	0x2e02	; 0x2e02 <vPortYield>
     84e:	0d c0       	rjmp	.+26     	; 0x86a <vTaskSuspend+0xba>
     850:	90 91 76 02 	lds	r25, 0x0276
     854:	80 91 28 02 	lds	r24, 0x0228
     858:	98 17       	cp	r25, r24
     85a:	29 f4       	brne	.+10     	; 0x866 <vTaskSuspend+0xb6>
     85c:	10 92 27 02 	sts	0x0227, r1
     860:	10 92 26 02 	sts	0x0226, r1
     864:	02 c0       	rjmp	.+4      	; 0x86a <vTaskSuspend+0xba>
     866:	0e 94 19 07 	call	0xe32	; 0xe32 <vTaskSwitchContext>
     86a:	26 96       	adiw	r28, 0x06	; 6
     86c:	0f b6       	in	r0, 0x3f	; 63
     86e:	f8 94       	cli
     870:	de bf       	out	0x3e, r29	; 62
     872:	0f be       	out	0x3f, r0	; 63
     874:	cd bf       	out	0x3d, r28	; 61
     876:	cf 91       	pop	r28
     878:	df 91       	pop	r29
     87a:	08 95       	ret

0000087c <xTaskIsTaskSuspended>:
     87c:	df 93       	push	r29
     87e:	cf 93       	push	r28
     880:	00 d0       	rcall	.+0      	; 0x882 <xTaskIsTaskSuspended+0x6>
     882:	0f 92       	push	r0
     884:	0f 92       	push	r0
     886:	cd b7       	in	r28, 0x3d	; 61
     888:	de b7       	in	r29, 0x3e	; 62
     88a:	9d 83       	std	Y+5, r25	; 0x05
     88c:	8c 83       	std	Y+4, r24	; 0x04
     88e:	1b 82       	std	Y+3, r1	; 0x03
     890:	8c 81       	ldd	r24, Y+4	; 0x04
     892:	9d 81       	ldd	r25, Y+5	; 0x05
     894:	9a 83       	std	Y+2, r25	; 0x02
     896:	89 83       	std	Y+1, r24	; 0x01
     898:	e9 81       	ldd	r30, Y+1	; 0x01
     89a:	fa 81       	ldd	r31, Y+2	; 0x02
     89c:	82 85       	ldd	r24, Z+10	; 0x0a
     89e:	93 85       	ldd	r25, Z+11	; 0x0b
     8a0:	22 e0       	ldi	r18, 0x02	; 2
     8a2:	86 37       	cpi	r24, 0x76	; 118
     8a4:	92 07       	cpc	r25, r18
     8a6:	81 f4       	brne	.+32     	; 0x8c8 <xTaskIsTaskSuspended+0x4c>
     8a8:	e9 81       	ldd	r30, Y+1	; 0x01
     8aa:	fa 81       	ldd	r31, Y+2	; 0x02
     8ac:	84 89       	ldd	r24, Z+20	; 0x14
     8ae:	95 89       	ldd	r25, Z+21	; 0x15
     8b0:	22 e0       	ldi	r18, 0x02	; 2
     8b2:	8d 36       	cpi	r24, 0x6D	; 109
     8b4:	92 07       	cpc	r25, r18
     8b6:	41 f0       	breq	.+16     	; 0x8c8 <xTaskIsTaskSuspended+0x4c>
     8b8:	e9 81       	ldd	r30, Y+1	; 0x01
     8ba:	fa 81       	ldd	r31, Y+2	; 0x02
     8bc:	84 89       	ldd	r24, Z+20	; 0x14
     8be:	95 89       	ldd	r25, Z+21	; 0x15
     8c0:	00 97       	sbiw	r24, 0x00	; 0
     8c2:	11 f4       	brne	.+4      	; 0x8c8 <xTaskIsTaskSuspended+0x4c>
     8c4:	81 e0       	ldi	r24, 0x01	; 1
     8c6:	8b 83       	std	Y+3, r24	; 0x03
     8c8:	8b 81       	ldd	r24, Y+3	; 0x03
     8ca:	0f 90       	pop	r0
     8cc:	0f 90       	pop	r0
     8ce:	0f 90       	pop	r0
     8d0:	0f 90       	pop	r0
     8d2:	0f 90       	pop	r0
     8d4:	cf 91       	pop	r28
     8d6:	df 91       	pop	r29
     8d8:	08 95       	ret

000008da <vTaskResume>:
     8da:	df 93       	push	r29
     8dc:	cf 93       	push	r28
     8de:	00 d0       	rcall	.+0      	; 0x8e0 <vTaskResume+0x6>
     8e0:	0f 92       	push	r0
     8e2:	cd b7       	in	r28, 0x3d	; 61
     8e4:	de b7       	in	r29, 0x3e	; 62
     8e6:	9c 83       	std	Y+4, r25	; 0x04
     8e8:	8b 83       	std	Y+3, r24	; 0x03
     8ea:	8b 81       	ldd	r24, Y+3	; 0x03
     8ec:	9c 81       	ldd	r25, Y+4	; 0x04
     8ee:	9a 83       	std	Y+2, r25	; 0x02
     8f0:	89 83       	std	Y+1, r24	; 0x01
     8f2:	89 81       	ldd	r24, Y+1	; 0x01
     8f4:	9a 81       	ldd	r25, Y+2	; 0x02
     8f6:	00 97       	sbiw	r24, 0x00	; 0
     8f8:	09 f4       	brne	.+2      	; 0x8fc <vTaskResume+0x22>
     8fa:	4c c0       	rjmp	.+152    	; 0x994 <vTaskResume+0xba>
     8fc:	20 91 26 02 	lds	r18, 0x0226
     900:	30 91 27 02 	lds	r19, 0x0227
     904:	89 81       	ldd	r24, Y+1	; 0x01
     906:	9a 81       	ldd	r25, Y+2	; 0x02
     908:	82 17       	cp	r24, r18
     90a:	93 07       	cpc	r25, r19
     90c:	09 f4       	brne	.+2      	; 0x910 <vTaskResume+0x36>
     90e:	42 c0       	rjmp	.+132    	; 0x994 <vTaskResume+0xba>
     910:	0f b6       	in	r0, 0x3f	; 63
     912:	f8 94       	cli
     914:	0f 92       	push	r0
     916:	89 81       	ldd	r24, Y+1	; 0x01
     918:	9a 81       	ldd	r25, Y+2	; 0x02
     91a:	0e 94 3e 04 	call	0x87c	; 0x87c <xTaskIsTaskSuspended>
     91e:	81 30       	cpi	r24, 0x01	; 1
     920:	b9 f5       	brne	.+110    	; 0x990 <vTaskResume+0xb6>
     922:	89 81       	ldd	r24, Y+1	; 0x01
     924:	9a 81       	ldd	r25, Y+2	; 0x02
     926:	02 96       	adiw	r24, 0x02	; 2
     928:	0e 94 94 11 	call	0x2328	; 0x2328 <uxListRemove>
     92c:	e9 81       	ldd	r30, Y+1	; 0x01
     92e:	fa 81       	ldd	r31, Y+2	; 0x02
     930:	96 89       	ldd	r25, Z+22	; 0x16
     932:	80 91 2c 02 	lds	r24, 0x022C
     936:	89 17       	cp	r24, r25
     938:	28 f4       	brcc	.+10     	; 0x944 <vTaskResume+0x6a>
     93a:	e9 81       	ldd	r30, Y+1	; 0x01
     93c:	fa 81       	ldd	r31, Y+2	; 0x02
     93e:	86 89       	ldd	r24, Z+22	; 0x16
     940:	80 93 2c 02 	sts	0x022C, r24
     944:	e9 81       	ldd	r30, Y+1	; 0x01
     946:	fa 81       	ldd	r31, Y+2	; 0x02
     948:	86 89       	ldd	r24, Z+22	; 0x16
     94a:	28 2f       	mov	r18, r24
     94c:	30 e0       	ldi	r19, 0x00	; 0
     94e:	c9 01       	movw	r24, r18
     950:	88 0f       	add	r24, r24
     952:	99 1f       	adc	r25, r25
     954:	88 0f       	add	r24, r24
     956:	99 1f       	adc	r25, r25
     958:	88 0f       	add	r24, r24
     95a:	99 1f       	adc	r25, r25
     95c:	82 0f       	add	r24, r18
     95e:	93 1f       	adc	r25, r19
     960:	ac 01       	movw	r20, r24
     962:	4d 5c       	subi	r20, 0xCD	; 205
     964:	5d 4f       	sbci	r21, 0xFD	; 253
     966:	89 81       	ldd	r24, Y+1	; 0x01
     968:	9a 81       	ldd	r25, Y+2	; 0x02
     96a:	9c 01       	movw	r18, r24
     96c:	2e 5f       	subi	r18, 0xFE	; 254
     96e:	3f 4f       	sbci	r19, 0xFF	; 255
     970:	ca 01       	movw	r24, r20
     972:	b9 01       	movw	r22, r18
     974:	0e 94 dd 10 	call	0x21ba	; 0x21ba <vListInsertEnd>
     978:	e9 81       	ldd	r30, Y+1	; 0x01
     97a:	fa 81       	ldd	r31, Y+2	; 0x02
     97c:	96 89       	ldd	r25, Z+22	; 0x16
     97e:	e0 91 26 02 	lds	r30, 0x0226
     982:	f0 91 27 02 	lds	r31, 0x0227
     986:	86 89       	ldd	r24, Z+22	; 0x16
     988:	98 17       	cp	r25, r24
     98a:	10 f0       	brcs	.+4      	; 0x990 <vTaskResume+0xb6>
     98c:	0e 94 01 17 	call	0x2e02	; 0x2e02 <vPortYield>
     990:	0f 90       	pop	r0
     992:	0f be       	out	0x3f, r0	; 63
     994:	0f 90       	pop	r0
     996:	0f 90       	pop	r0
     998:	0f 90       	pop	r0
     99a:	0f 90       	pop	r0
     99c:	cf 91       	pop	r28
     99e:	df 91       	pop	r29
     9a0:	08 95       	ret

000009a2 <xTaskResumeFromISR>:
     9a2:	df 93       	push	r29
     9a4:	cf 93       	push	r28
     9a6:	00 d0       	rcall	.+0      	; 0x9a8 <xTaskResumeFromISR+0x6>
     9a8:	00 d0       	rcall	.+0      	; 0x9aa <xTaskResumeFromISR+0x8>
     9aa:	cd b7       	in	r28, 0x3d	; 61
     9ac:	de b7       	in	r29, 0x3e	; 62
     9ae:	9e 83       	std	Y+6, r25	; 0x06
     9b0:	8d 83       	std	Y+5, r24	; 0x05
     9b2:	1c 82       	std	Y+4, r1	; 0x04
     9b4:	8d 81       	ldd	r24, Y+5	; 0x05
     9b6:	9e 81       	ldd	r25, Y+6	; 0x06
     9b8:	9b 83       	std	Y+3, r25	; 0x03
     9ba:	8a 83       	std	Y+2, r24	; 0x02
     9bc:	19 82       	std	Y+1, r1	; 0x01
     9be:	8a 81       	ldd	r24, Y+2	; 0x02
     9c0:	9b 81       	ldd	r25, Y+3	; 0x03
     9c2:	0e 94 3e 04 	call	0x87c	; 0x87c <xTaskIsTaskSuspended>
     9c6:	81 30       	cpi	r24, 0x01	; 1
     9c8:	09 f0       	breq	.+2      	; 0x9cc <xTaskResumeFromISR+0x2a>
     9ca:	47 c0       	rjmp	.+142    	; 0xa5a <xTaskResumeFromISR+0xb8>
     9cc:	80 91 2e 02 	lds	r24, 0x022E
     9d0:	88 23       	and	r24, r24
     9d2:	c9 f5       	brne	.+114    	; 0xa46 <xTaskResumeFromISR+0xa4>
     9d4:	ea 81       	ldd	r30, Y+2	; 0x02
     9d6:	fb 81       	ldd	r31, Y+3	; 0x03
     9d8:	96 89       	ldd	r25, Z+22	; 0x16
     9da:	e0 91 26 02 	lds	r30, 0x0226
     9de:	f0 91 27 02 	lds	r31, 0x0227
     9e2:	86 89       	ldd	r24, Z+22	; 0x16
     9e4:	1c 82       	std	Y+4, r1	; 0x04
     9e6:	98 17       	cp	r25, r24
     9e8:	10 f0       	brcs	.+4      	; 0x9ee <xTaskResumeFromISR+0x4c>
     9ea:	81 e0       	ldi	r24, 0x01	; 1
     9ec:	8c 83       	std	Y+4, r24	; 0x04
     9ee:	8a 81       	ldd	r24, Y+2	; 0x02
     9f0:	9b 81       	ldd	r25, Y+3	; 0x03
     9f2:	02 96       	adiw	r24, 0x02	; 2
     9f4:	0e 94 94 11 	call	0x2328	; 0x2328 <uxListRemove>
     9f8:	ea 81       	ldd	r30, Y+2	; 0x02
     9fa:	fb 81       	ldd	r31, Y+3	; 0x03
     9fc:	96 89       	ldd	r25, Z+22	; 0x16
     9fe:	80 91 2c 02 	lds	r24, 0x022C
     a02:	89 17       	cp	r24, r25
     a04:	28 f4       	brcc	.+10     	; 0xa10 <xTaskResumeFromISR+0x6e>
     a06:	ea 81       	ldd	r30, Y+2	; 0x02
     a08:	fb 81       	ldd	r31, Y+3	; 0x03
     a0a:	86 89       	ldd	r24, Z+22	; 0x16
     a0c:	80 93 2c 02 	sts	0x022C, r24
     a10:	ea 81       	ldd	r30, Y+2	; 0x02
     a12:	fb 81       	ldd	r31, Y+3	; 0x03
     a14:	86 89       	ldd	r24, Z+22	; 0x16
     a16:	28 2f       	mov	r18, r24
     a18:	30 e0       	ldi	r19, 0x00	; 0
     a1a:	c9 01       	movw	r24, r18
     a1c:	88 0f       	add	r24, r24
     a1e:	99 1f       	adc	r25, r25
     a20:	88 0f       	add	r24, r24
     a22:	99 1f       	adc	r25, r25
     a24:	88 0f       	add	r24, r24
     a26:	99 1f       	adc	r25, r25
     a28:	82 0f       	add	r24, r18
     a2a:	93 1f       	adc	r25, r19
     a2c:	ac 01       	movw	r20, r24
     a2e:	4d 5c       	subi	r20, 0xCD	; 205
     a30:	5d 4f       	sbci	r21, 0xFD	; 253
     a32:	8a 81       	ldd	r24, Y+2	; 0x02
     a34:	9b 81       	ldd	r25, Y+3	; 0x03
     a36:	9c 01       	movw	r18, r24
     a38:	2e 5f       	subi	r18, 0xFE	; 254
     a3a:	3f 4f       	sbci	r19, 0xFF	; 255
     a3c:	ca 01       	movw	r24, r20
     a3e:	b9 01       	movw	r22, r18
     a40:	0e 94 dd 10 	call	0x21ba	; 0x21ba <vListInsertEnd>
     a44:	0a c0       	rjmp	.+20     	; 0xa5a <xTaskResumeFromISR+0xb8>
     a46:	8a 81       	ldd	r24, Y+2	; 0x02
     a48:	9b 81       	ldd	r25, Y+3	; 0x03
     a4a:	9c 01       	movw	r18, r24
     a4c:	24 5f       	subi	r18, 0xF4	; 244
     a4e:	3f 4f       	sbci	r19, 0xFF	; 255
     a50:	8d e6       	ldi	r24, 0x6D	; 109
     a52:	92 e0       	ldi	r25, 0x02	; 2
     a54:	b9 01       	movw	r22, r18
     a56:	0e 94 dd 10 	call	0x21ba	; 0x21ba <vListInsertEnd>
     a5a:	8c 81       	ldd	r24, Y+4	; 0x04
     a5c:	26 96       	adiw	r28, 0x06	; 6
     a5e:	0f b6       	in	r0, 0x3f	; 63
     a60:	f8 94       	cli
     a62:	de bf       	out	0x3e, r29	; 62
     a64:	0f be       	out	0x3f, r0	; 63
     a66:	cd bf       	out	0x3d, r28	; 61
     a68:	cf 91       	pop	r28
     a6a:	df 91       	pop	r29
     a6c:	08 95       	ret

00000a6e <vTaskStartScheduler>:
     a6e:	af 92       	push	r10
     a70:	bf 92       	push	r11
     a72:	cf 92       	push	r12
     a74:	df 92       	push	r13
     a76:	ef 92       	push	r14
     a78:	ff 92       	push	r15
     a7a:	0f 93       	push	r16
     a7c:	df 93       	push	r29
     a7e:	cf 93       	push	r28
     a80:	0f 92       	push	r0
     a82:	cd b7       	in	r28, 0x3d	; 61
     a84:	de b7       	in	r29, 0x3e	; 62
     a86:	87 ed       	ldi	r24, 0xD7	; 215
     a88:	98 e0       	ldi	r25, 0x08	; 8
     a8a:	2e e1       	ldi	r18, 0x1E	; 30
     a8c:	32 e0       	ldi	r19, 0x02	; 2
     a8e:	b9 01       	movw	r22, r18
     a90:	45 e5       	ldi	r20, 0x55	; 85
     a92:	50 e0       	ldi	r21, 0x00	; 0
     a94:	20 e0       	ldi	r18, 0x00	; 0
     a96:	30 e0       	ldi	r19, 0x00	; 0
     a98:	00 e0       	ldi	r16, 0x00	; 0
     a9a:	ee 24       	eor	r14, r14
     a9c:	ff 24       	eor	r15, r15
     a9e:	cc 24       	eor	r12, r12
     aa0:	dd 24       	eor	r13, r13
     aa2:	aa 24       	eor	r10, r10
     aa4:	bb 24       	eor	r11, r11
     aa6:	0e 94 42 02 	call	0x484	; 0x484 <xTaskGenericCreate>
     aaa:	89 83       	std	Y+1, r24	; 0x01
     aac:	89 81       	ldd	r24, Y+1	; 0x01
     aae:	81 30       	cpi	r24, 0x01	; 1
     ab0:	51 f4       	brne	.+20     	; 0xac6 <vTaskStartScheduler+0x58>
     ab2:	f8 94       	cli
     ab4:	81 e0       	ldi	r24, 0x01	; 1
     ab6:	80 93 2d 02 	sts	0x022D, r24
     aba:	10 92 2a 02 	sts	0x022A, r1
     abe:	10 92 29 02 	sts	0x0229, r1
     ac2:	0e 94 c1 16 	call	0x2d82	; 0x2d82 <xPortStartScheduler>
     ac6:	0f 90       	pop	r0
     ac8:	cf 91       	pop	r28
     aca:	df 91       	pop	r29
     acc:	0f 91       	pop	r16
     ace:	ff 90       	pop	r15
     ad0:	ef 90       	pop	r14
     ad2:	df 90       	pop	r13
     ad4:	cf 90       	pop	r12
     ad6:	bf 90       	pop	r11
     ad8:	af 90       	pop	r10
     ada:	08 95       	ret

00000adc <vTaskEndScheduler>:
     adc:	df 93       	push	r29
     ade:	cf 93       	push	r28
     ae0:	cd b7       	in	r28, 0x3d	; 61
     ae2:	de b7       	in	r29, 0x3e	; 62
     ae4:	f8 94       	cli
     ae6:	10 92 2d 02 	sts	0x022D, r1
     aea:	0e 94 fa 16 	call	0x2df4	; 0x2df4 <vPortEndScheduler>
     aee:	cf 91       	pop	r28
     af0:	df 91       	pop	r29
     af2:	08 95       	ret

00000af4 <vTaskSuspendAll>:
     af4:	df 93       	push	r29
     af6:	cf 93       	push	r28
     af8:	cd b7       	in	r28, 0x3d	; 61
     afa:	de b7       	in	r29, 0x3e	; 62
     afc:	80 91 2e 02 	lds	r24, 0x022E
     b00:	8f 5f       	subi	r24, 0xFF	; 255
     b02:	80 93 2e 02 	sts	0x022E, r24
     b06:	cf 91       	pop	r28
     b08:	df 91       	pop	r29
     b0a:	08 95       	ret

00000b0c <xTaskResumeAll>:
     b0c:	df 93       	push	r29
     b0e:	cf 93       	push	r28
     b10:	00 d0       	rcall	.+0      	; 0xb12 <xTaskResumeAll+0x6>
     b12:	0f 92       	push	r0
     b14:	cd b7       	in	r28, 0x3d	; 61
     b16:	de b7       	in	r29, 0x3e	; 62
     b18:	1a 82       	std	Y+2, r1	; 0x02
     b1a:	0f b6       	in	r0, 0x3f	; 63
     b1c:	f8 94       	cli
     b1e:	0f 92       	push	r0
     b20:	80 91 2e 02 	lds	r24, 0x022E
     b24:	81 50       	subi	r24, 0x01	; 1
     b26:	80 93 2e 02 	sts	0x022E, r24
     b2a:	80 91 2e 02 	lds	r24, 0x022E
     b2e:	88 23       	and	r24, r24
     b30:	09 f0       	breq	.+2      	; 0xb34 <xTaskResumeAll+0x28>
     b32:	6c c0       	rjmp	.+216    	; 0xc0c <xTaskResumeAll+0x100>
     b34:	80 91 28 02 	lds	r24, 0x0228
     b38:	88 23       	and	r24, r24
     b3a:	09 f4       	brne	.+2      	; 0xb3e <xTaskResumeAll+0x32>
     b3c:	67 c0       	rjmp	.+206    	; 0xc0c <xTaskResumeAll+0x100>
     b3e:	19 82       	std	Y+1, r1	; 0x01
     b40:	41 c0       	rjmp	.+130    	; 0xbc4 <xTaskResumeAll+0xb8>
     b42:	e0 91 72 02 	lds	r30, 0x0272
     b46:	f0 91 73 02 	lds	r31, 0x0273
     b4a:	86 81       	ldd	r24, Z+6	; 0x06
     b4c:	97 81       	ldd	r25, Z+7	; 0x07
     b4e:	9c 83       	std	Y+4, r25	; 0x04
     b50:	8b 83       	std	Y+3, r24	; 0x03
     b52:	8b 81       	ldd	r24, Y+3	; 0x03
     b54:	9c 81       	ldd	r25, Y+4	; 0x04
     b56:	0c 96       	adiw	r24, 0x0c	; 12
     b58:	0e 94 94 11 	call	0x2328	; 0x2328 <uxListRemove>
     b5c:	8b 81       	ldd	r24, Y+3	; 0x03
     b5e:	9c 81       	ldd	r25, Y+4	; 0x04
     b60:	02 96       	adiw	r24, 0x02	; 2
     b62:	0e 94 94 11 	call	0x2328	; 0x2328 <uxListRemove>
     b66:	eb 81       	ldd	r30, Y+3	; 0x03
     b68:	fc 81       	ldd	r31, Y+4	; 0x04
     b6a:	96 89       	ldd	r25, Z+22	; 0x16
     b6c:	80 91 2c 02 	lds	r24, 0x022C
     b70:	89 17       	cp	r24, r25
     b72:	28 f4       	brcc	.+10     	; 0xb7e <xTaskResumeAll+0x72>
     b74:	eb 81       	ldd	r30, Y+3	; 0x03
     b76:	fc 81       	ldd	r31, Y+4	; 0x04
     b78:	86 89       	ldd	r24, Z+22	; 0x16
     b7a:	80 93 2c 02 	sts	0x022C, r24
     b7e:	eb 81       	ldd	r30, Y+3	; 0x03
     b80:	fc 81       	ldd	r31, Y+4	; 0x04
     b82:	86 89       	ldd	r24, Z+22	; 0x16
     b84:	28 2f       	mov	r18, r24
     b86:	30 e0       	ldi	r19, 0x00	; 0
     b88:	c9 01       	movw	r24, r18
     b8a:	88 0f       	add	r24, r24
     b8c:	99 1f       	adc	r25, r25
     b8e:	88 0f       	add	r24, r24
     b90:	99 1f       	adc	r25, r25
     b92:	88 0f       	add	r24, r24
     b94:	99 1f       	adc	r25, r25
     b96:	82 0f       	add	r24, r18
     b98:	93 1f       	adc	r25, r19
     b9a:	8d 5c       	subi	r24, 0xCD	; 205
     b9c:	9d 4f       	sbci	r25, 0xFD	; 253
     b9e:	2b 81       	ldd	r18, Y+3	; 0x03
     ba0:	3c 81       	ldd	r19, Y+4	; 0x04
     ba2:	2e 5f       	subi	r18, 0xFE	; 254
     ba4:	3f 4f       	sbci	r19, 0xFF	; 255
     ba6:	b9 01       	movw	r22, r18
     ba8:	0e 94 dd 10 	call	0x21ba	; 0x21ba <vListInsertEnd>
     bac:	eb 81       	ldd	r30, Y+3	; 0x03
     bae:	fc 81       	ldd	r31, Y+4	; 0x04
     bb0:	96 89       	ldd	r25, Z+22	; 0x16
     bb2:	e0 91 26 02 	lds	r30, 0x0226
     bb6:	f0 91 27 02 	lds	r31, 0x0227
     bba:	86 89       	ldd	r24, Z+22	; 0x16
     bbc:	98 17       	cp	r25, r24
     bbe:	10 f0       	brcs	.+4      	; 0xbc4 <xTaskResumeAll+0xb8>
     bc0:	81 e0       	ldi	r24, 0x01	; 1
     bc2:	89 83       	std	Y+1, r24	; 0x01
     bc4:	80 91 6d 02 	lds	r24, 0x026D
     bc8:	88 23       	and	r24, r24
     bca:	09 f0       	breq	.+2      	; 0xbce <xTaskResumeAll+0xc2>
     bcc:	ba cf       	rjmp	.-140    	; 0xb42 <xTaskResumeAll+0x36>
     bce:	80 91 2f 02 	lds	r24, 0x022F
     bd2:	88 23       	and	r24, r24
     bd4:	71 f0       	breq	.+28     	; 0xbf2 <xTaskResumeAll+0xe6>
     bd6:	07 c0       	rjmp	.+14     	; 0xbe6 <xTaskResumeAll+0xda>
     bd8:	0e 94 45 06 	call	0xc8a	; 0xc8a <vTaskIncrementTick>
     bdc:	80 91 2f 02 	lds	r24, 0x022F
     be0:	81 50       	subi	r24, 0x01	; 1
     be2:	80 93 2f 02 	sts	0x022F, r24
     be6:	80 91 2f 02 	lds	r24, 0x022F
     bea:	88 23       	and	r24, r24
     bec:	a9 f7       	brne	.-22     	; 0xbd8 <xTaskResumeAll+0xcc>
     bee:	81 e0       	ldi	r24, 0x01	; 1
     bf0:	89 83       	std	Y+1, r24	; 0x01
     bf2:	89 81       	ldd	r24, Y+1	; 0x01
     bf4:	81 30       	cpi	r24, 0x01	; 1
     bf6:	21 f0       	breq	.+8      	; 0xc00 <xTaskResumeAll+0xf4>
     bf8:	80 91 30 02 	lds	r24, 0x0230
     bfc:	81 30       	cpi	r24, 0x01	; 1
     bfe:	31 f4       	brne	.+12     	; 0xc0c <xTaskResumeAll+0x100>
     c00:	81 e0       	ldi	r24, 0x01	; 1
     c02:	8a 83       	std	Y+2, r24	; 0x02
     c04:	10 92 30 02 	sts	0x0230, r1
     c08:	0e 94 01 17 	call	0x2e02	; 0x2e02 <vPortYield>
     c0c:	0f 90       	pop	r0
     c0e:	0f be       	out	0x3f, r0	; 63
     c10:	8a 81       	ldd	r24, Y+2	; 0x02
     c12:	0f 90       	pop	r0
     c14:	0f 90       	pop	r0
     c16:	0f 90       	pop	r0
     c18:	0f 90       	pop	r0
     c1a:	cf 91       	pop	r28
     c1c:	df 91       	pop	r29
     c1e:	08 95       	ret

00000c20 <xTaskGetTickCount>:
     c20:	df 93       	push	r29
     c22:	cf 93       	push	r28
     c24:	0f 92       	push	r0
     c26:	0f 92       	push	r0
     c28:	cd b7       	in	r28, 0x3d	; 61
     c2a:	de b7       	in	r29, 0x3e	; 62
     c2c:	0f b6       	in	r0, 0x3f	; 63
     c2e:	f8 94       	cli
     c30:	0f 92       	push	r0
     c32:	80 91 29 02 	lds	r24, 0x0229
     c36:	90 91 2a 02 	lds	r25, 0x022A
     c3a:	9a 83       	std	Y+2, r25	; 0x02
     c3c:	89 83       	std	Y+1, r24	; 0x01
     c3e:	0f 90       	pop	r0
     c40:	0f be       	out	0x3f, r0	; 63
     c42:	89 81       	ldd	r24, Y+1	; 0x01
     c44:	9a 81       	ldd	r25, Y+2	; 0x02
     c46:	0f 90       	pop	r0
     c48:	0f 90       	pop	r0
     c4a:	cf 91       	pop	r28
     c4c:	df 91       	pop	r29
     c4e:	08 95       	ret

00000c50 <xTaskGetTickCountFromISR>:
     c50:	df 93       	push	r29
     c52:	cf 93       	push	r28
     c54:	00 d0       	rcall	.+0      	; 0xc56 <xTaskGetTickCountFromISR+0x6>
     c56:	cd b7       	in	r28, 0x3d	; 61
     c58:	de b7       	in	r29, 0x3e	; 62
     c5a:	19 82       	std	Y+1, r1	; 0x01
     c5c:	80 91 29 02 	lds	r24, 0x0229
     c60:	90 91 2a 02 	lds	r25, 0x022A
     c64:	9b 83       	std	Y+3, r25	; 0x03
     c66:	8a 83       	std	Y+2, r24	; 0x02
     c68:	8a 81       	ldd	r24, Y+2	; 0x02
     c6a:	9b 81       	ldd	r25, Y+3	; 0x03
     c6c:	0f 90       	pop	r0
     c6e:	0f 90       	pop	r0
     c70:	0f 90       	pop	r0
     c72:	cf 91       	pop	r28
     c74:	df 91       	pop	r29
     c76:	08 95       	ret

00000c78 <uxTaskGetNumberOfTasks>:
     c78:	df 93       	push	r29
     c7a:	cf 93       	push	r28
     c7c:	cd b7       	in	r28, 0x3d	; 61
     c7e:	de b7       	in	r29, 0x3e	; 62
     c80:	80 91 28 02 	lds	r24, 0x0228
     c84:	cf 91       	pop	r28
     c86:	df 91       	pop	r29
     c88:	08 95       	ret

00000c8a <vTaskIncrementTick>:
     c8a:	df 93       	push	r29
     c8c:	cf 93       	push	r28
     c8e:	00 d0       	rcall	.+0      	; 0xc90 <vTaskIncrementTick+0x6>
     c90:	00 d0       	rcall	.+0      	; 0xc92 <vTaskIncrementTick+0x8>
     c92:	cd b7       	in	r28, 0x3d	; 61
     c94:	de b7       	in	r29, 0x3e	; 62
     c96:	80 91 2e 02 	lds	r24, 0x022E
     c9a:	88 23       	and	r24, r24
     c9c:	09 f0       	breq	.+2      	; 0xca0 <vTaskIncrementTick+0x16>
     c9e:	bb c0       	rjmp	.+374    	; 0xe16 <vTaskIncrementTick+0x18c>
     ca0:	80 91 29 02 	lds	r24, 0x0229
     ca4:	90 91 2a 02 	lds	r25, 0x022A
     ca8:	01 96       	adiw	r24, 0x01	; 1
     caa:	90 93 2a 02 	sts	0x022A, r25
     cae:	80 93 29 02 	sts	0x0229, r24
     cb2:	80 91 29 02 	lds	r24, 0x0229
     cb6:	90 91 2a 02 	lds	r25, 0x022A
     cba:	00 97       	sbiw	r24, 0x00	; 0
     cbc:	d1 f5       	brne	.+116    	; 0xd32 <vTaskIncrementTick+0xa8>
     cbe:	80 91 69 02 	lds	r24, 0x0269
     cc2:	90 91 6a 02 	lds	r25, 0x026A
     cc6:	9c 83       	std	Y+4, r25	; 0x04
     cc8:	8b 83       	std	Y+3, r24	; 0x03
     cca:	80 91 6b 02 	lds	r24, 0x026B
     cce:	90 91 6c 02 	lds	r25, 0x026C
     cd2:	90 93 6a 02 	sts	0x026A, r25
     cd6:	80 93 69 02 	sts	0x0269, r24
     cda:	8b 81       	ldd	r24, Y+3	; 0x03
     cdc:	9c 81       	ldd	r25, Y+4	; 0x04
     cde:	90 93 6c 02 	sts	0x026C, r25
     ce2:	80 93 6b 02 	sts	0x026B, r24
     ce6:	80 91 31 02 	lds	r24, 0x0231
     cea:	8f 5f       	subi	r24, 0xFF	; 255
     cec:	80 93 31 02 	sts	0x0231, r24
     cf0:	e0 91 69 02 	lds	r30, 0x0269
     cf4:	f0 91 6a 02 	lds	r31, 0x026A
     cf8:	80 81       	ld	r24, Z
     cfa:	88 23       	and	r24, r24
     cfc:	39 f4       	brne	.+14     	; 0xd0c <vTaskIncrementTick+0x82>
     cfe:	8f ef       	ldi	r24, 0xFF	; 255
     d00:	9f ef       	ldi	r25, 0xFF	; 255
     d02:	90 93 1d 02 	sts	0x021D, r25
     d06:	80 93 1c 02 	sts	0x021C, r24
     d0a:	13 c0       	rjmp	.+38     	; 0xd32 <vTaskIncrementTick+0xa8>
     d0c:	e0 91 69 02 	lds	r30, 0x0269
     d10:	f0 91 6a 02 	lds	r31, 0x026A
     d14:	05 80       	ldd	r0, Z+5	; 0x05
     d16:	f6 81       	ldd	r31, Z+6	; 0x06
     d18:	e0 2d       	mov	r30, r0
     d1a:	86 81       	ldd	r24, Z+6	; 0x06
     d1c:	97 81       	ldd	r25, Z+7	; 0x07
     d1e:	9e 83       	std	Y+6, r25	; 0x06
     d20:	8d 83       	std	Y+5, r24	; 0x05
     d22:	ed 81       	ldd	r30, Y+5	; 0x05
     d24:	fe 81       	ldd	r31, Y+6	; 0x06
     d26:	82 81       	ldd	r24, Z+2	; 0x02
     d28:	93 81       	ldd	r25, Z+3	; 0x03
     d2a:	90 93 1d 02 	sts	0x021D, r25
     d2e:	80 93 1c 02 	sts	0x021C, r24
     d32:	20 91 29 02 	lds	r18, 0x0229
     d36:	30 91 2a 02 	lds	r19, 0x022A
     d3a:	80 91 1c 02 	lds	r24, 0x021C
     d3e:	90 91 1d 02 	lds	r25, 0x021D
     d42:	28 17       	cp	r18, r24
     d44:	39 07       	cpc	r19, r25
     d46:	08 f4       	brcc	.+2      	; 0xd4a <vTaskIncrementTick+0xc0>
     d48:	6b c0       	rjmp	.+214    	; 0xe20 <vTaskIncrementTick+0x196>
     d4a:	e0 91 69 02 	lds	r30, 0x0269
     d4e:	f0 91 6a 02 	lds	r31, 0x026A
     d52:	80 81       	ld	r24, Z
     d54:	88 23       	and	r24, r24
     d56:	39 f4       	brne	.+14     	; 0xd66 <vTaskIncrementTick+0xdc>
     d58:	8f ef       	ldi	r24, 0xFF	; 255
     d5a:	9f ef       	ldi	r25, 0xFF	; 255
     d5c:	90 93 1d 02 	sts	0x021D, r25
     d60:	80 93 1c 02 	sts	0x021C, r24
     d64:	5d c0       	rjmp	.+186    	; 0xe20 <vTaskIncrementTick+0x196>
     d66:	e0 91 69 02 	lds	r30, 0x0269
     d6a:	f0 91 6a 02 	lds	r31, 0x026A
     d6e:	05 80       	ldd	r0, Z+5	; 0x05
     d70:	f6 81       	ldd	r31, Z+6	; 0x06
     d72:	e0 2d       	mov	r30, r0
     d74:	86 81       	ldd	r24, Z+6	; 0x06
     d76:	97 81       	ldd	r25, Z+7	; 0x07
     d78:	9e 83       	std	Y+6, r25	; 0x06
     d7a:	8d 83       	std	Y+5, r24	; 0x05
     d7c:	ed 81       	ldd	r30, Y+5	; 0x05
     d7e:	fe 81       	ldd	r31, Y+6	; 0x06
     d80:	82 81       	ldd	r24, Z+2	; 0x02
     d82:	93 81       	ldd	r25, Z+3	; 0x03
     d84:	9a 83       	std	Y+2, r25	; 0x02
     d86:	89 83       	std	Y+1, r24	; 0x01
     d88:	20 91 29 02 	lds	r18, 0x0229
     d8c:	30 91 2a 02 	lds	r19, 0x022A
     d90:	89 81       	ldd	r24, Y+1	; 0x01
     d92:	9a 81       	ldd	r25, Y+2	; 0x02
     d94:	28 17       	cp	r18, r24
     d96:	39 07       	cpc	r19, r25
     d98:	38 f4       	brcc	.+14     	; 0xda8 <vTaskIncrementTick+0x11e>
     d9a:	89 81       	ldd	r24, Y+1	; 0x01
     d9c:	9a 81       	ldd	r25, Y+2	; 0x02
     d9e:	90 93 1d 02 	sts	0x021D, r25
     da2:	80 93 1c 02 	sts	0x021C, r24
     da6:	3c c0       	rjmp	.+120    	; 0xe20 <vTaskIncrementTick+0x196>
     da8:	8d 81       	ldd	r24, Y+5	; 0x05
     daa:	9e 81       	ldd	r25, Y+6	; 0x06
     dac:	02 96       	adiw	r24, 0x02	; 2
     dae:	0e 94 94 11 	call	0x2328	; 0x2328 <uxListRemove>
     db2:	ed 81       	ldd	r30, Y+5	; 0x05
     db4:	fe 81       	ldd	r31, Y+6	; 0x06
     db6:	84 89       	ldd	r24, Z+20	; 0x14
     db8:	95 89       	ldd	r25, Z+21	; 0x15
     dba:	00 97       	sbiw	r24, 0x00	; 0
     dbc:	29 f0       	breq	.+10     	; 0xdc8 <vTaskIncrementTick+0x13e>
     dbe:	8d 81       	ldd	r24, Y+5	; 0x05
     dc0:	9e 81       	ldd	r25, Y+6	; 0x06
     dc2:	0c 96       	adiw	r24, 0x0c	; 12
     dc4:	0e 94 94 11 	call	0x2328	; 0x2328 <uxListRemove>
     dc8:	ed 81       	ldd	r30, Y+5	; 0x05
     dca:	fe 81       	ldd	r31, Y+6	; 0x06
     dcc:	96 89       	ldd	r25, Z+22	; 0x16
     dce:	80 91 2c 02 	lds	r24, 0x022C
     dd2:	89 17       	cp	r24, r25
     dd4:	28 f4       	brcc	.+10     	; 0xde0 <vTaskIncrementTick+0x156>
     dd6:	ed 81       	ldd	r30, Y+5	; 0x05
     dd8:	fe 81       	ldd	r31, Y+6	; 0x06
     dda:	86 89       	ldd	r24, Z+22	; 0x16
     ddc:	80 93 2c 02 	sts	0x022C, r24
     de0:	ed 81       	ldd	r30, Y+5	; 0x05
     de2:	fe 81       	ldd	r31, Y+6	; 0x06
     de4:	86 89       	ldd	r24, Z+22	; 0x16
     de6:	28 2f       	mov	r18, r24
     de8:	30 e0       	ldi	r19, 0x00	; 0
     dea:	c9 01       	movw	r24, r18
     dec:	88 0f       	add	r24, r24
     dee:	99 1f       	adc	r25, r25
     df0:	88 0f       	add	r24, r24
     df2:	99 1f       	adc	r25, r25
     df4:	88 0f       	add	r24, r24
     df6:	99 1f       	adc	r25, r25
     df8:	82 0f       	add	r24, r18
     dfa:	93 1f       	adc	r25, r19
     dfc:	ac 01       	movw	r20, r24
     dfe:	4d 5c       	subi	r20, 0xCD	; 205
     e00:	5d 4f       	sbci	r21, 0xFD	; 253
     e02:	8d 81       	ldd	r24, Y+5	; 0x05
     e04:	9e 81       	ldd	r25, Y+6	; 0x06
     e06:	9c 01       	movw	r18, r24
     e08:	2e 5f       	subi	r18, 0xFE	; 254
     e0a:	3f 4f       	sbci	r19, 0xFF	; 255
     e0c:	ca 01       	movw	r24, r20
     e0e:	b9 01       	movw	r22, r18
     e10:	0e 94 dd 10 	call	0x21ba	; 0x21ba <vListInsertEnd>
     e14:	9a cf       	rjmp	.-204    	; 0xd4a <vTaskIncrementTick+0xc0>
     e16:	80 91 2f 02 	lds	r24, 0x022F
     e1a:	8f 5f       	subi	r24, 0xFF	; 255
     e1c:	80 93 2f 02 	sts	0x022F, r24
     e20:	26 96       	adiw	r28, 0x06	; 6
     e22:	0f b6       	in	r0, 0x3f	; 63
     e24:	f8 94       	cli
     e26:	de bf       	out	0x3e, r29	; 62
     e28:	0f be       	out	0x3f, r0	; 63
     e2a:	cd bf       	out	0x3d, r28	; 61
     e2c:	cf 91       	pop	r28
     e2e:	df 91       	pop	r29
     e30:	08 95       	ret

00000e32 <vTaskSwitchContext>:
     e32:	df 93       	push	r29
     e34:	cf 93       	push	r28
     e36:	0f 92       	push	r0
     e38:	0f 92       	push	r0
     e3a:	cd b7       	in	r28, 0x3d	; 61
     e3c:	de b7       	in	r29, 0x3e	; 62
     e3e:	80 91 2e 02 	lds	r24, 0x022E
     e42:	88 23       	and	r24, r24
     e44:	21 f0       	breq	.+8      	; 0xe4e <vTaskSwitchContext+0x1c>
     e46:	81 e0       	ldi	r24, 0x01	; 1
     e48:	80 93 30 02 	sts	0x0230, r24
     e4c:	70 c0       	rjmp	.+224    	; 0xf2e <vTaskSwitchContext+0xfc>
     e4e:	e0 91 26 02 	lds	r30, 0x0226
     e52:	f0 91 27 02 	lds	r31, 0x0227
     e56:	20 81       	ld	r18, Z
     e58:	31 81       	ldd	r19, Z+1	; 0x01
     e5a:	e0 91 26 02 	lds	r30, 0x0226
     e5e:	f0 91 27 02 	lds	r31, 0x0227
     e62:	87 89       	ldd	r24, Z+23	; 0x17
     e64:	90 8d       	ldd	r25, Z+24	; 0x18
     e66:	82 17       	cp	r24, r18
     e68:	93 07       	cpc	r25, r19
     e6a:	90 f0       	brcs	.+36     	; 0xe90 <vTaskSwitchContext+0x5e>
     e6c:	80 91 26 02 	lds	r24, 0x0226
     e70:	90 91 27 02 	lds	r25, 0x0227
     e74:	20 91 26 02 	lds	r18, 0x0226
     e78:	30 91 27 02 	lds	r19, 0x0227
     e7c:	27 5e       	subi	r18, 0xE7	; 231
     e7e:	3f 4f       	sbci	r19, 0xFF	; 255
     e80:	b9 01       	movw	r22, r18
     e82:	0e 94 a5 00 	call	0x14a	; 0x14a <vApplicationStackOverflowHook>
     e86:	80 91 2c 02 	lds	r24, 0x022C
     e8a:	81 50       	subi	r24, 0x01	; 1
     e8c:	80 93 2c 02 	sts	0x022C, r24
     e90:	80 91 2c 02 	lds	r24, 0x022C
     e94:	28 2f       	mov	r18, r24
     e96:	30 e0       	ldi	r19, 0x00	; 0
     e98:	c9 01       	movw	r24, r18
     e9a:	88 0f       	add	r24, r24
     e9c:	99 1f       	adc	r25, r25
     e9e:	88 0f       	add	r24, r24
     ea0:	99 1f       	adc	r25, r25
     ea2:	88 0f       	add	r24, r24
     ea4:	99 1f       	adc	r25, r25
     ea6:	82 0f       	add	r24, r18
     ea8:	93 1f       	adc	r25, r19
     eaa:	fc 01       	movw	r30, r24
     eac:	ed 5c       	subi	r30, 0xCD	; 205
     eae:	fd 4f       	sbci	r31, 0xFD	; 253
     eb0:	80 81       	ld	r24, Z
     eb2:	88 23       	and	r24, r24
     eb4:	41 f3       	breq	.-48     	; 0xe86 <vTaskSwitchContext+0x54>
     eb6:	80 91 2c 02 	lds	r24, 0x022C
     eba:	28 2f       	mov	r18, r24
     ebc:	30 e0       	ldi	r19, 0x00	; 0
     ebe:	c9 01       	movw	r24, r18
     ec0:	88 0f       	add	r24, r24
     ec2:	99 1f       	adc	r25, r25
     ec4:	88 0f       	add	r24, r24
     ec6:	99 1f       	adc	r25, r25
     ec8:	88 0f       	add	r24, r24
     eca:	99 1f       	adc	r25, r25
     ecc:	82 0f       	add	r24, r18
     ece:	93 1f       	adc	r25, r19
     ed0:	8d 5c       	subi	r24, 0xCD	; 205
     ed2:	9d 4f       	sbci	r25, 0xFD	; 253
     ed4:	9a 83       	std	Y+2, r25	; 0x02
     ed6:	89 83       	std	Y+1, r24	; 0x01
     ed8:	e9 81       	ldd	r30, Y+1	; 0x01
     eda:	fa 81       	ldd	r31, Y+2	; 0x02
     edc:	01 80       	ldd	r0, Z+1	; 0x01
     ede:	f2 81       	ldd	r31, Z+2	; 0x02
     ee0:	e0 2d       	mov	r30, r0
     ee2:	82 81       	ldd	r24, Z+2	; 0x02
     ee4:	93 81       	ldd	r25, Z+3	; 0x03
     ee6:	e9 81       	ldd	r30, Y+1	; 0x01
     ee8:	fa 81       	ldd	r31, Y+2	; 0x02
     eea:	92 83       	std	Z+2, r25	; 0x02
     eec:	81 83       	std	Z+1, r24	; 0x01
     eee:	e9 81       	ldd	r30, Y+1	; 0x01
     ef0:	fa 81       	ldd	r31, Y+2	; 0x02
     ef2:	21 81       	ldd	r18, Z+1	; 0x01
     ef4:	32 81       	ldd	r19, Z+2	; 0x02
     ef6:	89 81       	ldd	r24, Y+1	; 0x01
     ef8:	9a 81       	ldd	r25, Y+2	; 0x02
     efa:	03 96       	adiw	r24, 0x03	; 3
     efc:	28 17       	cp	r18, r24
     efe:	39 07       	cpc	r19, r25
     f00:	59 f4       	brne	.+22     	; 0xf18 <vTaskSwitchContext+0xe6>
     f02:	e9 81       	ldd	r30, Y+1	; 0x01
     f04:	fa 81       	ldd	r31, Y+2	; 0x02
     f06:	01 80       	ldd	r0, Z+1	; 0x01
     f08:	f2 81       	ldd	r31, Z+2	; 0x02
     f0a:	e0 2d       	mov	r30, r0
     f0c:	82 81       	ldd	r24, Z+2	; 0x02
     f0e:	93 81       	ldd	r25, Z+3	; 0x03
     f10:	e9 81       	ldd	r30, Y+1	; 0x01
     f12:	fa 81       	ldd	r31, Y+2	; 0x02
     f14:	92 83       	std	Z+2, r25	; 0x02
     f16:	81 83       	std	Z+1, r24	; 0x01
     f18:	e9 81       	ldd	r30, Y+1	; 0x01
     f1a:	fa 81       	ldd	r31, Y+2	; 0x02
     f1c:	01 80       	ldd	r0, Z+1	; 0x01
     f1e:	f2 81       	ldd	r31, Z+2	; 0x02
     f20:	e0 2d       	mov	r30, r0
     f22:	86 81       	ldd	r24, Z+6	; 0x06
     f24:	97 81       	ldd	r25, Z+7	; 0x07
     f26:	90 93 27 02 	sts	0x0227, r25
     f2a:	80 93 26 02 	sts	0x0226, r24
     f2e:	0f 90       	pop	r0
     f30:	0f 90       	pop	r0
     f32:	cf 91       	pop	r28
     f34:	df 91       	pop	r29
     f36:	08 95       	ret

00000f38 <vTaskPlaceOnEventList>:
     f38:	df 93       	push	r29
     f3a:	cf 93       	push	r28
     f3c:	00 d0       	rcall	.+0      	; 0xf3e <vTaskPlaceOnEventList+0x6>
     f3e:	00 d0       	rcall	.+0      	; 0xf40 <vTaskPlaceOnEventList+0x8>
     f40:	cd b7       	in	r28, 0x3d	; 61
     f42:	de b7       	in	r29, 0x3e	; 62
     f44:	9c 83       	std	Y+4, r25	; 0x04
     f46:	8b 83       	std	Y+3, r24	; 0x03
     f48:	7e 83       	std	Y+6, r23	; 0x06
     f4a:	6d 83       	std	Y+5, r22	; 0x05
     f4c:	4b 81       	ldd	r20, Y+3	; 0x03
     f4e:	5c 81       	ldd	r21, Y+4	; 0x04
     f50:	80 91 26 02 	lds	r24, 0x0226
     f54:	90 91 27 02 	lds	r25, 0x0227
     f58:	9c 01       	movw	r18, r24
     f5a:	24 5f       	subi	r18, 0xF4	; 244
     f5c:	3f 4f       	sbci	r19, 0xFF	; 255
     f5e:	ca 01       	movw	r24, r20
     f60:	b9 01       	movw	r22, r18
     f62:	0e 94 28 11 	call	0x2250	; 0x2250 <vListInsert>
     f66:	80 91 26 02 	lds	r24, 0x0226
     f6a:	90 91 27 02 	lds	r25, 0x0227
     f6e:	02 96       	adiw	r24, 0x02	; 2
     f70:	0e 94 94 11 	call	0x2328	; 0x2328 <uxListRemove>
     f74:	8d 81       	ldd	r24, Y+5	; 0x05
     f76:	9e 81       	ldd	r25, Y+6	; 0x06
     f78:	2f ef       	ldi	r18, 0xFF	; 255
     f7a:	8f 3f       	cpi	r24, 0xFF	; 255
     f7c:	92 07       	cpc	r25, r18
     f7e:	69 f4       	brne	.+26     	; 0xf9a <vTaskPlaceOnEventList+0x62>
     f80:	80 91 26 02 	lds	r24, 0x0226
     f84:	90 91 27 02 	lds	r25, 0x0227
     f88:	9c 01       	movw	r18, r24
     f8a:	2e 5f       	subi	r18, 0xFE	; 254
     f8c:	3f 4f       	sbci	r19, 0xFF	; 255
     f8e:	86 e7       	ldi	r24, 0x76	; 118
     f90:	92 e0       	ldi	r25, 0x02	; 2
     f92:	b9 01       	movw	r22, r18
     f94:	0e 94 dd 10 	call	0x21ba	; 0x21ba <vListInsertEnd>
     f98:	0e c0       	rjmp	.+28     	; 0xfb6 <vTaskPlaceOnEventList+0x7e>
     f9a:	20 91 29 02 	lds	r18, 0x0229
     f9e:	30 91 2a 02 	lds	r19, 0x022A
     fa2:	8d 81       	ldd	r24, Y+5	; 0x05
     fa4:	9e 81       	ldd	r25, Y+6	; 0x06
     fa6:	82 0f       	add	r24, r18
     fa8:	93 1f       	adc	r25, r19
     faa:	9a 83       	std	Y+2, r25	; 0x02
     fac:	89 83       	std	Y+1, r24	; 0x01
     fae:	89 81       	ldd	r24, Y+1	; 0x01
     fb0:	9a 81       	ldd	r25, Y+2	; 0x02
     fb2:	0e 94 87 09 	call	0x130e	; 0x130e <prvAddCurrentTaskToDelayedList>
     fb6:	26 96       	adiw	r28, 0x06	; 6
     fb8:	0f b6       	in	r0, 0x3f	; 63
     fba:	f8 94       	cli
     fbc:	de bf       	out	0x3e, r29	; 62
     fbe:	0f be       	out	0x3f, r0	; 63
     fc0:	cd bf       	out	0x3d, r28	; 61
     fc2:	cf 91       	pop	r28
     fc4:	df 91       	pop	r29
     fc6:	08 95       	ret

00000fc8 <xTaskRemoveFromEventList>:
     fc8:	df 93       	push	r29
     fca:	cf 93       	push	r28
     fcc:	00 d0       	rcall	.+0      	; 0xfce <xTaskRemoveFromEventList+0x6>
     fce:	0f 92       	push	r0
     fd0:	0f 92       	push	r0
     fd2:	cd b7       	in	r28, 0x3d	; 61
     fd4:	de b7       	in	r29, 0x3e	; 62
     fd6:	9d 83       	std	Y+5, r25	; 0x05
     fd8:	8c 83       	std	Y+4, r24	; 0x04
     fda:	ec 81       	ldd	r30, Y+4	; 0x04
     fdc:	fd 81       	ldd	r31, Y+5	; 0x05
     fde:	05 80       	ldd	r0, Z+5	; 0x05
     fe0:	f6 81       	ldd	r31, Z+6	; 0x06
     fe2:	e0 2d       	mov	r30, r0
     fe4:	86 81       	ldd	r24, Z+6	; 0x06
     fe6:	97 81       	ldd	r25, Z+7	; 0x07
     fe8:	9b 83       	std	Y+3, r25	; 0x03
     fea:	8a 83       	std	Y+2, r24	; 0x02
     fec:	8a 81       	ldd	r24, Y+2	; 0x02
     fee:	9b 81       	ldd	r25, Y+3	; 0x03
     ff0:	0c 96       	adiw	r24, 0x0c	; 12
     ff2:	0e 94 94 11 	call	0x2328	; 0x2328 <uxListRemove>
     ff6:	80 91 2e 02 	lds	r24, 0x022E
     ffa:	88 23       	and	r24, r24
     ffc:	61 f5       	brne	.+88     	; 0x1056 <xTaskRemoveFromEventList+0x8e>
     ffe:	8a 81       	ldd	r24, Y+2	; 0x02
    1000:	9b 81       	ldd	r25, Y+3	; 0x03
    1002:	02 96       	adiw	r24, 0x02	; 2
    1004:	0e 94 94 11 	call	0x2328	; 0x2328 <uxListRemove>
    1008:	ea 81       	ldd	r30, Y+2	; 0x02
    100a:	fb 81       	ldd	r31, Y+3	; 0x03
    100c:	96 89       	ldd	r25, Z+22	; 0x16
    100e:	80 91 2c 02 	lds	r24, 0x022C
    1012:	89 17       	cp	r24, r25
    1014:	28 f4       	brcc	.+10     	; 0x1020 <xTaskRemoveFromEventList+0x58>
    1016:	ea 81       	ldd	r30, Y+2	; 0x02
    1018:	fb 81       	ldd	r31, Y+3	; 0x03
    101a:	86 89       	ldd	r24, Z+22	; 0x16
    101c:	80 93 2c 02 	sts	0x022C, r24
    1020:	ea 81       	ldd	r30, Y+2	; 0x02
    1022:	fb 81       	ldd	r31, Y+3	; 0x03
    1024:	86 89       	ldd	r24, Z+22	; 0x16
    1026:	28 2f       	mov	r18, r24
    1028:	30 e0       	ldi	r19, 0x00	; 0
    102a:	c9 01       	movw	r24, r18
    102c:	88 0f       	add	r24, r24
    102e:	99 1f       	adc	r25, r25
    1030:	88 0f       	add	r24, r24
    1032:	99 1f       	adc	r25, r25
    1034:	88 0f       	add	r24, r24
    1036:	99 1f       	adc	r25, r25
    1038:	82 0f       	add	r24, r18
    103a:	93 1f       	adc	r25, r19
    103c:	ac 01       	movw	r20, r24
    103e:	4d 5c       	subi	r20, 0xCD	; 205
    1040:	5d 4f       	sbci	r21, 0xFD	; 253
    1042:	8a 81       	ldd	r24, Y+2	; 0x02
    1044:	9b 81       	ldd	r25, Y+3	; 0x03
    1046:	9c 01       	movw	r18, r24
    1048:	2e 5f       	subi	r18, 0xFE	; 254
    104a:	3f 4f       	sbci	r19, 0xFF	; 255
    104c:	ca 01       	movw	r24, r20
    104e:	b9 01       	movw	r22, r18
    1050:	0e 94 dd 10 	call	0x21ba	; 0x21ba <vListInsertEnd>
    1054:	0a c0       	rjmp	.+20     	; 0x106a <xTaskRemoveFromEventList+0xa2>
    1056:	8a 81       	ldd	r24, Y+2	; 0x02
    1058:	9b 81       	ldd	r25, Y+3	; 0x03
    105a:	9c 01       	movw	r18, r24
    105c:	24 5f       	subi	r18, 0xF4	; 244
    105e:	3f 4f       	sbci	r19, 0xFF	; 255
    1060:	8d e6       	ldi	r24, 0x6D	; 109
    1062:	92 e0       	ldi	r25, 0x02	; 2
    1064:	b9 01       	movw	r22, r18
    1066:	0e 94 dd 10 	call	0x21ba	; 0x21ba <vListInsertEnd>
    106a:	ea 81       	ldd	r30, Y+2	; 0x02
    106c:	fb 81       	ldd	r31, Y+3	; 0x03
    106e:	96 89       	ldd	r25, Z+22	; 0x16
    1070:	e0 91 26 02 	lds	r30, 0x0226
    1074:	f0 91 27 02 	lds	r31, 0x0227
    1078:	86 89       	ldd	r24, Z+22	; 0x16
    107a:	98 17       	cp	r25, r24
    107c:	18 f0       	brcs	.+6      	; 0x1084 <xTaskRemoveFromEventList+0xbc>
    107e:	81 e0       	ldi	r24, 0x01	; 1
    1080:	89 83       	std	Y+1, r24	; 0x01
    1082:	01 c0       	rjmp	.+2      	; 0x1086 <xTaskRemoveFromEventList+0xbe>
    1084:	19 82       	std	Y+1, r1	; 0x01
    1086:	89 81       	ldd	r24, Y+1	; 0x01
    1088:	0f 90       	pop	r0
    108a:	0f 90       	pop	r0
    108c:	0f 90       	pop	r0
    108e:	0f 90       	pop	r0
    1090:	0f 90       	pop	r0
    1092:	cf 91       	pop	r28
    1094:	df 91       	pop	r29
    1096:	08 95       	ret

00001098 <vTaskSetTimeOutState>:
    1098:	df 93       	push	r29
    109a:	cf 93       	push	r28
    109c:	0f 92       	push	r0
    109e:	0f 92       	push	r0
    10a0:	cd b7       	in	r28, 0x3d	; 61
    10a2:	de b7       	in	r29, 0x3e	; 62
    10a4:	9a 83       	std	Y+2, r25	; 0x02
    10a6:	89 83       	std	Y+1, r24	; 0x01
    10a8:	80 91 31 02 	lds	r24, 0x0231
    10ac:	e9 81       	ldd	r30, Y+1	; 0x01
    10ae:	fa 81       	ldd	r31, Y+2	; 0x02
    10b0:	80 83       	st	Z, r24
    10b2:	80 91 29 02 	lds	r24, 0x0229
    10b6:	90 91 2a 02 	lds	r25, 0x022A
    10ba:	e9 81       	ldd	r30, Y+1	; 0x01
    10bc:	fa 81       	ldd	r31, Y+2	; 0x02
    10be:	92 83       	std	Z+2, r25	; 0x02
    10c0:	81 83       	std	Z+1, r24	; 0x01
    10c2:	0f 90       	pop	r0
    10c4:	0f 90       	pop	r0
    10c6:	cf 91       	pop	r28
    10c8:	df 91       	pop	r29
    10ca:	08 95       	ret

000010cc <xTaskCheckForTimeOut>:
    10cc:	df 93       	push	r29
    10ce:	cf 93       	push	r28
    10d0:	00 d0       	rcall	.+0      	; 0x10d2 <xTaskCheckForTimeOut+0x6>
    10d2:	0f 92       	push	r0
    10d4:	0f 92       	push	r0
    10d6:	cd b7       	in	r28, 0x3d	; 61
    10d8:	de b7       	in	r29, 0x3e	; 62
    10da:	9b 83       	std	Y+3, r25	; 0x03
    10dc:	8a 83       	std	Y+2, r24	; 0x02
    10de:	7d 83       	std	Y+5, r23	; 0x05
    10e0:	6c 83       	std	Y+4, r22	; 0x04
    10e2:	0f b6       	in	r0, 0x3f	; 63
    10e4:	f8 94       	cli
    10e6:	0f 92       	push	r0
    10e8:	ec 81       	ldd	r30, Y+4	; 0x04
    10ea:	fd 81       	ldd	r31, Y+5	; 0x05
    10ec:	80 81       	ld	r24, Z
    10ee:	91 81       	ldd	r25, Z+1	; 0x01
    10f0:	2f ef       	ldi	r18, 0xFF	; 255
    10f2:	8f 3f       	cpi	r24, 0xFF	; 255
    10f4:	92 07       	cpc	r25, r18
    10f6:	11 f4       	brne	.+4      	; 0x10fc <xTaskCheckForTimeOut+0x30>
    10f8:	19 82       	std	Y+1, r1	; 0x01
    10fa:	44 c0       	rjmp	.+136    	; 0x1184 <xTaskCheckForTimeOut+0xb8>
    10fc:	ea 81       	ldd	r30, Y+2	; 0x02
    10fe:	fb 81       	ldd	r31, Y+3	; 0x03
    1100:	90 81       	ld	r25, Z
    1102:	80 91 31 02 	lds	r24, 0x0231
    1106:	98 17       	cp	r25, r24
    1108:	71 f0       	breq	.+28     	; 0x1126 <xTaskCheckForTimeOut+0x5a>
    110a:	ea 81       	ldd	r30, Y+2	; 0x02
    110c:	fb 81       	ldd	r31, Y+3	; 0x03
    110e:	21 81       	ldd	r18, Z+1	; 0x01
    1110:	32 81       	ldd	r19, Z+2	; 0x02
    1112:	80 91 29 02 	lds	r24, 0x0229
    1116:	90 91 2a 02 	lds	r25, 0x022A
    111a:	82 17       	cp	r24, r18
    111c:	93 07       	cpc	r25, r19
    111e:	18 f0       	brcs	.+6      	; 0x1126 <xTaskCheckForTimeOut+0x5a>
    1120:	81 e0       	ldi	r24, 0x01	; 1
    1122:	89 83       	std	Y+1, r24	; 0x01
    1124:	2f c0       	rjmp	.+94     	; 0x1184 <xTaskCheckForTimeOut+0xb8>
    1126:	20 91 29 02 	lds	r18, 0x0229
    112a:	30 91 2a 02 	lds	r19, 0x022A
    112e:	ea 81       	ldd	r30, Y+2	; 0x02
    1130:	fb 81       	ldd	r31, Y+3	; 0x03
    1132:	81 81       	ldd	r24, Z+1	; 0x01
    1134:	92 81       	ldd	r25, Z+2	; 0x02
    1136:	28 1b       	sub	r18, r24
    1138:	39 0b       	sbc	r19, r25
    113a:	ec 81       	ldd	r30, Y+4	; 0x04
    113c:	fd 81       	ldd	r31, Y+5	; 0x05
    113e:	80 81       	ld	r24, Z
    1140:	91 81       	ldd	r25, Z+1	; 0x01
    1142:	28 17       	cp	r18, r24
    1144:	39 07       	cpc	r19, r25
    1146:	e0 f4       	brcc	.+56     	; 0x1180 <xTaskCheckForTimeOut+0xb4>
    1148:	ec 81       	ldd	r30, Y+4	; 0x04
    114a:	fd 81       	ldd	r31, Y+5	; 0x05
    114c:	40 81       	ld	r20, Z
    114e:	51 81       	ldd	r21, Z+1	; 0x01
    1150:	ea 81       	ldd	r30, Y+2	; 0x02
    1152:	fb 81       	ldd	r31, Y+3	; 0x03
    1154:	21 81       	ldd	r18, Z+1	; 0x01
    1156:	32 81       	ldd	r19, Z+2	; 0x02
    1158:	80 91 29 02 	lds	r24, 0x0229
    115c:	90 91 2a 02 	lds	r25, 0x022A
    1160:	b9 01       	movw	r22, r18
    1162:	68 1b       	sub	r22, r24
    1164:	79 0b       	sbc	r23, r25
    1166:	cb 01       	movw	r24, r22
    1168:	84 0f       	add	r24, r20
    116a:	95 1f       	adc	r25, r21
    116c:	ec 81       	ldd	r30, Y+4	; 0x04
    116e:	fd 81       	ldd	r31, Y+5	; 0x05
    1170:	91 83       	std	Z+1, r25	; 0x01
    1172:	80 83       	st	Z, r24
    1174:	8a 81       	ldd	r24, Y+2	; 0x02
    1176:	9b 81       	ldd	r25, Y+3	; 0x03
    1178:	0e 94 4c 08 	call	0x1098	; 0x1098 <vTaskSetTimeOutState>
    117c:	19 82       	std	Y+1, r1	; 0x01
    117e:	02 c0       	rjmp	.+4      	; 0x1184 <xTaskCheckForTimeOut+0xb8>
    1180:	81 e0       	ldi	r24, 0x01	; 1
    1182:	89 83       	std	Y+1, r24	; 0x01
    1184:	0f 90       	pop	r0
    1186:	0f be       	out	0x3f, r0	; 63
    1188:	89 81       	ldd	r24, Y+1	; 0x01
    118a:	0f 90       	pop	r0
    118c:	0f 90       	pop	r0
    118e:	0f 90       	pop	r0
    1190:	0f 90       	pop	r0
    1192:	0f 90       	pop	r0
    1194:	cf 91       	pop	r28
    1196:	df 91       	pop	r29
    1198:	08 95       	ret

0000119a <vTaskMissedYield>:
    119a:	df 93       	push	r29
    119c:	cf 93       	push	r28
    119e:	cd b7       	in	r28, 0x3d	; 61
    11a0:	de b7       	in	r29, 0x3e	; 62
    11a2:	81 e0       	ldi	r24, 0x01	; 1
    11a4:	80 93 30 02 	sts	0x0230, r24
    11a8:	cf 91       	pop	r28
    11aa:	df 91       	pop	r29
    11ac:	08 95       	ret

000011ae <prvIdleTask>:
    11ae:	df 93       	push	r29
    11b0:	cf 93       	push	r28
    11b2:	0f 92       	push	r0
    11b4:	0f 92       	push	r0
    11b6:	cd b7       	in	r28, 0x3d	; 61
    11b8:	de b7       	in	r29, 0x3e	; 62
    11ba:	9a 83       	std	Y+2, r25	; 0x02
    11bc:	89 83       	std	Y+1, r24	; 0x01
    11be:	0e 94 80 09 	call	0x1300	; 0x1300 <prvCheckTasksWaitingTermination>
    11c2:	80 91 33 02 	lds	r24, 0x0233
    11c6:	82 30       	cpi	r24, 0x02	; 2
    11c8:	d0 f3       	brcs	.-12     	; 0x11be <prvIdleTask+0x10>
    11ca:	0e 94 01 17 	call	0x2e02	; 0x2e02 <vPortYield>
    11ce:	f7 cf       	rjmp	.-18     	; 0x11be <prvIdleTask+0x10>

000011d0 <prvInitialiseTCBVariables>:
    11d0:	0f 93       	push	r16
    11d2:	1f 93       	push	r17
    11d4:	df 93       	push	r29
    11d6:	cf 93       	push	r28
    11d8:	cd b7       	in	r28, 0x3d	; 61
    11da:	de b7       	in	r29, 0x3e	; 62
    11dc:	29 97       	sbiw	r28, 0x09	; 9
    11de:	0f b6       	in	r0, 0x3f	; 63
    11e0:	f8 94       	cli
    11e2:	de bf       	out	0x3e, r29	; 62
    11e4:	0f be       	out	0x3f, r0	; 63
    11e6:	cd bf       	out	0x3d, r28	; 61
    11e8:	9a 83       	std	Y+2, r25	; 0x02
    11ea:	89 83       	std	Y+1, r24	; 0x01
    11ec:	7c 83       	std	Y+4, r23	; 0x04
    11ee:	6b 83       	std	Y+3, r22	; 0x03
    11f0:	4d 83       	std	Y+5, r20	; 0x05
    11f2:	3f 83       	std	Y+7, r19	; 0x07
    11f4:	2e 83       	std	Y+6, r18	; 0x06
    11f6:	19 87       	std	Y+9, r17	; 0x09
    11f8:	08 87       	std	Y+8, r16	; 0x08
    11fa:	89 81       	ldd	r24, Y+1	; 0x01
    11fc:	9a 81       	ldd	r25, Y+2	; 0x02
    11fe:	49 96       	adiw	r24, 0x19	; 25
    1200:	2b 81       	ldd	r18, Y+3	; 0x03
    1202:	3c 81       	ldd	r19, Y+4	; 0x04
    1204:	b9 01       	movw	r22, r18
    1206:	40 e1       	ldi	r20, 0x10	; 16
    1208:	50 e0       	ldi	r21, 0x00	; 0
    120a:	0e 94 46 20 	call	0x408c	; 0x408c <strncpy>
    120e:	e9 81       	ldd	r30, Y+1	; 0x01
    1210:	fa 81       	ldd	r31, Y+2	; 0x02
    1212:	10 a6       	std	Z+40, r1	; 0x28
    1214:	8d 81       	ldd	r24, Y+5	; 0x05
    1216:	84 30       	cpi	r24, 0x04	; 4
    1218:	10 f0       	brcs	.+4      	; 0x121e <prvInitialiseTCBVariables+0x4e>
    121a:	83 e0       	ldi	r24, 0x03	; 3
    121c:	8d 83       	std	Y+5, r24	; 0x05
    121e:	e9 81       	ldd	r30, Y+1	; 0x01
    1220:	fa 81       	ldd	r31, Y+2	; 0x02
    1222:	8d 81       	ldd	r24, Y+5	; 0x05
    1224:	86 8b       	std	Z+22, r24	; 0x16
    1226:	e9 81       	ldd	r30, Y+1	; 0x01
    1228:	fa 81       	ldd	r31, Y+2	; 0x02
    122a:	8d 81       	ldd	r24, Y+5	; 0x05
    122c:	81 a7       	std	Z+41, r24	; 0x29
    122e:	89 81       	ldd	r24, Y+1	; 0x01
    1230:	9a 81       	ldd	r25, Y+2	; 0x02
    1232:	02 96       	adiw	r24, 0x02	; 2
    1234:	0e 94 cc 10 	call	0x2198	; 0x2198 <vListInitialiseItem>
    1238:	89 81       	ldd	r24, Y+1	; 0x01
    123a:	9a 81       	ldd	r25, Y+2	; 0x02
    123c:	0c 96       	adiw	r24, 0x0c	; 12
    123e:	0e 94 cc 10 	call	0x2198	; 0x2198 <vListInitialiseItem>
    1242:	e9 81       	ldd	r30, Y+1	; 0x01
    1244:	fa 81       	ldd	r31, Y+2	; 0x02
    1246:	89 81       	ldd	r24, Y+1	; 0x01
    1248:	9a 81       	ldd	r25, Y+2	; 0x02
    124a:	91 87       	std	Z+9, r25	; 0x09
    124c:	80 87       	std	Z+8, r24	; 0x08
    124e:	8d 81       	ldd	r24, Y+5	; 0x05
    1250:	28 2f       	mov	r18, r24
    1252:	30 e0       	ldi	r19, 0x00	; 0
    1254:	84 e0       	ldi	r24, 0x04	; 4
    1256:	90 e0       	ldi	r25, 0x00	; 0
    1258:	82 1b       	sub	r24, r18
    125a:	93 0b       	sbc	r25, r19
    125c:	e9 81       	ldd	r30, Y+1	; 0x01
    125e:	fa 81       	ldd	r31, Y+2	; 0x02
    1260:	95 87       	std	Z+13, r25	; 0x0d
    1262:	84 87       	std	Z+12, r24	; 0x0c
    1264:	e9 81       	ldd	r30, Y+1	; 0x01
    1266:	fa 81       	ldd	r31, Y+2	; 0x02
    1268:	89 81       	ldd	r24, Y+1	; 0x01
    126a:	9a 81       	ldd	r25, Y+2	; 0x02
    126c:	93 8b       	std	Z+19, r25	; 0x13
    126e:	82 8b       	std	Z+18, r24	; 0x12
    1270:	29 96       	adiw	r28, 0x09	; 9
    1272:	0f b6       	in	r0, 0x3f	; 63
    1274:	f8 94       	cli
    1276:	de bf       	out	0x3e, r29	; 62
    1278:	0f be       	out	0x3f, r0	; 63
    127a:	cd bf       	out	0x3d, r28	; 61
    127c:	cf 91       	pop	r28
    127e:	df 91       	pop	r29
    1280:	1f 91       	pop	r17
    1282:	0f 91       	pop	r16
    1284:	08 95       	ret

00001286 <prvInitialiseTaskLists>:
    1286:	df 93       	push	r29
    1288:	cf 93       	push	r28
    128a:	0f 92       	push	r0
    128c:	cd b7       	in	r28, 0x3d	; 61
    128e:	de b7       	in	r29, 0x3e	; 62
    1290:	19 82       	std	Y+1, r1	; 0x01
    1292:	13 c0       	rjmp	.+38     	; 0x12ba <prvInitialiseTaskLists+0x34>
    1294:	89 81       	ldd	r24, Y+1	; 0x01
    1296:	28 2f       	mov	r18, r24
    1298:	30 e0       	ldi	r19, 0x00	; 0
    129a:	c9 01       	movw	r24, r18
    129c:	88 0f       	add	r24, r24
    129e:	99 1f       	adc	r25, r25
    12a0:	88 0f       	add	r24, r24
    12a2:	99 1f       	adc	r25, r25
    12a4:	88 0f       	add	r24, r24
    12a6:	99 1f       	adc	r25, r25
    12a8:	82 0f       	add	r24, r18
    12aa:	93 1f       	adc	r25, r19
    12ac:	8d 5c       	subi	r24, 0xCD	; 205
    12ae:	9d 4f       	sbci	r25, 0xFD	; 253
    12b0:	0e 94 a1 10 	call	0x2142	; 0x2142 <vListInitialise>
    12b4:	89 81       	ldd	r24, Y+1	; 0x01
    12b6:	8f 5f       	subi	r24, 0xFF	; 255
    12b8:	89 83       	std	Y+1, r24	; 0x01
    12ba:	89 81       	ldd	r24, Y+1	; 0x01
    12bc:	84 30       	cpi	r24, 0x04	; 4
    12be:	50 f3       	brcs	.-44     	; 0x1294 <prvInitialiseTaskLists+0xe>
    12c0:	87 e5       	ldi	r24, 0x57	; 87
    12c2:	92 e0       	ldi	r25, 0x02	; 2
    12c4:	0e 94 a1 10 	call	0x2142	; 0x2142 <vListInitialise>
    12c8:	80 e6       	ldi	r24, 0x60	; 96
    12ca:	92 e0       	ldi	r25, 0x02	; 2
    12cc:	0e 94 a1 10 	call	0x2142	; 0x2142 <vListInitialise>
    12d0:	8d e6       	ldi	r24, 0x6D	; 109
    12d2:	92 e0       	ldi	r25, 0x02	; 2
    12d4:	0e 94 a1 10 	call	0x2142	; 0x2142 <vListInitialise>
    12d8:	86 e7       	ldi	r24, 0x76	; 118
    12da:	92 e0       	ldi	r25, 0x02	; 2
    12dc:	0e 94 a1 10 	call	0x2142	; 0x2142 <vListInitialise>
    12e0:	87 e5       	ldi	r24, 0x57	; 87
    12e2:	92 e0       	ldi	r25, 0x02	; 2
    12e4:	90 93 6a 02 	sts	0x026A, r25
    12e8:	80 93 69 02 	sts	0x0269, r24
    12ec:	80 e6       	ldi	r24, 0x60	; 96
    12ee:	92 e0       	ldi	r25, 0x02	; 2
    12f0:	90 93 6c 02 	sts	0x026C, r25
    12f4:	80 93 6b 02 	sts	0x026B, r24
    12f8:	0f 90       	pop	r0
    12fa:	cf 91       	pop	r28
    12fc:	df 91       	pop	r29
    12fe:	08 95       	ret

00001300 <prvCheckTasksWaitingTermination>:
    1300:	df 93       	push	r29
    1302:	cf 93       	push	r28
    1304:	cd b7       	in	r28, 0x3d	; 61
    1306:	de b7       	in	r29, 0x3e	; 62
    1308:	cf 91       	pop	r28
    130a:	df 91       	pop	r29
    130c:	08 95       	ret

0000130e <prvAddCurrentTaskToDelayedList>:
    130e:	df 93       	push	r29
    1310:	cf 93       	push	r28
    1312:	0f 92       	push	r0
    1314:	0f 92       	push	r0
    1316:	cd b7       	in	r28, 0x3d	; 61
    1318:	de b7       	in	r29, 0x3e	; 62
    131a:	9a 83       	std	Y+2, r25	; 0x02
    131c:	89 83       	std	Y+1, r24	; 0x01
    131e:	e0 91 26 02 	lds	r30, 0x0226
    1322:	f0 91 27 02 	lds	r31, 0x0227
    1326:	89 81       	ldd	r24, Y+1	; 0x01
    1328:	9a 81       	ldd	r25, Y+2	; 0x02
    132a:	93 83       	std	Z+3, r25	; 0x03
    132c:	82 83       	std	Z+2, r24	; 0x02
    132e:	20 91 29 02 	lds	r18, 0x0229
    1332:	30 91 2a 02 	lds	r19, 0x022A
    1336:	89 81       	ldd	r24, Y+1	; 0x01
    1338:	9a 81       	ldd	r25, Y+2	; 0x02
    133a:	82 17       	cp	r24, r18
    133c:	93 07       	cpc	r25, r19
    133e:	70 f4       	brcc	.+28     	; 0x135c <prvAddCurrentTaskToDelayedList+0x4e>
    1340:	80 91 6b 02 	lds	r24, 0x026B
    1344:	90 91 6c 02 	lds	r25, 0x026C
    1348:	20 91 26 02 	lds	r18, 0x0226
    134c:	30 91 27 02 	lds	r19, 0x0227
    1350:	2e 5f       	subi	r18, 0xFE	; 254
    1352:	3f 4f       	sbci	r19, 0xFF	; 255
    1354:	b9 01       	movw	r22, r18
    1356:	0e 94 28 11 	call	0x2250	; 0x2250 <vListInsert>
    135a:	1e c0       	rjmp	.+60     	; 0x1398 <prvAddCurrentTaskToDelayedList+0x8a>
    135c:	40 91 69 02 	lds	r20, 0x0269
    1360:	50 91 6a 02 	lds	r21, 0x026A
    1364:	80 91 26 02 	lds	r24, 0x0226
    1368:	90 91 27 02 	lds	r25, 0x0227
    136c:	9c 01       	movw	r18, r24
    136e:	2e 5f       	subi	r18, 0xFE	; 254
    1370:	3f 4f       	sbci	r19, 0xFF	; 255
    1372:	ca 01       	movw	r24, r20
    1374:	b9 01       	movw	r22, r18
    1376:	0e 94 28 11 	call	0x2250	; 0x2250 <vListInsert>
    137a:	20 91 1c 02 	lds	r18, 0x021C
    137e:	30 91 1d 02 	lds	r19, 0x021D
    1382:	89 81       	ldd	r24, Y+1	; 0x01
    1384:	9a 81       	ldd	r25, Y+2	; 0x02
    1386:	82 17       	cp	r24, r18
    1388:	93 07       	cpc	r25, r19
    138a:	30 f4       	brcc	.+12     	; 0x1398 <prvAddCurrentTaskToDelayedList+0x8a>
    138c:	89 81       	ldd	r24, Y+1	; 0x01
    138e:	9a 81       	ldd	r25, Y+2	; 0x02
    1390:	90 93 1d 02 	sts	0x021D, r25
    1394:	80 93 1c 02 	sts	0x021C, r24
    1398:	0f 90       	pop	r0
    139a:	0f 90       	pop	r0
    139c:	cf 91       	pop	r28
    139e:	df 91       	pop	r29
    13a0:	08 95       	ret

000013a2 <prvAllocateTCBAndStack>:
    13a2:	df 93       	push	r29
    13a4:	cf 93       	push	r28
    13a6:	cd b7       	in	r28, 0x3d	; 61
    13a8:	de b7       	in	r29, 0x3e	; 62
    13aa:	28 97       	sbiw	r28, 0x08	; 8
    13ac:	0f b6       	in	r0, 0x3f	; 63
    13ae:	f8 94       	cli
    13b0:	de bf       	out	0x3e, r29	; 62
    13b2:	0f be       	out	0x3f, r0	; 63
    13b4:	cd bf       	out	0x3d, r28	; 61
    13b6:	9c 83       	std	Y+4, r25	; 0x04
    13b8:	8b 83       	std	Y+3, r24	; 0x03
    13ba:	7e 83       	std	Y+6, r23	; 0x06
    13bc:	6d 83       	std	Y+5, r22	; 0x05
    13be:	8a e2       	ldi	r24, 0x2A	; 42
    13c0:	90 e0       	ldi	r25, 0x00	; 0
    13c2:	0e 94 b9 14 	call	0x2972	; 0x2972 <pvPortMalloc>
    13c6:	9a 83       	std	Y+2, r25	; 0x02
    13c8:	89 83       	std	Y+1, r24	; 0x01
    13ca:	89 81       	ldd	r24, Y+1	; 0x01
    13cc:	9a 81       	ldd	r25, Y+2	; 0x02
    13ce:	00 97       	sbiw	r24, 0x00	; 0
    13d0:	69 f1       	breq	.+90     	; 0x142c <prvAllocateTCBAndStack+0x8a>
    13d2:	8d 81       	ldd	r24, Y+5	; 0x05
    13d4:	9e 81       	ldd	r25, Y+6	; 0x06
    13d6:	00 97       	sbiw	r24, 0x00	; 0
    13d8:	39 f4       	brne	.+14     	; 0x13e8 <prvAllocateTCBAndStack+0x46>
    13da:	8b 81       	ldd	r24, Y+3	; 0x03
    13dc:	9c 81       	ldd	r25, Y+4	; 0x04
    13de:	0e 94 b9 14 	call	0x2972	; 0x2972 <pvPortMalloc>
    13e2:	98 87       	std	Y+8, r25	; 0x08
    13e4:	8f 83       	std	Y+7, r24	; 0x07
    13e6:	04 c0       	rjmp	.+8      	; 0x13f0 <prvAllocateTCBAndStack+0x4e>
    13e8:	8d 81       	ldd	r24, Y+5	; 0x05
    13ea:	9e 81       	ldd	r25, Y+6	; 0x06
    13ec:	98 87       	std	Y+8, r25	; 0x08
    13ee:	8f 83       	std	Y+7, r24	; 0x07
    13f0:	e9 81       	ldd	r30, Y+1	; 0x01
    13f2:	fa 81       	ldd	r31, Y+2	; 0x02
    13f4:	8f 81       	ldd	r24, Y+7	; 0x07
    13f6:	98 85       	ldd	r25, Y+8	; 0x08
    13f8:	90 8f       	std	Z+24, r25	; 0x18
    13fa:	87 8b       	std	Z+23, r24	; 0x17
    13fc:	e9 81       	ldd	r30, Y+1	; 0x01
    13fe:	fa 81       	ldd	r31, Y+2	; 0x02
    1400:	87 89       	ldd	r24, Z+23	; 0x17
    1402:	90 8d       	ldd	r25, Z+24	; 0x18
    1404:	00 97       	sbiw	r24, 0x00	; 0
    1406:	39 f4       	brne	.+14     	; 0x1416 <prvAllocateTCBAndStack+0x74>
    1408:	89 81       	ldd	r24, Y+1	; 0x01
    140a:	9a 81       	ldd	r25, Y+2	; 0x02
    140c:	0e 94 ff 14 	call	0x29fe	; 0x29fe <vPortFree>
    1410:	1a 82       	std	Y+2, r1	; 0x02
    1412:	19 82       	std	Y+1, r1	; 0x01
    1414:	0b c0       	rjmp	.+22     	; 0x142c <prvAllocateTCBAndStack+0x8a>
    1416:	e9 81       	ldd	r30, Y+1	; 0x01
    1418:	fa 81       	ldd	r31, Y+2	; 0x02
    141a:	87 89       	ldd	r24, Z+23	; 0x17
    141c:	90 8d       	ldd	r25, Z+24	; 0x18
    141e:	2b 81       	ldd	r18, Y+3	; 0x03
    1420:	3c 81       	ldd	r19, Y+4	; 0x04
    1422:	65 ea       	ldi	r22, 0xA5	; 165
    1424:	70 e0       	ldi	r23, 0x00	; 0
    1426:	a9 01       	movw	r20, r18
    1428:	0e 94 3f 20 	call	0x407e	; 0x407e <memset>
    142c:	89 81       	ldd	r24, Y+1	; 0x01
    142e:	9a 81       	ldd	r25, Y+2	; 0x02
    1430:	28 96       	adiw	r28, 0x08	; 8
    1432:	0f b6       	in	r0, 0x3f	; 63
    1434:	f8 94       	cli
    1436:	de bf       	out	0x3e, r29	; 62
    1438:	0f be       	out	0x3f, r0	; 63
    143a:	cd bf       	out	0x3d, r28	; 61
    143c:	cf 91       	pop	r28
    143e:	df 91       	pop	r29
    1440:	08 95       	ret

00001442 <usTaskCheckFreeStackSpace>:
    1442:	df 93       	push	r29
    1444:	cf 93       	push	r28
    1446:	00 d0       	rcall	.+0      	; 0x1448 <usTaskCheckFreeStackSpace+0x6>
    1448:	0f 92       	push	r0
    144a:	cd b7       	in	r28, 0x3d	; 61
    144c:	de b7       	in	r29, 0x3e	; 62
    144e:	9a 83       	std	Y+2, r25	; 0x02
    1450:	89 83       	std	Y+1, r24	; 0x01
    1452:	1c 82       	std	Y+4, r1	; 0x04
    1454:	1b 82       	std	Y+3, r1	; 0x03
    1456:	0a c0       	rjmp	.+20     	; 0x146c <usTaskCheckFreeStackSpace+0x2a>
    1458:	89 81       	ldd	r24, Y+1	; 0x01
    145a:	9a 81       	ldd	r25, Y+2	; 0x02
    145c:	01 96       	adiw	r24, 0x01	; 1
    145e:	9a 83       	std	Y+2, r25	; 0x02
    1460:	89 83       	std	Y+1, r24	; 0x01
    1462:	8b 81       	ldd	r24, Y+3	; 0x03
    1464:	9c 81       	ldd	r25, Y+4	; 0x04
    1466:	01 96       	adiw	r24, 0x01	; 1
    1468:	9c 83       	std	Y+4, r25	; 0x04
    146a:	8b 83       	std	Y+3, r24	; 0x03
    146c:	e9 81       	ldd	r30, Y+1	; 0x01
    146e:	fa 81       	ldd	r31, Y+2	; 0x02
    1470:	80 81       	ld	r24, Z
    1472:	85 3a       	cpi	r24, 0xA5	; 165
    1474:	89 f3       	breq	.-30     	; 0x1458 <usTaskCheckFreeStackSpace+0x16>
    1476:	8b 81       	ldd	r24, Y+3	; 0x03
    1478:	9c 81       	ldd	r25, Y+4	; 0x04
    147a:	0f 90       	pop	r0
    147c:	0f 90       	pop	r0
    147e:	0f 90       	pop	r0
    1480:	0f 90       	pop	r0
    1482:	cf 91       	pop	r28
    1484:	df 91       	pop	r29
    1486:	08 95       	ret

00001488 <uxTaskGetStackHighWaterMark>:
    1488:	df 93       	push	r29
    148a:	cf 93       	push	r28
    148c:	cd b7       	in	r28, 0x3d	; 61
    148e:	de b7       	in	r29, 0x3e	; 62
    1490:	29 97       	sbiw	r28, 0x09	; 9
    1492:	0f b6       	in	r0, 0x3f	; 63
    1494:	f8 94       	cli
    1496:	de bf       	out	0x3e, r29	; 62
    1498:	0f be       	out	0x3f, r0	; 63
    149a:	cd bf       	out	0x3d, r28	; 61
    149c:	9f 83       	std	Y+7, r25	; 0x07
    149e:	8e 83       	std	Y+6, r24	; 0x06
    14a0:	8e 81       	ldd	r24, Y+6	; 0x06
    14a2:	9f 81       	ldd	r25, Y+7	; 0x07
    14a4:	00 97       	sbiw	r24, 0x00	; 0
    14a6:	39 f4       	brne	.+14     	; 0x14b6 <uxTaskGetStackHighWaterMark+0x2e>
    14a8:	80 91 26 02 	lds	r24, 0x0226
    14ac:	90 91 27 02 	lds	r25, 0x0227
    14b0:	99 87       	std	Y+9, r25	; 0x09
    14b2:	88 87       	std	Y+8, r24	; 0x08
    14b4:	04 c0       	rjmp	.+8      	; 0x14be <uxTaskGetStackHighWaterMark+0x36>
    14b6:	8e 81       	ldd	r24, Y+6	; 0x06
    14b8:	9f 81       	ldd	r25, Y+7	; 0x07
    14ba:	99 87       	std	Y+9, r25	; 0x09
    14bc:	88 87       	std	Y+8, r24	; 0x08
    14be:	88 85       	ldd	r24, Y+8	; 0x08
    14c0:	99 85       	ldd	r25, Y+9	; 0x09
    14c2:	9d 83       	std	Y+5, r25	; 0x05
    14c4:	8c 83       	std	Y+4, r24	; 0x04
    14c6:	ec 81       	ldd	r30, Y+4	; 0x04
    14c8:	fd 81       	ldd	r31, Y+5	; 0x05
    14ca:	87 89       	ldd	r24, Z+23	; 0x17
    14cc:	90 8d       	ldd	r25, Z+24	; 0x18
    14ce:	9b 83       	std	Y+3, r25	; 0x03
    14d0:	8a 83       	std	Y+2, r24	; 0x02
    14d2:	8a 81       	ldd	r24, Y+2	; 0x02
    14d4:	9b 81       	ldd	r25, Y+3	; 0x03
    14d6:	0e 94 21 0a 	call	0x1442	; 0x1442 <usTaskCheckFreeStackSpace>
    14da:	89 83       	std	Y+1, r24	; 0x01
    14dc:	89 81       	ldd	r24, Y+1	; 0x01
    14de:	29 96       	adiw	r28, 0x09	; 9
    14e0:	0f b6       	in	r0, 0x3f	; 63
    14e2:	f8 94       	cli
    14e4:	de bf       	out	0x3e, r29	; 62
    14e6:	0f be       	out	0x3f, r0	; 63
    14e8:	cd bf       	out	0x3d, r28	; 61
    14ea:	cf 91       	pop	r28
    14ec:	df 91       	pop	r29
    14ee:	08 95       	ret

000014f0 <xTaskGetCurrentTaskHandle>:
    14f0:	df 93       	push	r29
    14f2:	cf 93       	push	r28
    14f4:	0f 92       	push	r0
    14f6:	0f 92       	push	r0
    14f8:	cd b7       	in	r28, 0x3d	; 61
    14fa:	de b7       	in	r29, 0x3e	; 62
    14fc:	80 91 26 02 	lds	r24, 0x0226
    1500:	90 91 27 02 	lds	r25, 0x0227
    1504:	9a 83       	std	Y+2, r25	; 0x02
    1506:	89 83       	std	Y+1, r24	; 0x01
    1508:	89 81       	ldd	r24, Y+1	; 0x01
    150a:	9a 81       	ldd	r25, Y+2	; 0x02
    150c:	0f 90       	pop	r0
    150e:	0f 90       	pop	r0
    1510:	cf 91       	pop	r28
    1512:	df 91       	pop	r29
    1514:	08 95       	ret

00001516 <vTaskPriorityInherit>:
    1516:	df 93       	push	r29
    1518:	cf 93       	push	r28
    151a:	00 d0       	rcall	.+0      	; 0x151c <vTaskPriorityInherit+0x6>
    151c:	0f 92       	push	r0
    151e:	cd b7       	in	r28, 0x3d	; 61
    1520:	de b7       	in	r29, 0x3e	; 62
    1522:	9c 83       	std	Y+4, r25	; 0x04
    1524:	8b 83       	std	Y+3, r24	; 0x03
    1526:	8b 81       	ldd	r24, Y+3	; 0x03
    1528:	9c 81       	ldd	r25, Y+4	; 0x04
    152a:	9a 83       	std	Y+2, r25	; 0x02
    152c:	89 83       	std	Y+1, r24	; 0x01
    152e:	8b 81       	ldd	r24, Y+3	; 0x03
    1530:	9c 81       	ldd	r25, Y+4	; 0x04
    1532:	00 97       	sbiw	r24, 0x00	; 0
    1534:	09 f4       	brne	.+2      	; 0x1538 <vTaskPriorityInherit+0x22>
    1536:	6d c0       	rjmp	.+218    	; 0x1612 <vTaskPriorityInherit+0xfc>
    1538:	e9 81       	ldd	r30, Y+1	; 0x01
    153a:	fa 81       	ldd	r31, Y+2	; 0x02
    153c:	96 89       	ldd	r25, Z+22	; 0x16
    153e:	e0 91 26 02 	lds	r30, 0x0226
    1542:	f0 91 27 02 	lds	r31, 0x0227
    1546:	86 89       	ldd	r24, Z+22	; 0x16
    1548:	98 17       	cp	r25, r24
    154a:	08 f0       	brcs	.+2      	; 0x154e <vTaskPriorityInherit+0x38>
    154c:	62 c0       	rjmp	.+196    	; 0x1612 <vTaskPriorityInherit+0xfc>
    154e:	e0 91 26 02 	lds	r30, 0x0226
    1552:	f0 91 27 02 	lds	r31, 0x0227
    1556:	86 89       	ldd	r24, Z+22	; 0x16
    1558:	28 2f       	mov	r18, r24
    155a:	30 e0       	ldi	r19, 0x00	; 0
    155c:	84 e0       	ldi	r24, 0x04	; 4
    155e:	90 e0       	ldi	r25, 0x00	; 0
    1560:	82 1b       	sub	r24, r18
    1562:	93 0b       	sbc	r25, r19
    1564:	e9 81       	ldd	r30, Y+1	; 0x01
    1566:	fa 81       	ldd	r31, Y+2	; 0x02
    1568:	95 87       	std	Z+13, r25	; 0x0d
    156a:	84 87       	std	Z+12, r24	; 0x0c
    156c:	e9 81       	ldd	r30, Y+1	; 0x01
    156e:	fa 81       	ldd	r31, Y+2	; 0x02
    1570:	42 85       	ldd	r20, Z+10	; 0x0a
    1572:	53 85       	ldd	r21, Z+11	; 0x0b
    1574:	e9 81       	ldd	r30, Y+1	; 0x01
    1576:	fa 81       	ldd	r31, Y+2	; 0x02
    1578:	86 89       	ldd	r24, Z+22	; 0x16
    157a:	28 2f       	mov	r18, r24
    157c:	30 e0       	ldi	r19, 0x00	; 0
    157e:	c9 01       	movw	r24, r18
    1580:	88 0f       	add	r24, r24
    1582:	99 1f       	adc	r25, r25
    1584:	88 0f       	add	r24, r24
    1586:	99 1f       	adc	r25, r25
    1588:	88 0f       	add	r24, r24
    158a:	99 1f       	adc	r25, r25
    158c:	82 0f       	add	r24, r18
    158e:	93 1f       	adc	r25, r19
    1590:	8d 5c       	subi	r24, 0xCD	; 205
    1592:	9d 4f       	sbci	r25, 0xFD	; 253
    1594:	48 17       	cp	r20, r24
    1596:	59 07       	cpc	r21, r25
    1598:	a1 f5       	brne	.+104    	; 0x1602 <vTaskPriorityInherit+0xec>
    159a:	89 81       	ldd	r24, Y+1	; 0x01
    159c:	9a 81       	ldd	r25, Y+2	; 0x02
    159e:	02 96       	adiw	r24, 0x02	; 2
    15a0:	0e 94 94 11 	call	0x2328	; 0x2328 <uxListRemove>
    15a4:	e0 91 26 02 	lds	r30, 0x0226
    15a8:	f0 91 27 02 	lds	r31, 0x0227
    15ac:	86 89       	ldd	r24, Z+22	; 0x16
    15ae:	e9 81       	ldd	r30, Y+1	; 0x01
    15b0:	fa 81       	ldd	r31, Y+2	; 0x02
    15b2:	86 8b       	std	Z+22, r24	; 0x16
    15b4:	e9 81       	ldd	r30, Y+1	; 0x01
    15b6:	fa 81       	ldd	r31, Y+2	; 0x02
    15b8:	96 89       	ldd	r25, Z+22	; 0x16
    15ba:	80 91 2c 02 	lds	r24, 0x022C
    15be:	89 17       	cp	r24, r25
    15c0:	28 f4       	brcc	.+10     	; 0x15cc <vTaskPriorityInherit+0xb6>
    15c2:	e9 81       	ldd	r30, Y+1	; 0x01
    15c4:	fa 81       	ldd	r31, Y+2	; 0x02
    15c6:	86 89       	ldd	r24, Z+22	; 0x16
    15c8:	80 93 2c 02 	sts	0x022C, r24
    15cc:	e9 81       	ldd	r30, Y+1	; 0x01
    15ce:	fa 81       	ldd	r31, Y+2	; 0x02
    15d0:	86 89       	ldd	r24, Z+22	; 0x16
    15d2:	28 2f       	mov	r18, r24
    15d4:	30 e0       	ldi	r19, 0x00	; 0
    15d6:	c9 01       	movw	r24, r18
    15d8:	88 0f       	add	r24, r24
    15da:	99 1f       	adc	r25, r25
    15dc:	88 0f       	add	r24, r24
    15de:	99 1f       	adc	r25, r25
    15e0:	88 0f       	add	r24, r24
    15e2:	99 1f       	adc	r25, r25
    15e4:	82 0f       	add	r24, r18
    15e6:	93 1f       	adc	r25, r19
    15e8:	ac 01       	movw	r20, r24
    15ea:	4d 5c       	subi	r20, 0xCD	; 205
    15ec:	5d 4f       	sbci	r21, 0xFD	; 253
    15ee:	89 81       	ldd	r24, Y+1	; 0x01
    15f0:	9a 81       	ldd	r25, Y+2	; 0x02
    15f2:	9c 01       	movw	r18, r24
    15f4:	2e 5f       	subi	r18, 0xFE	; 254
    15f6:	3f 4f       	sbci	r19, 0xFF	; 255
    15f8:	ca 01       	movw	r24, r20
    15fa:	b9 01       	movw	r22, r18
    15fc:	0e 94 dd 10 	call	0x21ba	; 0x21ba <vListInsertEnd>
    1600:	08 c0       	rjmp	.+16     	; 0x1612 <vTaskPriorityInherit+0xfc>
    1602:	e0 91 26 02 	lds	r30, 0x0226
    1606:	f0 91 27 02 	lds	r31, 0x0227
    160a:	86 89       	ldd	r24, Z+22	; 0x16
    160c:	e9 81       	ldd	r30, Y+1	; 0x01
    160e:	fa 81       	ldd	r31, Y+2	; 0x02
    1610:	86 8b       	std	Z+22, r24	; 0x16
    1612:	0f 90       	pop	r0
    1614:	0f 90       	pop	r0
    1616:	0f 90       	pop	r0
    1618:	0f 90       	pop	r0
    161a:	cf 91       	pop	r28
    161c:	df 91       	pop	r29
    161e:	08 95       	ret

00001620 <vTaskPriorityDisinherit>:
    1620:	df 93       	push	r29
    1622:	cf 93       	push	r28
    1624:	00 d0       	rcall	.+0      	; 0x1626 <vTaskPriorityDisinherit+0x6>
    1626:	0f 92       	push	r0
    1628:	cd b7       	in	r28, 0x3d	; 61
    162a:	de b7       	in	r29, 0x3e	; 62
    162c:	9c 83       	std	Y+4, r25	; 0x04
    162e:	8b 83       	std	Y+3, r24	; 0x03
    1630:	8b 81       	ldd	r24, Y+3	; 0x03
    1632:	9c 81       	ldd	r25, Y+4	; 0x04
    1634:	9a 83       	std	Y+2, r25	; 0x02
    1636:	89 83       	std	Y+1, r24	; 0x01
    1638:	8b 81       	ldd	r24, Y+3	; 0x03
    163a:	9c 81       	ldd	r25, Y+4	; 0x04
    163c:	00 97       	sbiw	r24, 0x00	; 0
    163e:	09 f4       	brne	.+2      	; 0x1642 <vTaskPriorityDisinherit+0x22>
    1640:	47 c0       	rjmp	.+142    	; 0x16d0 <vTaskPriorityDisinherit+0xb0>
    1642:	e9 81       	ldd	r30, Y+1	; 0x01
    1644:	fa 81       	ldd	r31, Y+2	; 0x02
    1646:	96 89       	ldd	r25, Z+22	; 0x16
    1648:	e9 81       	ldd	r30, Y+1	; 0x01
    164a:	fa 81       	ldd	r31, Y+2	; 0x02
    164c:	81 a5       	ldd	r24, Z+41	; 0x29
    164e:	98 17       	cp	r25, r24
    1650:	09 f4       	brne	.+2      	; 0x1654 <vTaskPriorityDisinherit+0x34>
    1652:	3e c0       	rjmp	.+124    	; 0x16d0 <vTaskPriorityDisinherit+0xb0>
    1654:	89 81       	ldd	r24, Y+1	; 0x01
    1656:	9a 81       	ldd	r25, Y+2	; 0x02
    1658:	02 96       	adiw	r24, 0x02	; 2
    165a:	0e 94 94 11 	call	0x2328	; 0x2328 <uxListRemove>
    165e:	e9 81       	ldd	r30, Y+1	; 0x01
    1660:	fa 81       	ldd	r31, Y+2	; 0x02
    1662:	81 a5       	ldd	r24, Z+41	; 0x29
    1664:	e9 81       	ldd	r30, Y+1	; 0x01
    1666:	fa 81       	ldd	r31, Y+2	; 0x02
    1668:	86 8b       	std	Z+22, r24	; 0x16
    166a:	e9 81       	ldd	r30, Y+1	; 0x01
    166c:	fa 81       	ldd	r31, Y+2	; 0x02
    166e:	86 89       	ldd	r24, Z+22	; 0x16
    1670:	28 2f       	mov	r18, r24
    1672:	30 e0       	ldi	r19, 0x00	; 0
    1674:	84 e0       	ldi	r24, 0x04	; 4
    1676:	90 e0       	ldi	r25, 0x00	; 0
    1678:	82 1b       	sub	r24, r18
    167a:	93 0b       	sbc	r25, r19
    167c:	e9 81       	ldd	r30, Y+1	; 0x01
    167e:	fa 81       	ldd	r31, Y+2	; 0x02
    1680:	95 87       	std	Z+13, r25	; 0x0d
    1682:	84 87       	std	Z+12, r24	; 0x0c
    1684:	e9 81       	ldd	r30, Y+1	; 0x01
    1686:	fa 81       	ldd	r31, Y+2	; 0x02
    1688:	96 89       	ldd	r25, Z+22	; 0x16
    168a:	80 91 2c 02 	lds	r24, 0x022C
    168e:	89 17       	cp	r24, r25
    1690:	28 f4       	brcc	.+10     	; 0x169c <vTaskPriorityDisinherit+0x7c>
    1692:	e9 81       	ldd	r30, Y+1	; 0x01
    1694:	fa 81       	ldd	r31, Y+2	; 0x02
    1696:	86 89       	ldd	r24, Z+22	; 0x16
    1698:	80 93 2c 02 	sts	0x022C, r24
    169c:	e9 81       	ldd	r30, Y+1	; 0x01
    169e:	fa 81       	ldd	r31, Y+2	; 0x02
    16a0:	86 89       	ldd	r24, Z+22	; 0x16
    16a2:	28 2f       	mov	r18, r24
    16a4:	30 e0       	ldi	r19, 0x00	; 0
    16a6:	c9 01       	movw	r24, r18
    16a8:	88 0f       	add	r24, r24
    16aa:	99 1f       	adc	r25, r25
    16ac:	88 0f       	add	r24, r24
    16ae:	99 1f       	adc	r25, r25
    16b0:	88 0f       	add	r24, r24
    16b2:	99 1f       	adc	r25, r25
    16b4:	82 0f       	add	r24, r18
    16b6:	93 1f       	adc	r25, r19
    16b8:	ac 01       	movw	r20, r24
    16ba:	4d 5c       	subi	r20, 0xCD	; 205
    16bc:	5d 4f       	sbci	r21, 0xFD	; 253
    16be:	89 81       	ldd	r24, Y+1	; 0x01
    16c0:	9a 81       	ldd	r25, Y+2	; 0x02
    16c2:	9c 01       	movw	r18, r24
    16c4:	2e 5f       	subi	r18, 0xFE	; 254
    16c6:	3f 4f       	sbci	r19, 0xFF	; 255
    16c8:	ca 01       	movw	r24, r20
    16ca:	b9 01       	movw	r22, r18
    16cc:	0e 94 dd 10 	call	0x21ba	; 0x21ba <vListInsertEnd>
    16d0:	0f 90       	pop	r0
    16d2:	0f 90       	pop	r0
    16d4:	0f 90       	pop	r0
    16d6:	0f 90       	pop	r0
    16d8:	cf 91       	pop	r28
    16da:	df 91       	pop	r29
    16dc:	08 95       	ret

000016de <xQueueGenericReset>:
    16de:	df 93       	push	r29
    16e0:	cf 93       	push	r28
    16e2:	00 d0       	rcall	.+0      	; 0x16e4 <xQueueGenericReset+0x6>
    16e4:	cd b7       	in	r28, 0x3d	; 61
    16e6:	de b7       	in	r29, 0x3e	; 62
    16e8:	9a 83       	std	Y+2, r25	; 0x02
    16ea:	89 83       	std	Y+1, r24	; 0x01
    16ec:	6b 83       	std	Y+3, r22	; 0x03
    16ee:	0f b6       	in	r0, 0x3f	; 63
    16f0:	f8 94       	cli
    16f2:	0f 92       	push	r0
    16f4:	e9 81       	ldd	r30, Y+1	; 0x01
    16f6:	fa 81       	ldd	r31, Y+2	; 0x02
    16f8:	40 81       	ld	r20, Z
    16fa:	51 81       	ldd	r21, Z+1	; 0x01
    16fc:	e9 81       	ldd	r30, Y+1	; 0x01
    16fe:	fa 81       	ldd	r31, Y+2	; 0x02
    1700:	83 8d       	ldd	r24, Z+27	; 0x1b
    1702:	28 2f       	mov	r18, r24
    1704:	30 e0       	ldi	r19, 0x00	; 0
    1706:	e9 81       	ldd	r30, Y+1	; 0x01
    1708:	fa 81       	ldd	r31, Y+2	; 0x02
    170a:	84 8d       	ldd	r24, Z+28	; 0x1c
    170c:	88 2f       	mov	r24, r24
    170e:	90 e0       	ldi	r25, 0x00	; 0
    1710:	bc 01       	movw	r22, r24
    1712:	26 9f       	mul	r18, r22
    1714:	c0 01       	movw	r24, r0
    1716:	27 9f       	mul	r18, r23
    1718:	90 0d       	add	r25, r0
    171a:	36 9f       	mul	r19, r22
    171c:	90 0d       	add	r25, r0
    171e:	11 24       	eor	r1, r1
    1720:	84 0f       	add	r24, r20
    1722:	95 1f       	adc	r25, r21
    1724:	e9 81       	ldd	r30, Y+1	; 0x01
    1726:	fa 81       	ldd	r31, Y+2	; 0x02
    1728:	93 83       	std	Z+3, r25	; 0x03
    172a:	82 83       	std	Z+2, r24	; 0x02
    172c:	e9 81       	ldd	r30, Y+1	; 0x01
    172e:	fa 81       	ldd	r31, Y+2	; 0x02
    1730:	12 8e       	std	Z+26, r1	; 0x1a
    1732:	e9 81       	ldd	r30, Y+1	; 0x01
    1734:	fa 81       	ldd	r31, Y+2	; 0x02
    1736:	80 81       	ld	r24, Z
    1738:	91 81       	ldd	r25, Z+1	; 0x01
    173a:	e9 81       	ldd	r30, Y+1	; 0x01
    173c:	fa 81       	ldd	r31, Y+2	; 0x02
    173e:	95 83       	std	Z+5, r25	; 0x05
    1740:	84 83       	std	Z+4, r24	; 0x04
    1742:	e9 81       	ldd	r30, Y+1	; 0x01
    1744:	fa 81       	ldd	r31, Y+2	; 0x02
    1746:	40 81       	ld	r20, Z
    1748:	51 81       	ldd	r21, Z+1	; 0x01
    174a:	e9 81       	ldd	r30, Y+1	; 0x01
    174c:	fa 81       	ldd	r31, Y+2	; 0x02
    174e:	83 8d       	ldd	r24, Z+27	; 0x1b
    1750:	88 2f       	mov	r24, r24
    1752:	90 e0       	ldi	r25, 0x00	; 0
    1754:	9c 01       	movw	r18, r24
    1756:	21 50       	subi	r18, 0x01	; 1
    1758:	30 40       	sbci	r19, 0x00	; 0
    175a:	e9 81       	ldd	r30, Y+1	; 0x01
    175c:	fa 81       	ldd	r31, Y+2	; 0x02
    175e:	84 8d       	ldd	r24, Z+28	; 0x1c
    1760:	88 2f       	mov	r24, r24
    1762:	90 e0       	ldi	r25, 0x00	; 0
    1764:	bc 01       	movw	r22, r24
    1766:	26 9f       	mul	r18, r22
    1768:	c0 01       	movw	r24, r0
    176a:	27 9f       	mul	r18, r23
    176c:	90 0d       	add	r25, r0
    176e:	36 9f       	mul	r19, r22
    1770:	90 0d       	add	r25, r0
    1772:	11 24       	eor	r1, r1
    1774:	84 0f       	add	r24, r20
    1776:	95 1f       	adc	r25, r21
    1778:	e9 81       	ldd	r30, Y+1	; 0x01
    177a:	fa 81       	ldd	r31, Y+2	; 0x02
    177c:	97 83       	std	Z+7, r25	; 0x07
    177e:	86 83       	std	Z+6, r24	; 0x06
    1780:	e9 81       	ldd	r30, Y+1	; 0x01
    1782:	fa 81       	ldd	r31, Y+2	; 0x02
    1784:	8f ef       	ldi	r24, 0xFF	; 255
    1786:	85 8f       	std	Z+29, r24	; 0x1d
    1788:	e9 81       	ldd	r30, Y+1	; 0x01
    178a:	fa 81       	ldd	r31, Y+2	; 0x02
    178c:	8f ef       	ldi	r24, 0xFF	; 255
    178e:	86 8f       	std	Z+30, r24	; 0x1e
    1790:	8b 81       	ldd	r24, Y+3	; 0x03
    1792:	88 23       	and	r24, r24
    1794:	79 f4       	brne	.+30     	; 0x17b4 <xQueueGenericReset+0xd6>
    1796:	e9 81       	ldd	r30, Y+1	; 0x01
    1798:	fa 81       	ldd	r31, Y+2	; 0x02
    179a:	80 85       	ldd	r24, Z+8	; 0x08
    179c:	88 23       	and	r24, r24
    179e:	a1 f0       	breq	.+40     	; 0x17c8 <xQueueGenericReset+0xea>
    17a0:	89 81       	ldd	r24, Y+1	; 0x01
    17a2:	9a 81       	ldd	r25, Y+2	; 0x02
    17a4:	08 96       	adiw	r24, 0x08	; 8
    17a6:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <xTaskRemoveFromEventList>
    17aa:	81 30       	cpi	r24, 0x01	; 1
    17ac:	69 f4       	brne	.+26     	; 0x17c8 <xQueueGenericReset+0xea>
    17ae:	0e 94 01 17 	call	0x2e02	; 0x2e02 <vPortYield>
    17b2:	0a c0       	rjmp	.+20     	; 0x17c8 <xQueueGenericReset+0xea>
    17b4:	89 81       	ldd	r24, Y+1	; 0x01
    17b6:	9a 81       	ldd	r25, Y+2	; 0x02
    17b8:	08 96       	adiw	r24, 0x08	; 8
    17ba:	0e 94 a1 10 	call	0x2142	; 0x2142 <vListInitialise>
    17be:	89 81       	ldd	r24, Y+1	; 0x01
    17c0:	9a 81       	ldd	r25, Y+2	; 0x02
    17c2:	41 96       	adiw	r24, 0x11	; 17
    17c4:	0e 94 a1 10 	call	0x2142	; 0x2142 <vListInitialise>
    17c8:	0f 90       	pop	r0
    17ca:	0f be       	out	0x3f, r0	; 63
    17cc:	81 e0       	ldi	r24, 0x01	; 1
    17ce:	0f 90       	pop	r0
    17d0:	0f 90       	pop	r0
    17d2:	0f 90       	pop	r0
    17d4:	cf 91       	pop	r28
    17d6:	df 91       	pop	r29
    17d8:	08 95       	ret

000017da <xQueueGenericCreate>:
    17da:	df 93       	push	r29
    17dc:	cf 93       	push	r28
    17de:	cd b7       	in	r28, 0x3d	; 61
    17e0:	de b7       	in	r29, 0x3e	; 62
    17e2:	29 97       	sbiw	r28, 0x09	; 9
    17e4:	0f b6       	in	r0, 0x3f	; 63
    17e6:	f8 94       	cli
    17e8:	de bf       	out	0x3e, r29	; 62
    17ea:	0f be       	out	0x3f, r0	; 63
    17ec:	cd bf       	out	0x3d, r28	; 61
    17ee:	8f 83       	std	Y+7, r24	; 0x07
    17f0:	68 87       	std	Y+8, r22	; 0x08
    17f2:	49 87       	std	Y+9, r20	; 0x09
    17f4:	1a 82       	std	Y+2, r1	; 0x02
    17f6:	19 82       	std	Y+1, r1	; 0x01
    17f8:	8f 81       	ldd	r24, Y+7	; 0x07
    17fa:	88 23       	and	r24, r24
    17fc:	09 f4       	brne	.+2      	; 0x1800 <xQueueGenericCreate+0x26>
    17fe:	3f c0       	rjmp	.+126    	; 0x187e <xQueueGenericCreate+0xa4>
    1800:	8f e1       	ldi	r24, 0x1F	; 31
    1802:	90 e0       	ldi	r25, 0x00	; 0
    1804:	0e 94 b9 14 	call	0x2972	; 0x2972 <pvPortMalloc>
    1808:	9e 83       	std	Y+6, r25	; 0x06
    180a:	8d 83       	std	Y+5, r24	; 0x05
    180c:	8d 81       	ldd	r24, Y+5	; 0x05
    180e:	9e 81       	ldd	r25, Y+6	; 0x06
    1810:	00 97       	sbiw	r24, 0x00	; 0
    1812:	a9 f1       	breq	.+106    	; 0x187e <xQueueGenericCreate+0xa4>
    1814:	8f 81       	ldd	r24, Y+7	; 0x07
    1816:	28 2f       	mov	r18, r24
    1818:	30 e0       	ldi	r19, 0x00	; 0
    181a:	88 85       	ldd	r24, Y+8	; 0x08
    181c:	88 2f       	mov	r24, r24
    181e:	90 e0       	ldi	r25, 0x00	; 0
    1820:	ac 01       	movw	r20, r24
    1822:	24 9f       	mul	r18, r20
    1824:	c0 01       	movw	r24, r0
    1826:	25 9f       	mul	r18, r21
    1828:	90 0d       	add	r25, r0
    182a:	34 9f       	mul	r19, r20
    182c:	90 0d       	add	r25, r0
    182e:	11 24       	eor	r1, r1
    1830:	01 96       	adiw	r24, 0x01	; 1
    1832:	9c 83       	std	Y+4, r25	; 0x04
    1834:	8b 83       	std	Y+3, r24	; 0x03
    1836:	8b 81       	ldd	r24, Y+3	; 0x03
    1838:	9c 81       	ldd	r25, Y+4	; 0x04
    183a:	0e 94 b9 14 	call	0x2972	; 0x2972 <pvPortMalloc>
    183e:	ed 81       	ldd	r30, Y+5	; 0x05
    1840:	fe 81       	ldd	r31, Y+6	; 0x06
    1842:	91 83       	std	Z+1, r25	; 0x01
    1844:	80 83       	st	Z, r24
    1846:	ed 81       	ldd	r30, Y+5	; 0x05
    1848:	fe 81       	ldd	r31, Y+6	; 0x06
    184a:	80 81       	ld	r24, Z
    184c:	91 81       	ldd	r25, Z+1	; 0x01
    184e:	00 97       	sbiw	r24, 0x00	; 0
    1850:	91 f0       	breq	.+36     	; 0x1876 <xQueueGenericCreate+0x9c>
    1852:	ed 81       	ldd	r30, Y+5	; 0x05
    1854:	fe 81       	ldd	r31, Y+6	; 0x06
    1856:	8f 81       	ldd	r24, Y+7	; 0x07
    1858:	83 8f       	std	Z+27, r24	; 0x1b
    185a:	ed 81       	ldd	r30, Y+5	; 0x05
    185c:	fe 81       	ldd	r31, Y+6	; 0x06
    185e:	88 85       	ldd	r24, Y+8	; 0x08
    1860:	84 8f       	std	Z+28, r24	; 0x1c
    1862:	8d 81       	ldd	r24, Y+5	; 0x05
    1864:	9e 81       	ldd	r25, Y+6	; 0x06
    1866:	61 e0       	ldi	r22, 0x01	; 1
    1868:	0e 94 6f 0b 	call	0x16de	; 0x16de <xQueueGenericReset>
    186c:	8d 81       	ldd	r24, Y+5	; 0x05
    186e:	9e 81       	ldd	r25, Y+6	; 0x06
    1870:	9a 83       	std	Y+2, r25	; 0x02
    1872:	89 83       	std	Y+1, r24	; 0x01
    1874:	04 c0       	rjmp	.+8      	; 0x187e <xQueueGenericCreate+0xa4>
    1876:	8d 81       	ldd	r24, Y+5	; 0x05
    1878:	9e 81       	ldd	r25, Y+6	; 0x06
    187a:	0e 94 ff 14 	call	0x29fe	; 0x29fe <vPortFree>
    187e:	89 81       	ldd	r24, Y+1	; 0x01
    1880:	9a 81       	ldd	r25, Y+2	; 0x02
    1882:	29 96       	adiw	r28, 0x09	; 9
    1884:	0f b6       	in	r0, 0x3f	; 63
    1886:	f8 94       	cli
    1888:	de bf       	out	0x3e, r29	; 62
    188a:	0f be       	out	0x3f, r0	; 63
    188c:	cd bf       	out	0x3d, r28	; 61
    188e:	cf 91       	pop	r28
    1890:	df 91       	pop	r29
    1892:	08 95       	ret

00001894 <xQueueCreateMutex>:
    1894:	df 93       	push	r29
    1896:	cf 93       	push	r28
    1898:	00 d0       	rcall	.+0      	; 0x189a <xQueueCreateMutex+0x6>
    189a:	cd b7       	in	r28, 0x3d	; 61
    189c:	de b7       	in	r29, 0x3e	; 62
    189e:	8b 83       	std	Y+3, r24	; 0x03
    18a0:	8f e1       	ldi	r24, 0x1F	; 31
    18a2:	90 e0       	ldi	r25, 0x00	; 0
    18a4:	0e 94 b9 14 	call	0x2972	; 0x2972 <pvPortMalloc>
    18a8:	9a 83       	std	Y+2, r25	; 0x02
    18aa:	89 83       	std	Y+1, r24	; 0x01
    18ac:	89 81       	ldd	r24, Y+1	; 0x01
    18ae:	9a 81       	ldd	r25, Y+2	; 0x02
    18b0:	00 97       	sbiw	r24, 0x00	; 0
    18b2:	a9 f1       	breq	.+106    	; 0x191e <xQueueCreateMutex+0x8a>
    18b4:	e9 81       	ldd	r30, Y+1	; 0x01
    18b6:	fa 81       	ldd	r31, Y+2	; 0x02
    18b8:	13 82       	std	Z+3, r1	; 0x03
    18ba:	12 82       	std	Z+2, r1	; 0x02
    18bc:	e9 81       	ldd	r30, Y+1	; 0x01
    18be:	fa 81       	ldd	r31, Y+2	; 0x02
    18c0:	11 82       	std	Z+1, r1	; 0x01
    18c2:	10 82       	st	Z, r1
    18c4:	e9 81       	ldd	r30, Y+1	; 0x01
    18c6:	fa 81       	ldd	r31, Y+2	; 0x02
    18c8:	15 82       	std	Z+5, r1	; 0x05
    18ca:	14 82       	std	Z+4, r1	; 0x04
    18cc:	e9 81       	ldd	r30, Y+1	; 0x01
    18ce:	fa 81       	ldd	r31, Y+2	; 0x02
    18d0:	17 82       	std	Z+7, r1	; 0x07
    18d2:	16 82       	std	Z+6, r1	; 0x06
    18d4:	e9 81       	ldd	r30, Y+1	; 0x01
    18d6:	fa 81       	ldd	r31, Y+2	; 0x02
    18d8:	12 8e       	std	Z+26, r1	; 0x1a
    18da:	e9 81       	ldd	r30, Y+1	; 0x01
    18dc:	fa 81       	ldd	r31, Y+2	; 0x02
    18de:	81 e0       	ldi	r24, 0x01	; 1
    18e0:	83 8f       	std	Z+27, r24	; 0x1b
    18e2:	e9 81       	ldd	r30, Y+1	; 0x01
    18e4:	fa 81       	ldd	r31, Y+2	; 0x02
    18e6:	14 8e       	std	Z+28, r1	; 0x1c
    18e8:	e9 81       	ldd	r30, Y+1	; 0x01
    18ea:	fa 81       	ldd	r31, Y+2	; 0x02
    18ec:	8f ef       	ldi	r24, 0xFF	; 255
    18ee:	85 8f       	std	Z+29, r24	; 0x1d
    18f0:	e9 81       	ldd	r30, Y+1	; 0x01
    18f2:	fa 81       	ldd	r31, Y+2	; 0x02
    18f4:	8f ef       	ldi	r24, 0xFF	; 255
    18f6:	86 8f       	std	Z+30, r24	; 0x1e
    18f8:	89 81       	ldd	r24, Y+1	; 0x01
    18fa:	9a 81       	ldd	r25, Y+2	; 0x02
    18fc:	08 96       	adiw	r24, 0x08	; 8
    18fe:	0e 94 a1 10 	call	0x2142	; 0x2142 <vListInitialise>
    1902:	89 81       	ldd	r24, Y+1	; 0x01
    1904:	9a 81       	ldd	r25, Y+2	; 0x02
    1906:	41 96       	adiw	r24, 0x11	; 17
    1908:	0e 94 a1 10 	call	0x2142	; 0x2142 <vListInitialise>
    190c:	89 81       	ldd	r24, Y+1	; 0x01
    190e:	9a 81       	ldd	r25, Y+2	; 0x02
    1910:	60 e0       	ldi	r22, 0x00	; 0
    1912:	70 e0       	ldi	r23, 0x00	; 0
    1914:	40 e0       	ldi	r20, 0x00	; 0
    1916:	50 e0       	ldi	r21, 0x00	; 0
    1918:	20 e0       	ldi	r18, 0x00	; 0
    191a:	0e 94 97 0c 	call	0x192e	; 0x192e <xQueueGenericSend>
    191e:	89 81       	ldd	r24, Y+1	; 0x01
    1920:	9a 81       	ldd	r25, Y+2	; 0x02
    1922:	0f 90       	pop	r0
    1924:	0f 90       	pop	r0
    1926:	0f 90       	pop	r0
    1928:	cf 91       	pop	r28
    192a:	df 91       	pop	r29
    192c:	08 95       	ret

0000192e <xQueueGenericSend>:
    192e:	df 93       	push	r29
    1930:	cf 93       	push	r28
    1932:	cd b7       	in	r28, 0x3d	; 61
    1934:	de b7       	in	r29, 0x3e	; 62
    1936:	2c 97       	sbiw	r28, 0x0c	; 12
    1938:	0f b6       	in	r0, 0x3f	; 63
    193a:	f8 94       	cli
    193c:	de bf       	out	0x3e, r29	; 62
    193e:	0f be       	out	0x3f, r0	; 63
    1940:	cd bf       	out	0x3d, r28	; 61
    1942:	9e 83       	std	Y+6, r25	; 0x06
    1944:	8d 83       	std	Y+5, r24	; 0x05
    1946:	78 87       	std	Y+8, r23	; 0x08
    1948:	6f 83       	std	Y+7, r22	; 0x07
    194a:	5a 87       	std	Y+10, r21	; 0x0a
    194c:	49 87       	std	Y+9, r20	; 0x09
    194e:	2b 87       	std	Y+11, r18	; 0x0b
    1950:	19 82       	std	Y+1, r1	; 0x01
    1952:	0f b6       	in	r0, 0x3f	; 63
    1954:	f8 94       	cli
    1956:	0f 92       	push	r0
    1958:	ed 81       	ldd	r30, Y+5	; 0x05
    195a:	fe 81       	ldd	r31, Y+6	; 0x06
    195c:	92 8d       	ldd	r25, Z+26	; 0x1a
    195e:	ed 81       	ldd	r30, Y+5	; 0x05
    1960:	fe 81       	ldd	r31, Y+6	; 0x06
    1962:	83 8d       	ldd	r24, Z+27	; 0x1b
    1964:	98 17       	cp	r25, r24
    1966:	d8 f4       	brcc	.+54     	; 0x199e <xQueueGenericSend+0x70>
    1968:	8d 81       	ldd	r24, Y+5	; 0x05
    196a:	9e 81       	ldd	r25, Y+6	; 0x06
    196c:	2f 81       	ldd	r18, Y+7	; 0x07
    196e:	38 85       	ldd	r19, Y+8	; 0x08
    1970:	b9 01       	movw	r22, r18
    1972:	4b 85       	ldd	r20, Y+11	; 0x0b
    1974:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <prvCopyDataToQueue>
    1978:	ed 81       	ldd	r30, Y+5	; 0x05
    197a:	fe 81       	ldd	r31, Y+6	; 0x06
    197c:	81 89       	ldd	r24, Z+17	; 0x11
    197e:	88 23       	and	r24, r24
    1980:	49 f0       	breq	.+18     	; 0x1994 <xQueueGenericSend+0x66>
    1982:	8d 81       	ldd	r24, Y+5	; 0x05
    1984:	9e 81       	ldd	r25, Y+6	; 0x06
    1986:	41 96       	adiw	r24, 0x11	; 17
    1988:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <xTaskRemoveFromEventList>
    198c:	81 30       	cpi	r24, 0x01	; 1
    198e:	11 f4       	brne	.+4      	; 0x1994 <xQueueGenericSend+0x66>
    1990:	0e 94 01 17 	call	0x2e02	; 0x2e02 <vPortYield>
    1994:	0f 90       	pop	r0
    1996:	0f be       	out	0x3f, r0	; 63
    1998:	81 e0       	ldi	r24, 0x01	; 1
    199a:	8c 87       	std	Y+12, r24	; 0x0c
    199c:	5c c0       	rjmp	.+184    	; 0x1a56 <xQueueGenericSend+0x128>
    199e:	89 85       	ldd	r24, Y+9	; 0x09
    19a0:	9a 85       	ldd	r25, Y+10	; 0x0a
    19a2:	00 97       	sbiw	r24, 0x00	; 0
    19a4:	21 f4       	brne	.+8      	; 0x19ae <xQueueGenericSend+0x80>
    19a6:	0f 90       	pop	r0
    19a8:	0f be       	out	0x3f, r0	; 63
    19aa:	1c 86       	std	Y+12, r1	; 0x0c
    19ac:	54 c0       	rjmp	.+168    	; 0x1a56 <xQueueGenericSend+0x128>
    19ae:	89 81       	ldd	r24, Y+1	; 0x01
    19b0:	88 23       	and	r24, r24
    19b2:	31 f4       	brne	.+12     	; 0x19c0 <xQueueGenericSend+0x92>
    19b4:	ce 01       	movw	r24, r28
    19b6:	02 96       	adiw	r24, 0x02	; 2
    19b8:	0e 94 4c 08 	call	0x1098	; 0x1098 <vTaskSetTimeOutState>
    19bc:	81 e0       	ldi	r24, 0x01	; 1
    19be:	89 83       	std	Y+1, r24	; 0x01
    19c0:	0f 90       	pop	r0
    19c2:	0f be       	out	0x3f, r0	; 63
    19c4:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <vTaskSuspendAll>
    19c8:	0f b6       	in	r0, 0x3f	; 63
    19ca:	f8 94       	cli
    19cc:	0f 92       	push	r0
    19ce:	ed 81       	ldd	r30, Y+5	; 0x05
    19d0:	fe 81       	ldd	r31, Y+6	; 0x06
    19d2:	85 8d       	ldd	r24, Z+29	; 0x1d
    19d4:	8f 3f       	cpi	r24, 0xFF	; 255
    19d6:	19 f4       	brne	.+6      	; 0x19de <xQueueGenericSend+0xb0>
    19d8:	ed 81       	ldd	r30, Y+5	; 0x05
    19da:	fe 81       	ldd	r31, Y+6	; 0x06
    19dc:	15 8e       	std	Z+29, r1	; 0x1d
    19de:	ed 81       	ldd	r30, Y+5	; 0x05
    19e0:	fe 81       	ldd	r31, Y+6	; 0x06
    19e2:	86 8d       	ldd	r24, Z+30	; 0x1e
    19e4:	8f 3f       	cpi	r24, 0xFF	; 255
    19e6:	19 f4       	brne	.+6      	; 0x19ee <xQueueGenericSend+0xc0>
    19e8:	ed 81       	ldd	r30, Y+5	; 0x05
    19ea:	fe 81       	ldd	r31, Y+6	; 0x06
    19ec:	16 8e       	std	Z+30, r1	; 0x1e
    19ee:	0f 90       	pop	r0
    19f0:	0f be       	out	0x3f, r0	; 63
    19f2:	ce 01       	movw	r24, r28
    19f4:	02 96       	adiw	r24, 0x02	; 2
    19f6:	9e 01       	movw	r18, r28
    19f8:	27 5f       	subi	r18, 0xF7	; 247
    19fa:	3f 4f       	sbci	r19, 0xFF	; 255
    19fc:	b9 01       	movw	r22, r18
    19fe:	0e 94 66 08 	call	0x10cc	; 0x10cc <xTaskCheckForTimeOut>
    1a02:	88 23       	and	r24, r24
    1a04:	09 f5       	brne	.+66     	; 0x1a48 <xQueueGenericSend+0x11a>
    1a06:	8d 81       	ldd	r24, Y+5	; 0x05
    1a08:	9e 81       	ldd	r25, Y+6	; 0x06
    1a0a:	0e 94 6a 10 	call	0x20d4	; 0x20d4 <prvIsQueueFull>
    1a0e:	88 23       	and	r24, r24
    1a10:	a1 f0       	breq	.+40     	; 0x1a3a <xQueueGenericSend+0x10c>
    1a12:	8d 81       	ldd	r24, Y+5	; 0x05
    1a14:	9e 81       	ldd	r25, Y+6	; 0x06
    1a16:	08 96       	adiw	r24, 0x08	; 8
    1a18:	29 85       	ldd	r18, Y+9	; 0x09
    1a1a:	3a 85       	ldd	r19, Y+10	; 0x0a
    1a1c:	b9 01       	movw	r22, r18
    1a1e:	0e 94 9c 07 	call	0xf38	; 0xf38 <vTaskPlaceOnEventList>
    1a22:	8d 81       	ldd	r24, Y+5	; 0x05
    1a24:	9e 81       	ldd	r25, Y+6	; 0x06
    1a26:	0e 94 e4 0f 	call	0x1fc8	; 0x1fc8 <prvUnlockQueue>
    1a2a:	0e 94 86 05 	call	0xb0c	; 0xb0c <xTaskResumeAll>
    1a2e:	88 23       	and	r24, r24
    1a30:	09 f0       	breq	.+2      	; 0x1a34 <xQueueGenericSend+0x106>
    1a32:	8f cf       	rjmp	.-226    	; 0x1952 <xQueueGenericSend+0x24>
    1a34:	0e 94 01 17 	call	0x2e02	; 0x2e02 <vPortYield>
    1a38:	8c cf       	rjmp	.-232    	; 0x1952 <xQueueGenericSend+0x24>
    1a3a:	8d 81       	ldd	r24, Y+5	; 0x05
    1a3c:	9e 81       	ldd	r25, Y+6	; 0x06
    1a3e:	0e 94 e4 0f 	call	0x1fc8	; 0x1fc8 <prvUnlockQueue>
    1a42:	0e 94 86 05 	call	0xb0c	; 0xb0c <xTaskResumeAll>
    1a46:	85 cf       	rjmp	.-246    	; 0x1952 <xQueueGenericSend+0x24>
    1a48:	8d 81       	ldd	r24, Y+5	; 0x05
    1a4a:	9e 81       	ldd	r25, Y+6	; 0x06
    1a4c:	0e 94 e4 0f 	call	0x1fc8	; 0x1fc8 <prvUnlockQueue>
    1a50:	0e 94 86 05 	call	0xb0c	; 0xb0c <xTaskResumeAll>
    1a54:	1c 86       	std	Y+12, r1	; 0x0c
    1a56:	8c 85       	ldd	r24, Y+12	; 0x0c
    1a58:	2c 96       	adiw	r28, 0x0c	; 12
    1a5a:	0f b6       	in	r0, 0x3f	; 63
    1a5c:	f8 94       	cli
    1a5e:	de bf       	out	0x3e, r29	; 62
    1a60:	0f be       	out	0x3f, r0	; 63
    1a62:	cd bf       	out	0x3d, r28	; 61
    1a64:	cf 91       	pop	r28
    1a66:	df 91       	pop	r29
    1a68:	08 95       	ret

00001a6a <xQueueGenericSendFromISR>:
    1a6a:	df 93       	push	r29
    1a6c:	cf 93       	push	r28
    1a6e:	cd b7       	in	r28, 0x3d	; 61
    1a70:	de b7       	in	r29, 0x3e	; 62
    1a72:	29 97       	sbiw	r28, 0x09	; 9
    1a74:	0f b6       	in	r0, 0x3f	; 63
    1a76:	f8 94       	cli
    1a78:	de bf       	out	0x3e, r29	; 62
    1a7a:	0f be       	out	0x3f, r0	; 63
    1a7c:	cd bf       	out	0x3d, r28	; 61
    1a7e:	9c 83       	std	Y+4, r25	; 0x04
    1a80:	8b 83       	std	Y+3, r24	; 0x03
    1a82:	7e 83       	std	Y+6, r23	; 0x06
    1a84:	6d 83       	std	Y+5, r22	; 0x05
    1a86:	58 87       	std	Y+8, r21	; 0x08
    1a88:	4f 83       	std	Y+7, r20	; 0x07
    1a8a:	29 87       	std	Y+9, r18	; 0x09
    1a8c:	19 82       	std	Y+1, r1	; 0x01
    1a8e:	eb 81       	ldd	r30, Y+3	; 0x03
    1a90:	fc 81       	ldd	r31, Y+4	; 0x04
    1a92:	92 8d       	ldd	r25, Z+26	; 0x1a
    1a94:	eb 81       	ldd	r30, Y+3	; 0x03
    1a96:	fc 81       	ldd	r31, Y+4	; 0x04
    1a98:	83 8d       	ldd	r24, Z+27	; 0x1b
    1a9a:	98 17       	cp	r25, r24
    1a9c:	60 f5       	brcc	.+88     	; 0x1af6 <xQueueGenericSendFromISR+0x8c>
    1a9e:	8b 81       	ldd	r24, Y+3	; 0x03
    1aa0:	9c 81       	ldd	r25, Y+4	; 0x04
    1aa2:	2d 81       	ldd	r18, Y+5	; 0x05
    1aa4:	3e 81       	ldd	r19, Y+6	; 0x06
    1aa6:	b9 01       	movw	r22, r18
    1aa8:	49 85       	ldd	r20, Y+9	; 0x09
    1aaa:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <prvCopyDataToQueue>
    1aae:	eb 81       	ldd	r30, Y+3	; 0x03
    1ab0:	fc 81       	ldd	r31, Y+4	; 0x04
    1ab2:	86 8d       	ldd	r24, Z+30	; 0x1e
    1ab4:	8f 3f       	cpi	r24, 0xFF	; 255
    1ab6:	a9 f4       	brne	.+42     	; 0x1ae2 <xQueueGenericSendFromISR+0x78>
    1ab8:	eb 81       	ldd	r30, Y+3	; 0x03
    1aba:	fc 81       	ldd	r31, Y+4	; 0x04
    1abc:	81 89       	ldd	r24, Z+17	; 0x11
    1abe:	88 23       	and	r24, r24
    1ac0:	b9 f0       	breq	.+46     	; 0x1af0 <xQueueGenericSendFromISR+0x86>
    1ac2:	8b 81       	ldd	r24, Y+3	; 0x03
    1ac4:	9c 81       	ldd	r25, Y+4	; 0x04
    1ac6:	41 96       	adiw	r24, 0x11	; 17
    1ac8:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <xTaskRemoveFromEventList>
    1acc:	88 23       	and	r24, r24
    1ace:	81 f0       	breq	.+32     	; 0x1af0 <xQueueGenericSendFromISR+0x86>
    1ad0:	8f 81       	ldd	r24, Y+7	; 0x07
    1ad2:	98 85       	ldd	r25, Y+8	; 0x08
    1ad4:	00 97       	sbiw	r24, 0x00	; 0
    1ad6:	61 f0       	breq	.+24     	; 0x1af0 <xQueueGenericSendFromISR+0x86>
    1ad8:	ef 81       	ldd	r30, Y+7	; 0x07
    1ada:	f8 85       	ldd	r31, Y+8	; 0x08
    1adc:	81 e0       	ldi	r24, 0x01	; 1
    1ade:	80 83       	st	Z, r24
    1ae0:	07 c0       	rjmp	.+14     	; 0x1af0 <xQueueGenericSendFromISR+0x86>
    1ae2:	eb 81       	ldd	r30, Y+3	; 0x03
    1ae4:	fc 81       	ldd	r31, Y+4	; 0x04
    1ae6:	86 8d       	ldd	r24, Z+30	; 0x1e
    1ae8:	8f 5f       	subi	r24, 0xFF	; 255
    1aea:	eb 81       	ldd	r30, Y+3	; 0x03
    1aec:	fc 81       	ldd	r31, Y+4	; 0x04
    1aee:	86 8f       	std	Z+30, r24	; 0x1e
    1af0:	81 e0       	ldi	r24, 0x01	; 1
    1af2:	8a 83       	std	Y+2, r24	; 0x02
    1af4:	01 c0       	rjmp	.+2      	; 0x1af8 <xQueueGenericSendFromISR+0x8e>
    1af6:	1a 82       	std	Y+2, r1	; 0x02
    1af8:	8a 81       	ldd	r24, Y+2	; 0x02
    1afa:	29 96       	adiw	r28, 0x09	; 9
    1afc:	0f b6       	in	r0, 0x3f	; 63
    1afe:	f8 94       	cli
    1b00:	de bf       	out	0x3e, r29	; 62
    1b02:	0f be       	out	0x3f, r0	; 63
    1b04:	cd bf       	out	0x3d, r28	; 61
    1b06:	cf 91       	pop	r28
    1b08:	df 91       	pop	r29
    1b0a:	08 95       	ret

00001b0c <xQueueGenericReceive>:
    1b0c:	df 93       	push	r29
    1b0e:	cf 93       	push	r28
    1b10:	cd b7       	in	r28, 0x3d	; 61
    1b12:	de b7       	in	r29, 0x3e	; 62
    1b14:	2e 97       	sbiw	r28, 0x0e	; 14
    1b16:	0f b6       	in	r0, 0x3f	; 63
    1b18:	f8 94       	cli
    1b1a:	de bf       	out	0x3e, r29	; 62
    1b1c:	0f be       	out	0x3f, r0	; 63
    1b1e:	cd bf       	out	0x3d, r28	; 61
    1b20:	98 87       	std	Y+8, r25	; 0x08
    1b22:	8f 83       	std	Y+7, r24	; 0x07
    1b24:	7a 87       	std	Y+10, r23	; 0x0a
    1b26:	69 87       	std	Y+9, r22	; 0x09
    1b28:	5c 87       	std	Y+12, r21	; 0x0c
    1b2a:	4b 87       	std	Y+11, r20	; 0x0b
    1b2c:	2d 87       	std	Y+13, r18	; 0x0d
    1b2e:	1b 82       	std	Y+3, r1	; 0x03
    1b30:	0f b6       	in	r0, 0x3f	; 63
    1b32:	f8 94       	cli
    1b34:	0f 92       	push	r0
    1b36:	ef 81       	ldd	r30, Y+7	; 0x07
    1b38:	f8 85       	ldd	r31, Y+8	; 0x08
    1b3a:	82 8d       	ldd	r24, Z+26	; 0x1a
    1b3c:	88 23       	and	r24, r24
    1b3e:	09 f4       	brne	.+2      	; 0x1b42 <xQueueGenericReceive+0x36>
    1b40:	4b c0       	rjmp	.+150    	; 0x1bd8 <xQueueGenericReceive+0xcc>
    1b42:	ef 81       	ldd	r30, Y+7	; 0x07
    1b44:	f8 85       	ldd	r31, Y+8	; 0x08
    1b46:	86 81       	ldd	r24, Z+6	; 0x06
    1b48:	97 81       	ldd	r25, Z+7	; 0x07
    1b4a:	9a 83       	std	Y+2, r25	; 0x02
    1b4c:	89 83       	std	Y+1, r24	; 0x01
    1b4e:	8f 81       	ldd	r24, Y+7	; 0x07
    1b50:	98 85       	ldd	r25, Y+8	; 0x08
    1b52:	29 85       	ldd	r18, Y+9	; 0x09
    1b54:	3a 85       	ldd	r19, Y+10	; 0x0a
    1b56:	b9 01       	movw	r22, r18
    1b58:	0e 94 9c 0f 	call	0x1f38	; 0x1f38 <prvCopyDataFromQueue>
    1b5c:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b5e:	88 23       	and	r24, r24
    1b60:	11 f5       	brne	.+68     	; 0x1ba6 <xQueueGenericReceive+0x9a>
    1b62:	ef 81       	ldd	r30, Y+7	; 0x07
    1b64:	f8 85       	ldd	r31, Y+8	; 0x08
    1b66:	82 8d       	ldd	r24, Z+26	; 0x1a
    1b68:	81 50       	subi	r24, 0x01	; 1
    1b6a:	ef 81       	ldd	r30, Y+7	; 0x07
    1b6c:	f8 85       	ldd	r31, Y+8	; 0x08
    1b6e:	82 8f       	std	Z+26, r24	; 0x1a
    1b70:	ef 81       	ldd	r30, Y+7	; 0x07
    1b72:	f8 85       	ldd	r31, Y+8	; 0x08
    1b74:	80 81       	ld	r24, Z
    1b76:	91 81       	ldd	r25, Z+1	; 0x01
    1b78:	00 97       	sbiw	r24, 0x00	; 0
    1b7a:	31 f4       	brne	.+12     	; 0x1b88 <xQueueGenericReceive+0x7c>
    1b7c:	0e 94 78 0a 	call	0x14f0	; 0x14f0 <xTaskGetCurrentTaskHandle>
    1b80:	ef 81       	ldd	r30, Y+7	; 0x07
    1b82:	f8 85       	ldd	r31, Y+8	; 0x08
    1b84:	93 83       	std	Z+3, r25	; 0x03
    1b86:	82 83       	std	Z+2, r24	; 0x02
    1b88:	ef 81       	ldd	r30, Y+7	; 0x07
    1b8a:	f8 85       	ldd	r31, Y+8	; 0x08
    1b8c:	80 85       	ldd	r24, Z+8	; 0x08
    1b8e:	88 23       	and	r24, r24
    1b90:	f1 f0       	breq	.+60     	; 0x1bce <xQueueGenericReceive+0xc2>
    1b92:	8f 81       	ldd	r24, Y+7	; 0x07
    1b94:	98 85       	ldd	r25, Y+8	; 0x08
    1b96:	08 96       	adiw	r24, 0x08	; 8
    1b98:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <xTaskRemoveFromEventList>
    1b9c:	81 30       	cpi	r24, 0x01	; 1
    1b9e:	b9 f4       	brne	.+46     	; 0x1bce <xQueueGenericReceive+0xc2>
    1ba0:	0e 94 01 17 	call	0x2e02	; 0x2e02 <vPortYield>
    1ba4:	14 c0       	rjmp	.+40     	; 0x1bce <xQueueGenericReceive+0xc2>
    1ba6:	ef 81       	ldd	r30, Y+7	; 0x07
    1ba8:	f8 85       	ldd	r31, Y+8	; 0x08
    1baa:	89 81       	ldd	r24, Y+1	; 0x01
    1bac:	9a 81       	ldd	r25, Y+2	; 0x02
    1bae:	97 83       	std	Z+7, r25	; 0x07
    1bb0:	86 83       	std	Z+6, r24	; 0x06
    1bb2:	ef 81       	ldd	r30, Y+7	; 0x07
    1bb4:	f8 85       	ldd	r31, Y+8	; 0x08
    1bb6:	81 89       	ldd	r24, Z+17	; 0x11
    1bb8:	88 23       	and	r24, r24
    1bba:	49 f0       	breq	.+18     	; 0x1bce <xQueueGenericReceive+0xc2>
    1bbc:	8f 81       	ldd	r24, Y+7	; 0x07
    1bbe:	98 85       	ldd	r25, Y+8	; 0x08
    1bc0:	41 96       	adiw	r24, 0x11	; 17
    1bc2:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <xTaskRemoveFromEventList>
    1bc6:	88 23       	and	r24, r24
    1bc8:	11 f0       	breq	.+4      	; 0x1bce <xQueueGenericReceive+0xc2>
    1bca:	0e 94 01 17 	call	0x2e02	; 0x2e02 <vPortYield>
    1bce:	0f 90       	pop	r0
    1bd0:	0f be       	out	0x3f, r0	; 63
    1bd2:	81 e0       	ldi	r24, 0x01	; 1
    1bd4:	8e 87       	std	Y+14, r24	; 0x0e
    1bd6:	6d c0       	rjmp	.+218    	; 0x1cb2 <xQueueGenericReceive+0x1a6>
    1bd8:	8b 85       	ldd	r24, Y+11	; 0x0b
    1bda:	9c 85       	ldd	r25, Y+12	; 0x0c
    1bdc:	00 97       	sbiw	r24, 0x00	; 0
    1bde:	21 f4       	brne	.+8      	; 0x1be8 <xQueueGenericReceive+0xdc>
    1be0:	0f 90       	pop	r0
    1be2:	0f be       	out	0x3f, r0	; 63
    1be4:	1e 86       	std	Y+14, r1	; 0x0e
    1be6:	65 c0       	rjmp	.+202    	; 0x1cb2 <xQueueGenericReceive+0x1a6>
    1be8:	8b 81       	ldd	r24, Y+3	; 0x03
    1bea:	88 23       	and	r24, r24
    1bec:	31 f4       	brne	.+12     	; 0x1bfa <xQueueGenericReceive+0xee>
    1bee:	ce 01       	movw	r24, r28
    1bf0:	04 96       	adiw	r24, 0x04	; 4
    1bf2:	0e 94 4c 08 	call	0x1098	; 0x1098 <vTaskSetTimeOutState>
    1bf6:	81 e0       	ldi	r24, 0x01	; 1
    1bf8:	8b 83       	std	Y+3, r24	; 0x03
    1bfa:	0f 90       	pop	r0
    1bfc:	0f be       	out	0x3f, r0	; 63
    1bfe:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <vTaskSuspendAll>
    1c02:	0f b6       	in	r0, 0x3f	; 63
    1c04:	f8 94       	cli
    1c06:	0f 92       	push	r0
    1c08:	ef 81       	ldd	r30, Y+7	; 0x07
    1c0a:	f8 85       	ldd	r31, Y+8	; 0x08
    1c0c:	85 8d       	ldd	r24, Z+29	; 0x1d
    1c0e:	8f 3f       	cpi	r24, 0xFF	; 255
    1c10:	19 f4       	brne	.+6      	; 0x1c18 <xQueueGenericReceive+0x10c>
    1c12:	ef 81       	ldd	r30, Y+7	; 0x07
    1c14:	f8 85       	ldd	r31, Y+8	; 0x08
    1c16:	15 8e       	std	Z+29, r1	; 0x1d
    1c18:	ef 81       	ldd	r30, Y+7	; 0x07
    1c1a:	f8 85       	ldd	r31, Y+8	; 0x08
    1c1c:	86 8d       	ldd	r24, Z+30	; 0x1e
    1c1e:	8f 3f       	cpi	r24, 0xFF	; 255
    1c20:	19 f4       	brne	.+6      	; 0x1c28 <xQueueGenericReceive+0x11c>
    1c22:	ef 81       	ldd	r30, Y+7	; 0x07
    1c24:	f8 85       	ldd	r31, Y+8	; 0x08
    1c26:	16 8e       	std	Z+30, r1	; 0x1e
    1c28:	0f 90       	pop	r0
    1c2a:	0f be       	out	0x3f, r0	; 63
    1c2c:	ce 01       	movw	r24, r28
    1c2e:	04 96       	adiw	r24, 0x04	; 4
    1c30:	9e 01       	movw	r18, r28
    1c32:	25 5f       	subi	r18, 0xF5	; 245
    1c34:	3f 4f       	sbci	r19, 0xFF	; 255
    1c36:	b9 01       	movw	r22, r18
    1c38:	0e 94 66 08 	call	0x10cc	; 0x10cc <xTaskCheckForTimeOut>
    1c3c:	88 23       	and	r24, r24
    1c3e:	91 f5       	brne	.+100    	; 0x1ca4 <xQueueGenericReceive+0x198>
    1c40:	8f 81       	ldd	r24, Y+7	; 0x07
    1c42:	98 85       	ldd	r25, Y+8	; 0x08
    1c44:	0e 94 39 10 	call	0x2072	; 0x2072 <prvIsQueueEmpty>
    1c48:	88 23       	and	r24, r24
    1c4a:	29 f1       	breq	.+74     	; 0x1c96 <xQueueGenericReceive+0x18a>
    1c4c:	ef 81       	ldd	r30, Y+7	; 0x07
    1c4e:	f8 85       	ldd	r31, Y+8	; 0x08
    1c50:	80 81       	ld	r24, Z
    1c52:	91 81       	ldd	r25, Z+1	; 0x01
    1c54:	00 97       	sbiw	r24, 0x00	; 0
    1c56:	59 f4       	brne	.+22     	; 0x1c6e <xQueueGenericReceive+0x162>
    1c58:	0f b6       	in	r0, 0x3f	; 63
    1c5a:	f8 94       	cli
    1c5c:	0f 92       	push	r0
    1c5e:	ef 81       	ldd	r30, Y+7	; 0x07
    1c60:	f8 85       	ldd	r31, Y+8	; 0x08
    1c62:	82 81       	ldd	r24, Z+2	; 0x02
    1c64:	93 81       	ldd	r25, Z+3	; 0x03
    1c66:	0e 94 8b 0a 	call	0x1516	; 0x1516 <vTaskPriorityInherit>
    1c6a:	0f 90       	pop	r0
    1c6c:	0f be       	out	0x3f, r0	; 63
    1c6e:	8f 81       	ldd	r24, Y+7	; 0x07
    1c70:	98 85       	ldd	r25, Y+8	; 0x08
    1c72:	41 96       	adiw	r24, 0x11	; 17
    1c74:	2b 85       	ldd	r18, Y+11	; 0x0b
    1c76:	3c 85       	ldd	r19, Y+12	; 0x0c
    1c78:	b9 01       	movw	r22, r18
    1c7a:	0e 94 9c 07 	call	0xf38	; 0xf38 <vTaskPlaceOnEventList>
    1c7e:	8f 81       	ldd	r24, Y+7	; 0x07
    1c80:	98 85       	ldd	r25, Y+8	; 0x08
    1c82:	0e 94 e4 0f 	call	0x1fc8	; 0x1fc8 <prvUnlockQueue>
    1c86:	0e 94 86 05 	call	0xb0c	; 0xb0c <xTaskResumeAll>
    1c8a:	88 23       	and	r24, r24
    1c8c:	09 f0       	breq	.+2      	; 0x1c90 <xQueueGenericReceive+0x184>
    1c8e:	50 cf       	rjmp	.-352    	; 0x1b30 <xQueueGenericReceive+0x24>
    1c90:	0e 94 01 17 	call	0x2e02	; 0x2e02 <vPortYield>
    1c94:	4d cf       	rjmp	.-358    	; 0x1b30 <xQueueGenericReceive+0x24>
    1c96:	8f 81       	ldd	r24, Y+7	; 0x07
    1c98:	98 85       	ldd	r25, Y+8	; 0x08
    1c9a:	0e 94 e4 0f 	call	0x1fc8	; 0x1fc8 <prvUnlockQueue>
    1c9e:	0e 94 86 05 	call	0xb0c	; 0xb0c <xTaskResumeAll>
    1ca2:	46 cf       	rjmp	.-372    	; 0x1b30 <xQueueGenericReceive+0x24>
    1ca4:	8f 81       	ldd	r24, Y+7	; 0x07
    1ca6:	98 85       	ldd	r25, Y+8	; 0x08
    1ca8:	0e 94 e4 0f 	call	0x1fc8	; 0x1fc8 <prvUnlockQueue>
    1cac:	0e 94 86 05 	call	0xb0c	; 0xb0c <xTaskResumeAll>
    1cb0:	1e 86       	std	Y+14, r1	; 0x0e
    1cb2:	8e 85       	ldd	r24, Y+14	; 0x0e
    1cb4:	2e 96       	adiw	r28, 0x0e	; 14
    1cb6:	0f b6       	in	r0, 0x3f	; 63
    1cb8:	f8 94       	cli
    1cba:	de bf       	out	0x3e, r29	; 62
    1cbc:	0f be       	out	0x3f, r0	; 63
    1cbe:	cd bf       	out	0x3d, r28	; 61
    1cc0:	cf 91       	pop	r28
    1cc2:	df 91       	pop	r29
    1cc4:	08 95       	ret

00001cc6 <xQueueReceiveFromISR>:
    1cc6:	df 93       	push	r29
    1cc8:	cf 93       	push	r28
    1cca:	cd b7       	in	r28, 0x3d	; 61
    1ccc:	de b7       	in	r29, 0x3e	; 62
    1cce:	28 97       	sbiw	r28, 0x08	; 8
    1cd0:	0f b6       	in	r0, 0x3f	; 63
    1cd2:	f8 94       	cli
    1cd4:	de bf       	out	0x3e, r29	; 62
    1cd6:	0f be       	out	0x3f, r0	; 63
    1cd8:	cd bf       	out	0x3d, r28	; 61
    1cda:	9c 83       	std	Y+4, r25	; 0x04
    1cdc:	8b 83       	std	Y+3, r24	; 0x03
    1cde:	7e 83       	std	Y+6, r23	; 0x06
    1ce0:	6d 83       	std	Y+5, r22	; 0x05
    1ce2:	58 87       	std	Y+8, r21	; 0x08
    1ce4:	4f 83       	std	Y+7, r20	; 0x07
    1ce6:	19 82       	std	Y+1, r1	; 0x01
    1ce8:	eb 81       	ldd	r30, Y+3	; 0x03
    1cea:	fc 81       	ldd	r31, Y+4	; 0x04
    1cec:	82 8d       	ldd	r24, Z+26	; 0x1a
    1cee:	88 23       	and	r24, r24
    1cf0:	91 f1       	breq	.+100    	; 0x1d56 <xQueueReceiveFromISR+0x90>
    1cf2:	8b 81       	ldd	r24, Y+3	; 0x03
    1cf4:	9c 81       	ldd	r25, Y+4	; 0x04
    1cf6:	2d 81       	ldd	r18, Y+5	; 0x05
    1cf8:	3e 81       	ldd	r19, Y+6	; 0x06
    1cfa:	b9 01       	movw	r22, r18
    1cfc:	0e 94 9c 0f 	call	0x1f38	; 0x1f38 <prvCopyDataFromQueue>
    1d00:	eb 81       	ldd	r30, Y+3	; 0x03
    1d02:	fc 81       	ldd	r31, Y+4	; 0x04
    1d04:	82 8d       	ldd	r24, Z+26	; 0x1a
    1d06:	81 50       	subi	r24, 0x01	; 1
    1d08:	eb 81       	ldd	r30, Y+3	; 0x03
    1d0a:	fc 81       	ldd	r31, Y+4	; 0x04
    1d0c:	82 8f       	std	Z+26, r24	; 0x1a
    1d0e:	eb 81       	ldd	r30, Y+3	; 0x03
    1d10:	fc 81       	ldd	r31, Y+4	; 0x04
    1d12:	85 8d       	ldd	r24, Z+29	; 0x1d
    1d14:	8f 3f       	cpi	r24, 0xFF	; 255
    1d16:	a9 f4       	brne	.+42     	; 0x1d42 <xQueueReceiveFromISR+0x7c>
    1d18:	eb 81       	ldd	r30, Y+3	; 0x03
    1d1a:	fc 81       	ldd	r31, Y+4	; 0x04
    1d1c:	80 85       	ldd	r24, Z+8	; 0x08
    1d1e:	88 23       	and	r24, r24
    1d20:	b9 f0       	breq	.+46     	; 0x1d50 <xQueueReceiveFromISR+0x8a>
    1d22:	8b 81       	ldd	r24, Y+3	; 0x03
    1d24:	9c 81       	ldd	r25, Y+4	; 0x04
    1d26:	08 96       	adiw	r24, 0x08	; 8
    1d28:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <xTaskRemoveFromEventList>
    1d2c:	88 23       	and	r24, r24
    1d2e:	81 f0       	breq	.+32     	; 0x1d50 <xQueueReceiveFromISR+0x8a>
    1d30:	8f 81       	ldd	r24, Y+7	; 0x07
    1d32:	98 85       	ldd	r25, Y+8	; 0x08
    1d34:	00 97       	sbiw	r24, 0x00	; 0
    1d36:	61 f0       	breq	.+24     	; 0x1d50 <xQueueReceiveFromISR+0x8a>
    1d38:	ef 81       	ldd	r30, Y+7	; 0x07
    1d3a:	f8 85       	ldd	r31, Y+8	; 0x08
    1d3c:	81 e0       	ldi	r24, 0x01	; 1
    1d3e:	80 83       	st	Z, r24
    1d40:	07 c0       	rjmp	.+14     	; 0x1d50 <xQueueReceiveFromISR+0x8a>
    1d42:	eb 81       	ldd	r30, Y+3	; 0x03
    1d44:	fc 81       	ldd	r31, Y+4	; 0x04
    1d46:	85 8d       	ldd	r24, Z+29	; 0x1d
    1d48:	8f 5f       	subi	r24, 0xFF	; 255
    1d4a:	eb 81       	ldd	r30, Y+3	; 0x03
    1d4c:	fc 81       	ldd	r31, Y+4	; 0x04
    1d4e:	85 8f       	std	Z+29, r24	; 0x1d
    1d50:	81 e0       	ldi	r24, 0x01	; 1
    1d52:	8a 83       	std	Y+2, r24	; 0x02
    1d54:	01 c0       	rjmp	.+2      	; 0x1d58 <xQueueReceiveFromISR+0x92>
    1d56:	1a 82       	std	Y+2, r1	; 0x02
    1d58:	8a 81       	ldd	r24, Y+2	; 0x02
    1d5a:	28 96       	adiw	r28, 0x08	; 8
    1d5c:	0f b6       	in	r0, 0x3f	; 63
    1d5e:	f8 94       	cli
    1d60:	de bf       	out	0x3e, r29	; 62
    1d62:	0f be       	out	0x3f, r0	; 63
    1d64:	cd bf       	out	0x3d, r28	; 61
    1d66:	cf 91       	pop	r28
    1d68:	df 91       	pop	r29
    1d6a:	08 95       	ret

00001d6c <uxQueueMessagesWaiting>:
    1d6c:	df 93       	push	r29
    1d6e:	cf 93       	push	r28
    1d70:	00 d0       	rcall	.+0      	; 0x1d72 <uxQueueMessagesWaiting+0x6>
    1d72:	cd b7       	in	r28, 0x3d	; 61
    1d74:	de b7       	in	r29, 0x3e	; 62
    1d76:	9b 83       	std	Y+3, r25	; 0x03
    1d78:	8a 83       	std	Y+2, r24	; 0x02
    1d7a:	0f b6       	in	r0, 0x3f	; 63
    1d7c:	f8 94       	cli
    1d7e:	0f 92       	push	r0
    1d80:	ea 81       	ldd	r30, Y+2	; 0x02
    1d82:	fb 81       	ldd	r31, Y+3	; 0x03
    1d84:	82 8d       	ldd	r24, Z+26	; 0x1a
    1d86:	89 83       	std	Y+1, r24	; 0x01
    1d88:	0f 90       	pop	r0
    1d8a:	0f be       	out	0x3f, r0	; 63
    1d8c:	89 81       	ldd	r24, Y+1	; 0x01
    1d8e:	0f 90       	pop	r0
    1d90:	0f 90       	pop	r0
    1d92:	0f 90       	pop	r0
    1d94:	cf 91       	pop	r28
    1d96:	df 91       	pop	r29
    1d98:	08 95       	ret

00001d9a <uxQueueMessagesWaitingFromISR>:
    1d9a:	df 93       	push	r29
    1d9c:	cf 93       	push	r28
    1d9e:	00 d0       	rcall	.+0      	; 0x1da0 <uxQueueMessagesWaitingFromISR+0x6>
    1da0:	cd b7       	in	r28, 0x3d	; 61
    1da2:	de b7       	in	r29, 0x3e	; 62
    1da4:	9b 83       	std	Y+3, r25	; 0x03
    1da6:	8a 83       	std	Y+2, r24	; 0x02
    1da8:	ea 81       	ldd	r30, Y+2	; 0x02
    1daa:	fb 81       	ldd	r31, Y+3	; 0x03
    1dac:	82 8d       	ldd	r24, Z+26	; 0x1a
    1dae:	89 83       	std	Y+1, r24	; 0x01
    1db0:	89 81       	ldd	r24, Y+1	; 0x01
    1db2:	0f 90       	pop	r0
    1db4:	0f 90       	pop	r0
    1db6:	0f 90       	pop	r0
    1db8:	cf 91       	pop	r28
    1dba:	df 91       	pop	r29
    1dbc:	08 95       	ret

00001dbe <vQueueDelete>:
    1dbe:	df 93       	push	r29
    1dc0:	cf 93       	push	r28
    1dc2:	0f 92       	push	r0
    1dc4:	0f 92       	push	r0
    1dc6:	cd b7       	in	r28, 0x3d	; 61
    1dc8:	de b7       	in	r29, 0x3e	; 62
    1dca:	9a 83       	std	Y+2, r25	; 0x02
    1dcc:	89 83       	std	Y+1, r24	; 0x01
    1dce:	e9 81       	ldd	r30, Y+1	; 0x01
    1dd0:	fa 81       	ldd	r31, Y+2	; 0x02
    1dd2:	80 81       	ld	r24, Z
    1dd4:	91 81       	ldd	r25, Z+1	; 0x01
    1dd6:	0e 94 ff 14 	call	0x29fe	; 0x29fe <vPortFree>
    1dda:	89 81       	ldd	r24, Y+1	; 0x01
    1ddc:	9a 81       	ldd	r25, Y+2	; 0x02
    1dde:	0e 94 ff 14 	call	0x29fe	; 0x29fe <vPortFree>
    1de2:	0f 90       	pop	r0
    1de4:	0f 90       	pop	r0
    1de6:	cf 91       	pop	r28
    1de8:	df 91       	pop	r29
    1dea:	08 95       	ret

00001dec <prvCopyDataToQueue>:
    1dec:	df 93       	push	r29
    1dee:	cf 93       	push	r28
    1df0:	00 d0       	rcall	.+0      	; 0x1df2 <prvCopyDataToQueue+0x6>
    1df2:	0f 92       	push	r0
    1df4:	0f 92       	push	r0
    1df6:	cd b7       	in	r28, 0x3d	; 61
    1df8:	de b7       	in	r29, 0x3e	; 62
    1dfa:	9a 83       	std	Y+2, r25	; 0x02
    1dfc:	89 83       	std	Y+1, r24	; 0x01
    1dfe:	7c 83       	std	Y+4, r23	; 0x04
    1e00:	6b 83       	std	Y+3, r22	; 0x03
    1e02:	4d 83       	std	Y+5, r20	; 0x05
    1e04:	e9 81       	ldd	r30, Y+1	; 0x01
    1e06:	fa 81       	ldd	r31, Y+2	; 0x02
    1e08:	84 8d       	ldd	r24, Z+28	; 0x1c
    1e0a:	88 23       	and	r24, r24
    1e0c:	91 f4       	brne	.+36     	; 0x1e32 <prvCopyDataToQueue+0x46>
    1e0e:	e9 81       	ldd	r30, Y+1	; 0x01
    1e10:	fa 81       	ldd	r31, Y+2	; 0x02
    1e12:	80 81       	ld	r24, Z
    1e14:	91 81       	ldd	r25, Z+1	; 0x01
    1e16:	00 97       	sbiw	r24, 0x00	; 0
    1e18:	09 f0       	breq	.+2      	; 0x1e1c <prvCopyDataToQueue+0x30>
    1e1a:	7f c0       	rjmp	.+254    	; 0x1f1a <prvCopyDataToQueue+0x12e>
    1e1c:	e9 81       	ldd	r30, Y+1	; 0x01
    1e1e:	fa 81       	ldd	r31, Y+2	; 0x02
    1e20:	82 81       	ldd	r24, Z+2	; 0x02
    1e22:	93 81       	ldd	r25, Z+3	; 0x03
    1e24:	0e 94 10 0b 	call	0x1620	; 0x1620 <vTaskPriorityDisinherit>
    1e28:	e9 81       	ldd	r30, Y+1	; 0x01
    1e2a:	fa 81       	ldd	r31, Y+2	; 0x02
    1e2c:	13 82       	std	Z+3, r1	; 0x03
    1e2e:	12 82       	std	Z+2, r1	; 0x02
    1e30:	74 c0       	rjmp	.+232    	; 0x1f1a <prvCopyDataToQueue+0x12e>
    1e32:	8d 81       	ldd	r24, Y+5	; 0x05
    1e34:	88 23       	and	r24, r24
    1e36:	99 f5       	brne	.+102    	; 0x1e9e <prvCopyDataToQueue+0xb2>
    1e38:	e9 81       	ldd	r30, Y+1	; 0x01
    1e3a:	fa 81       	ldd	r31, Y+2	; 0x02
    1e3c:	64 81       	ldd	r22, Z+4	; 0x04
    1e3e:	75 81       	ldd	r23, Z+5	; 0x05
    1e40:	e9 81       	ldd	r30, Y+1	; 0x01
    1e42:	fa 81       	ldd	r31, Y+2	; 0x02
    1e44:	84 8d       	ldd	r24, Z+28	; 0x1c
    1e46:	48 2f       	mov	r20, r24
    1e48:	50 e0       	ldi	r21, 0x00	; 0
    1e4a:	2b 81       	ldd	r18, Y+3	; 0x03
    1e4c:	3c 81       	ldd	r19, Y+4	; 0x04
    1e4e:	cb 01       	movw	r24, r22
    1e50:	b9 01       	movw	r22, r18
    1e52:	0e 94 36 20 	call	0x406c	; 0x406c <memcpy>
    1e56:	e9 81       	ldd	r30, Y+1	; 0x01
    1e58:	fa 81       	ldd	r31, Y+2	; 0x02
    1e5a:	24 81       	ldd	r18, Z+4	; 0x04
    1e5c:	35 81       	ldd	r19, Z+5	; 0x05
    1e5e:	e9 81       	ldd	r30, Y+1	; 0x01
    1e60:	fa 81       	ldd	r31, Y+2	; 0x02
    1e62:	84 8d       	ldd	r24, Z+28	; 0x1c
    1e64:	88 2f       	mov	r24, r24
    1e66:	90 e0       	ldi	r25, 0x00	; 0
    1e68:	82 0f       	add	r24, r18
    1e6a:	93 1f       	adc	r25, r19
    1e6c:	e9 81       	ldd	r30, Y+1	; 0x01
    1e6e:	fa 81       	ldd	r31, Y+2	; 0x02
    1e70:	95 83       	std	Z+5, r25	; 0x05
    1e72:	84 83       	std	Z+4, r24	; 0x04
    1e74:	e9 81       	ldd	r30, Y+1	; 0x01
    1e76:	fa 81       	ldd	r31, Y+2	; 0x02
    1e78:	24 81       	ldd	r18, Z+4	; 0x04
    1e7a:	35 81       	ldd	r19, Z+5	; 0x05
    1e7c:	e9 81       	ldd	r30, Y+1	; 0x01
    1e7e:	fa 81       	ldd	r31, Y+2	; 0x02
    1e80:	82 81       	ldd	r24, Z+2	; 0x02
    1e82:	93 81       	ldd	r25, Z+3	; 0x03
    1e84:	28 17       	cp	r18, r24
    1e86:	39 07       	cpc	r19, r25
    1e88:	08 f4       	brcc	.+2      	; 0x1e8c <prvCopyDataToQueue+0xa0>
    1e8a:	47 c0       	rjmp	.+142    	; 0x1f1a <prvCopyDataToQueue+0x12e>
    1e8c:	e9 81       	ldd	r30, Y+1	; 0x01
    1e8e:	fa 81       	ldd	r31, Y+2	; 0x02
    1e90:	80 81       	ld	r24, Z
    1e92:	91 81       	ldd	r25, Z+1	; 0x01
    1e94:	e9 81       	ldd	r30, Y+1	; 0x01
    1e96:	fa 81       	ldd	r31, Y+2	; 0x02
    1e98:	95 83       	std	Z+5, r25	; 0x05
    1e9a:	84 83       	std	Z+4, r24	; 0x04
    1e9c:	3e c0       	rjmp	.+124    	; 0x1f1a <prvCopyDataToQueue+0x12e>
    1e9e:	e9 81       	ldd	r30, Y+1	; 0x01
    1ea0:	fa 81       	ldd	r31, Y+2	; 0x02
    1ea2:	66 81       	ldd	r22, Z+6	; 0x06
    1ea4:	77 81       	ldd	r23, Z+7	; 0x07
    1ea6:	e9 81       	ldd	r30, Y+1	; 0x01
    1ea8:	fa 81       	ldd	r31, Y+2	; 0x02
    1eaa:	84 8d       	ldd	r24, Z+28	; 0x1c
    1eac:	48 2f       	mov	r20, r24
    1eae:	50 e0       	ldi	r21, 0x00	; 0
    1eb0:	2b 81       	ldd	r18, Y+3	; 0x03
    1eb2:	3c 81       	ldd	r19, Y+4	; 0x04
    1eb4:	cb 01       	movw	r24, r22
    1eb6:	b9 01       	movw	r22, r18
    1eb8:	0e 94 36 20 	call	0x406c	; 0x406c <memcpy>
    1ebc:	e9 81       	ldd	r30, Y+1	; 0x01
    1ebe:	fa 81       	ldd	r31, Y+2	; 0x02
    1ec0:	26 81       	ldd	r18, Z+6	; 0x06
    1ec2:	37 81       	ldd	r19, Z+7	; 0x07
    1ec4:	e9 81       	ldd	r30, Y+1	; 0x01
    1ec6:	fa 81       	ldd	r31, Y+2	; 0x02
    1ec8:	84 8d       	ldd	r24, Z+28	; 0x1c
    1eca:	88 2f       	mov	r24, r24
    1ecc:	90 e0       	ldi	r25, 0x00	; 0
    1ece:	90 95       	com	r25
    1ed0:	81 95       	neg	r24
    1ed2:	9f 4f       	sbci	r25, 0xFF	; 255
    1ed4:	82 0f       	add	r24, r18
    1ed6:	93 1f       	adc	r25, r19
    1ed8:	e9 81       	ldd	r30, Y+1	; 0x01
    1eda:	fa 81       	ldd	r31, Y+2	; 0x02
    1edc:	97 83       	std	Z+7, r25	; 0x07
    1ede:	86 83       	std	Z+6, r24	; 0x06
    1ee0:	e9 81       	ldd	r30, Y+1	; 0x01
    1ee2:	fa 81       	ldd	r31, Y+2	; 0x02
    1ee4:	26 81       	ldd	r18, Z+6	; 0x06
    1ee6:	37 81       	ldd	r19, Z+7	; 0x07
    1ee8:	e9 81       	ldd	r30, Y+1	; 0x01
    1eea:	fa 81       	ldd	r31, Y+2	; 0x02
    1eec:	80 81       	ld	r24, Z
    1eee:	91 81       	ldd	r25, Z+1	; 0x01
    1ef0:	28 17       	cp	r18, r24
    1ef2:	39 07       	cpc	r19, r25
    1ef4:	90 f4       	brcc	.+36     	; 0x1f1a <prvCopyDataToQueue+0x12e>
    1ef6:	e9 81       	ldd	r30, Y+1	; 0x01
    1ef8:	fa 81       	ldd	r31, Y+2	; 0x02
    1efa:	22 81       	ldd	r18, Z+2	; 0x02
    1efc:	33 81       	ldd	r19, Z+3	; 0x03
    1efe:	e9 81       	ldd	r30, Y+1	; 0x01
    1f00:	fa 81       	ldd	r31, Y+2	; 0x02
    1f02:	84 8d       	ldd	r24, Z+28	; 0x1c
    1f04:	88 2f       	mov	r24, r24
    1f06:	90 e0       	ldi	r25, 0x00	; 0
    1f08:	90 95       	com	r25
    1f0a:	81 95       	neg	r24
    1f0c:	9f 4f       	sbci	r25, 0xFF	; 255
    1f0e:	82 0f       	add	r24, r18
    1f10:	93 1f       	adc	r25, r19
    1f12:	e9 81       	ldd	r30, Y+1	; 0x01
    1f14:	fa 81       	ldd	r31, Y+2	; 0x02
    1f16:	97 83       	std	Z+7, r25	; 0x07
    1f18:	86 83       	std	Z+6, r24	; 0x06
    1f1a:	e9 81       	ldd	r30, Y+1	; 0x01
    1f1c:	fa 81       	ldd	r31, Y+2	; 0x02
    1f1e:	82 8d       	ldd	r24, Z+26	; 0x1a
    1f20:	8f 5f       	subi	r24, 0xFF	; 255
    1f22:	e9 81       	ldd	r30, Y+1	; 0x01
    1f24:	fa 81       	ldd	r31, Y+2	; 0x02
    1f26:	82 8f       	std	Z+26, r24	; 0x1a
    1f28:	0f 90       	pop	r0
    1f2a:	0f 90       	pop	r0
    1f2c:	0f 90       	pop	r0
    1f2e:	0f 90       	pop	r0
    1f30:	0f 90       	pop	r0
    1f32:	cf 91       	pop	r28
    1f34:	df 91       	pop	r29
    1f36:	08 95       	ret

00001f38 <prvCopyDataFromQueue>:
    1f38:	df 93       	push	r29
    1f3a:	cf 93       	push	r28
    1f3c:	00 d0       	rcall	.+0      	; 0x1f3e <prvCopyDataFromQueue+0x6>
    1f3e:	0f 92       	push	r0
    1f40:	cd b7       	in	r28, 0x3d	; 61
    1f42:	de b7       	in	r29, 0x3e	; 62
    1f44:	9a 83       	std	Y+2, r25	; 0x02
    1f46:	89 83       	std	Y+1, r24	; 0x01
    1f48:	7c 83       	std	Y+4, r23	; 0x04
    1f4a:	6b 83       	std	Y+3, r22	; 0x03
    1f4c:	e9 81       	ldd	r30, Y+1	; 0x01
    1f4e:	fa 81       	ldd	r31, Y+2	; 0x02
    1f50:	80 81       	ld	r24, Z
    1f52:	91 81       	ldd	r25, Z+1	; 0x01
    1f54:	00 97       	sbiw	r24, 0x00	; 0
    1f56:	89 f1       	breq	.+98     	; 0x1fba <prvCopyDataFromQueue+0x82>
    1f58:	e9 81       	ldd	r30, Y+1	; 0x01
    1f5a:	fa 81       	ldd	r31, Y+2	; 0x02
    1f5c:	26 81       	ldd	r18, Z+6	; 0x06
    1f5e:	37 81       	ldd	r19, Z+7	; 0x07
    1f60:	e9 81       	ldd	r30, Y+1	; 0x01
    1f62:	fa 81       	ldd	r31, Y+2	; 0x02
    1f64:	84 8d       	ldd	r24, Z+28	; 0x1c
    1f66:	88 2f       	mov	r24, r24
    1f68:	90 e0       	ldi	r25, 0x00	; 0
    1f6a:	82 0f       	add	r24, r18
    1f6c:	93 1f       	adc	r25, r19
    1f6e:	e9 81       	ldd	r30, Y+1	; 0x01
    1f70:	fa 81       	ldd	r31, Y+2	; 0x02
    1f72:	97 83       	std	Z+7, r25	; 0x07
    1f74:	86 83       	std	Z+6, r24	; 0x06
    1f76:	e9 81       	ldd	r30, Y+1	; 0x01
    1f78:	fa 81       	ldd	r31, Y+2	; 0x02
    1f7a:	26 81       	ldd	r18, Z+6	; 0x06
    1f7c:	37 81       	ldd	r19, Z+7	; 0x07
    1f7e:	e9 81       	ldd	r30, Y+1	; 0x01
    1f80:	fa 81       	ldd	r31, Y+2	; 0x02
    1f82:	82 81       	ldd	r24, Z+2	; 0x02
    1f84:	93 81       	ldd	r25, Z+3	; 0x03
    1f86:	28 17       	cp	r18, r24
    1f88:	39 07       	cpc	r19, r25
    1f8a:	40 f0       	brcs	.+16     	; 0x1f9c <prvCopyDataFromQueue+0x64>
    1f8c:	e9 81       	ldd	r30, Y+1	; 0x01
    1f8e:	fa 81       	ldd	r31, Y+2	; 0x02
    1f90:	80 81       	ld	r24, Z
    1f92:	91 81       	ldd	r25, Z+1	; 0x01
    1f94:	e9 81       	ldd	r30, Y+1	; 0x01
    1f96:	fa 81       	ldd	r31, Y+2	; 0x02
    1f98:	97 83       	std	Z+7, r25	; 0x07
    1f9a:	86 83       	std	Z+6, r24	; 0x06
    1f9c:	e9 81       	ldd	r30, Y+1	; 0x01
    1f9e:	fa 81       	ldd	r31, Y+2	; 0x02
    1fa0:	46 81       	ldd	r20, Z+6	; 0x06
    1fa2:	57 81       	ldd	r21, Z+7	; 0x07
    1fa4:	e9 81       	ldd	r30, Y+1	; 0x01
    1fa6:	fa 81       	ldd	r31, Y+2	; 0x02
    1fa8:	84 8d       	ldd	r24, Z+28	; 0x1c
    1faa:	28 2f       	mov	r18, r24
    1fac:	30 e0       	ldi	r19, 0x00	; 0
    1fae:	8b 81       	ldd	r24, Y+3	; 0x03
    1fb0:	9c 81       	ldd	r25, Y+4	; 0x04
    1fb2:	ba 01       	movw	r22, r20
    1fb4:	a9 01       	movw	r20, r18
    1fb6:	0e 94 36 20 	call	0x406c	; 0x406c <memcpy>
    1fba:	0f 90       	pop	r0
    1fbc:	0f 90       	pop	r0
    1fbe:	0f 90       	pop	r0
    1fc0:	0f 90       	pop	r0
    1fc2:	cf 91       	pop	r28
    1fc4:	df 91       	pop	r29
    1fc6:	08 95       	ret

00001fc8 <prvUnlockQueue>:
    1fc8:	df 93       	push	r29
    1fca:	cf 93       	push	r28
    1fcc:	0f 92       	push	r0
    1fce:	0f 92       	push	r0
    1fd0:	cd b7       	in	r28, 0x3d	; 61
    1fd2:	de b7       	in	r29, 0x3e	; 62
    1fd4:	9a 83       	std	Y+2, r25	; 0x02
    1fd6:	89 83       	std	Y+1, r24	; 0x01
    1fd8:	0f b6       	in	r0, 0x3f	; 63
    1fda:	f8 94       	cli
    1fdc:	0f 92       	push	r0
    1fde:	15 c0       	rjmp	.+42     	; 0x200a <prvUnlockQueue+0x42>
    1fe0:	e9 81       	ldd	r30, Y+1	; 0x01
    1fe2:	fa 81       	ldd	r31, Y+2	; 0x02
    1fe4:	81 89       	ldd	r24, Z+17	; 0x11
    1fe6:	88 23       	and	r24, r24
    1fe8:	a9 f0       	breq	.+42     	; 0x2014 <prvUnlockQueue+0x4c>
    1fea:	89 81       	ldd	r24, Y+1	; 0x01
    1fec:	9a 81       	ldd	r25, Y+2	; 0x02
    1fee:	41 96       	adiw	r24, 0x11	; 17
    1ff0:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <xTaskRemoveFromEventList>
    1ff4:	88 23       	and	r24, r24
    1ff6:	11 f0       	breq	.+4      	; 0x1ffc <prvUnlockQueue+0x34>
    1ff8:	0e 94 cd 08 	call	0x119a	; 0x119a <vTaskMissedYield>
    1ffc:	e9 81       	ldd	r30, Y+1	; 0x01
    1ffe:	fa 81       	ldd	r31, Y+2	; 0x02
    2000:	86 8d       	ldd	r24, Z+30	; 0x1e
    2002:	81 50       	subi	r24, 0x01	; 1
    2004:	e9 81       	ldd	r30, Y+1	; 0x01
    2006:	fa 81       	ldd	r31, Y+2	; 0x02
    2008:	86 8f       	std	Z+30, r24	; 0x1e
    200a:	e9 81       	ldd	r30, Y+1	; 0x01
    200c:	fa 81       	ldd	r31, Y+2	; 0x02
    200e:	86 8d       	ldd	r24, Z+30	; 0x1e
    2010:	18 16       	cp	r1, r24
    2012:	34 f3       	brlt	.-52     	; 0x1fe0 <prvUnlockQueue+0x18>
    2014:	e9 81       	ldd	r30, Y+1	; 0x01
    2016:	fa 81       	ldd	r31, Y+2	; 0x02
    2018:	8f ef       	ldi	r24, 0xFF	; 255
    201a:	86 8f       	std	Z+30, r24	; 0x1e
    201c:	0f 90       	pop	r0
    201e:	0f be       	out	0x3f, r0	; 63
    2020:	0f b6       	in	r0, 0x3f	; 63
    2022:	f8 94       	cli
    2024:	0f 92       	push	r0
    2026:	15 c0       	rjmp	.+42     	; 0x2052 <prvUnlockQueue+0x8a>
    2028:	e9 81       	ldd	r30, Y+1	; 0x01
    202a:	fa 81       	ldd	r31, Y+2	; 0x02
    202c:	80 85       	ldd	r24, Z+8	; 0x08
    202e:	88 23       	and	r24, r24
    2030:	a9 f0       	breq	.+42     	; 0x205c <prvUnlockQueue+0x94>
    2032:	89 81       	ldd	r24, Y+1	; 0x01
    2034:	9a 81       	ldd	r25, Y+2	; 0x02
    2036:	08 96       	adiw	r24, 0x08	; 8
    2038:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <xTaskRemoveFromEventList>
    203c:	88 23       	and	r24, r24
    203e:	11 f0       	breq	.+4      	; 0x2044 <prvUnlockQueue+0x7c>
    2040:	0e 94 cd 08 	call	0x119a	; 0x119a <vTaskMissedYield>
    2044:	e9 81       	ldd	r30, Y+1	; 0x01
    2046:	fa 81       	ldd	r31, Y+2	; 0x02
    2048:	85 8d       	ldd	r24, Z+29	; 0x1d
    204a:	81 50       	subi	r24, 0x01	; 1
    204c:	e9 81       	ldd	r30, Y+1	; 0x01
    204e:	fa 81       	ldd	r31, Y+2	; 0x02
    2050:	85 8f       	std	Z+29, r24	; 0x1d
    2052:	e9 81       	ldd	r30, Y+1	; 0x01
    2054:	fa 81       	ldd	r31, Y+2	; 0x02
    2056:	85 8d       	ldd	r24, Z+29	; 0x1d
    2058:	18 16       	cp	r1, r24
    205a:	34 f3       	brlt	.-52     	; 0x2028 <prvUnlockQueue+0x60>
    205c:	e9 81       	ldd	r30, Y+1	; 0x01
    205e:	fa 81       	ldd	r31, Y+2	; 0x02
    2060:	8f ef       	ldi	r24, 0xFF	; 255
    2062:	85 8f       	std	Z+29, r24	; 0x1d
    2064:	0f 90       	pop	r0
    2066:	0f be       	out	0x3f, r0	; 63
    2068:	0f 90       	pop	r0
    206a:	0f 90       	pop	r0
    206c:	cf 91       	pop	r28
    206e:	df 91       	pop	r29
    2070:	08 95       	ret

00002072 <prvIsQueueEmpty>:
    2072:	df 93       	push	r29
    2074:	cf 93       	push	r28
    2076:	00 d0       	rcall	.+0      	; 0x2078 <prvIsQueueEmpty+0x6>
    2078:	cd b7       	in	r28, 0x3d	; 61
    207a:	de b7       	in	r29, 0x3e	; 62
    207c:	9b 83       	std	Y+3, r25	; 0x03
    207e:	8a 83       	std	Y+2, r24	; 0x02
    2080:	0f b6       	in	r0, 0x3f	; 63
    2082:	f8 94       	cli
    2084:	0f 92       	push	r0
    2086:	ea 81       	ldd	r30, Y+2	; 0x02
    2088:	fb 81       	ldd	r31, Y+3	; 0x03
    208a:	82 8d       	ldd	r24, Z+26	; 0x1a
    208c:	19 82       	std	Y+1, r1	; 0x01
    208e:	88 23       	and	r24, r24
    2090:	11 f4       	brne	.+4      	; 0x2096 <prvIsQueueEmpty+0x24>
    2092:	81 e0       	ldi	r24, 0x01	; 1
    2094:	89 83       	std	Y+1, r24	; 0x01
    2096:	0f 90       	pop	r0
    2098:	0f be       	out	0x3f, r0	; 63
    209a:	89 81       	ldd	r24, Y+1	; 0x01
    209c:	0f 90       	pop	r0
    209e:	0f 90       	pop	r0
    20a0:	0f 90       	pop	r0
    20a2:	cf 91       	pop	r28
    20a4:	df 91       	pop	r29
    20a6:	08 95       	ret

000020a8 <xQueueIsQueueEmptyFromISR>:
    20a8:	df 93       	push	r29
    20aa:	cf 93       	push	r28
    20ac:	00 d0       	rcall	.+0      	; 0x20ae <xQueueIsQueueEmptyFromISR+0x6>
    20ae:	cd b7       	in	r28, 0x3d	; 61
    20b0:	de b7       	in	r29, 0x3e	; 62
    20b2:	9b 83       	std	Y+3, r25	; 0x03
    20b4:	8a 83       	std	Y+2, r24	; 0x02
    20b6:	ea 81       	ldd	r30, Y+2	; 0x02
    20b8:	fb 81       	ldd	r31, Y+3	; 0x03
    20ba:	82 8d       	ldd	r24, Z+26	; 0x1a
    20bc:	19 82       	std	Y+1, r1	; 0x01
    20be:	88 23       	and	r24, r24
    20c0:	11 f4       	brne	.+4      	; 0x20c6 <xQueueIsQueueEmptyFromISR+0x1e>
    20c2:	81 e0       	ldi	r24, 0x01	; 1
    20c4:	89 83       	std	Y+1, r24	; 0x01
    20c6:	89 81       	ldd	r24, Y+1	; 0x01
    20c8:	0f 90       	pop	r0
    20ca:	0f 90       	pop	r0
    20cc:	0f 90       	pop	r0
    20ce:	cf 91       	pop	r28
    20d0:	df 91       	pop	r29
    20d2:	08 95       	ret

000020d4 <prvIsQueueFull>:
    20d4:	df 93       	push	r29
    20d6:	cf 93       	push	r28
    20d8:	00 d0       	rcall	.+0      	; 0x20da <prvIsQueueFull+0x6>
    20da:	cd b7       	in	r28, 0x3d	; 61
    20dc:	de b7       	in	r29, 0x3e	; 62
    20de:	9b 83       	std	Y+3, r25	; 0x03
    20e0:	8a 83       	std	Y+2, r24	; 0x02
    20e2:	0f b6       	in	r0, 0x3f	; 63
    20e4:	f8 94       	cli
    20e6:	0f 92       	push	r0
    20e8:	ea 81       	ldd	r30, Y+2	; 0x02
    20ea:	fb 81       	ldd	r31, Y+3	; 0x03
    20ec:	92 8d       	ldd	r25, Z+26	; 0x1a
    20ee:	ea 81       	ldd	r30, Y+2	; 0x02
    20f0:	fb 81       	ldd	r31, Y+3	; 0x03
    20f2:	83 8d       	ldd	r24, Z+27	; 0x1b
    20f4:	19 82       	std	Y+1, r1	; 0x01
    20f6:	98 17       	cp	r25, r24
    20f8:	11 f4       	brne	.+4      	; 0x20fe <prvIsQueueFull+0x2a>
    20fa:	81 e0       	ldi	r24, 0x01	; 1
    20fc:	89 83       	std	Y+1, r24	; 0x01
    20fe:	0f 90       	pop	r0
    2100:	0f be       	out	0x3f, r0	; 63
    2102:	89 81       	ldd	r24, Y+1	; 0x01
    2104:	0f 90       	pop	r0
    2106:	0f 90       	pop	r0
    2108:	0f 90       	pop	r0
    210a:	cf 91       	pop	r28
    210c:	df 91       	pop	r29
    210e:	08 95       	ret

00002110 <xQueueIsQueueFullFromISR>:
    2110:	df 93       	push	r29
    2112:	cf 93       	push	r28
    2114:	00 d0       	rcall	.+0      	; 0x2116 <xQueueIsQueueFullFromISR+0x6>
    2116:	cd b7       	in	r28, 0x3d	; 61
    2118:	de b7       	in	r29, 0x3e	; 62
    211a:	9b 83       	std	Y+3, r25	; 0x03
    211c:	8a 83       	std	Y+2, r24	; 0x02
    211e:	ea 81       	ldd	r30, Y+2	; 0x02
    2120:	fb 81       	ldd	r31, Y+3	; 0x03
    2122:	92 8d       	ldd	r25, Z+26	; 0x1a
    2124:	ea 81       	ldd	r30, Y+2	; 0x02
    2126:	fb 81       	ldd	r31, Y+3	; 0x03
    2128:	83 8d       	ldd	r24, Z+27	; 0x1b
    212a:	19 82       	std	Y+1, r1	; 0x01
    212c:	98 17       	cp	r25, r24
    212e:	11 f4       	brne	.+4      	; 0x2134 <xQueueIsQueueFullFromISR+0x24>
    2130:	81 e0       	ldi	r24, 0x01	; 1
    2132:	89 83       	std	Y+1, r24	; 0x01
    2134:	89 81       	ldd	r24, Y+1	; 0x01
    2136:	0f 90       	pop	r0
    2138:	0f 90       	pop	r0
    213a:	0f 90       	pop	r0
    213c:	cf 91       	pop	r28
    213e:	df 91       	pop	r29
    2140:	08 95       	ret

00002142 <vListInitialise>:
    2142:	df 93       	push	r29
    2144:	cf 93       	push	r28
    2146:	0f 92       	push	r0
    2148:	0f 92       	push	r0
    214a:	cd b7       	in	r28, 0x3d	; 61
    214c:	de b7       	in	r29, 0x3e	; 62
    214e:	9a 83       	std	Y+2, r25	; 0x02
    2150:	89 83       	std	Y+1, r24	; 0x01
    2152:	89 81       	ldd	r24, Y+1	; 0x01
    2154:	9a 81       	ldd	r25, Y+2	; 0x02
    2156:	03 96       	adiw	r24, 0x03	; 3
    2158:	e9 81       	ldd	r30, Y+1	; 0x01
    215a:	fa 81       	ldd	r31, Y+2	; 0x02
    215c:	92 83       	std	Z+2, r25	; 0x02
    215e:	81 83       	std	Z+1, r24	; 0x01
    2160:	e9 81       	ldd	r30, Y+1	; 0x01
    2162:	fa 81       	ldd	r31, Y+2	; 0x02
    2164:	8f ef       	ldi	r24, 0xFF	; 255
    2166:	9f ef       	ldi	r25, 0xFF	; 255
    2168:	94 83       	std	Z+4, r25	; 0x04
    216a:	83 83       	std	Z+3, r24	; 0x03
    216c:	89 81       	ldd	r24, Y+1	; 0x01
    216e:	9a 81       	ldd	r25, Y+2	; 0x02
    2170:	03 96       	adiw	r24, 0x03	; 3
    2172:	e9 81       	ldd	r30, Y+1	; 0x01
    2174:	fa 81       	ldd	r31, Y+2	; 0x02
    2176:	96 83       	std	Z+6, r25	; 0x06
    2178:	85 83       	std	Z+5, r24	; 0x05
    217a:	89 81       	ldd	r24, Y+1	; 0x01
    217c:	9a 81       	ldd	r25, Y+2	; 0x02
    217e:	03 96       	adiw	r24, 0x03	; 3
    2180:	e9 81       	ldd	r30, Y+1	; 0x01
    2182:	fa 81       	ldd	r31, Y+2	; 0x02
    2184:	90 87       	std	Z+8, r25	; 0x08
    2186:	87 83       	std	Z+7, r24	; 0x07
    2188:	e9 81       	ldd	r30, Y+1	; 0x01
    218a:	fa 81       	ldd	r31, Y+2	; 0x02
    218c:	10 82       	st	Z, r1
    218e:	0f 90       	pop	r0
    2190:	0f 90       	pop	r0
    2192:	cf 91       	pop	r28
    2194:	df 91       	pop	r29
    2196:	08 95       	ret

00002198 <vListInitialiseItem>:
    2198:	df 93       	push	r29
    219a:	cf 93       	push	r28
    219c:	0f 92       	push	r0
    219e:	0f 92       	push	r0
    21a0:	cd b7       	in	r28, 0x3d	; 61
    21a2:	de b7       	in	r29, 0x3e	; 62
    21a4:	9a 83       	std	Y+2, r25	; 0x02
    21a6:	89 83       	std	Y+1, r24	; 0x01
    21a8:	e9 81       	ldd	r30, Y+1	; 0x01
    21aa:	fa 81       	ldd	r31, Y+2	; 0x02
    21ac:	11 86       	std	Z+9, r1	; 0x09
    21ae:	10 86       	std	Z+8, r1	; 0x08
    21b0:	0f 90       	pop	r0
    21b2:	0f 90       	pop	r0
    21b4:	cf 91       	pop	r28
    21b6:	df 91       	pop	r29
    21b8:	08 95       	ret

000021ba <vListInsertEnd>:
    21ba:	df 93       	push	r29
    21bc:	cf 93       	push	r28
    21be:	00 d0       	rcall	.+0      	; 0x21c0 <vListInsertEnd+0x6>
    21c0:	00 d0       	rcall	.+0      	; 0x21c2 <vListInsertEnd+0x8>
    21c2:	cd b7       	in	r28, 0x3d	; 61
    21c4:	de b7       	in	r29, 0x3e	; 62
    21c6:	9c 83       	std	Y+4, r25	; 0x04
    21c8:	8b 83       	std	Y+3, r24	; 0x03
    21ca:	7e 83       	std	Y+6, r23	; 0x06
    21cc:	6d 83       	std	Y+5, r22	; 0x05
    21ce:	eb 81       	ldd	r30, Y+3	; 0x03
    21d0:	fc 81       	ldd	r31, Y+4	; 0x04
    21d2:	81 81       	ldd	r24, Z+1	; 0x01
    21d4:	92 81       	ldd	r25, Z+2	; 0x02
    21d6:	9a 83       	std	Y+2, r25	; 0x02
    21d8:	89 83       	std	Y+1, r24	; 0x01
    21da:	e9 81       	ldd	r30, Y+1	; 0x01
    21dc:	fa 81       	ldd	r31, Y+2	; 0x02
    21de:	82 81       	ldd	r24, Z+2	; 0x02
    21e0:	93 81       	ldd	r25, Z+3	; 0x03
    21e2:	ed 81       	ldd	r30, Y+5	; 0x05
    21e4:	fe 81       	ldd	r31, Y+6	; 0x06
    21e6:	93 83       	std	Z+3, r25	; 0x03
    21e8:	82 83       	std	Z+2, r24	; 0x02
    21ea:	eb 81       	ldd	r30, Y+3	; 0x03
    21ec:	fc 81       	ldd	r31, Y+4	; 0x04
    21ee:	81 81       	ldd	r24, Z+1	; 0x01
    21f0:	92 81       	ldd	r25, Z+2	; 0x02
    21f2:	ed 81       	ldd	r30, Y+5	; 0x05
    21f4:	fe 81       	ldd	r31, Y+6	; 0x06
    21f6:	95 83       	std	Z+5, r25	; 0x05
    21f8:	84 83       	std	Z+4, r24	; 0x04
    21fa:	e9 81       	ldd	r30, Y+1	; 0x01
    21fc:	fa 81       	ldd	r31, Y+2	; 0x02
    21fe:	02 80       	ldd	r0, Z+2	; 0x02
    2200:	f3 81       	ldd	r31, Z+3	; 0x03
    2202:	e0 2d       	mov	r30, r0
    2204:	8d 81       	ldd	r24, Y+5	; 0x05
    2206:	9e 81       	ldd	r25, Y+6	; 0x06
    2208:	95 83       	std	Z+5, r25	; 0x05
    220a:	84 83       	std	Z+4, r24	; 0x04
    220c:	8d 81       	ldd	r24, Y+5	; 0x05
    220e:	9e 81       	ldd	r25, Y+6	; 0x06
    2210:	e9 81       	ldd	r30, Y+1	; 0x01
    2212:	fa 81       	ldd	r31, Y+2	; 0x02
    2214:	93 83       	std	Z+3, r25	; 0x03
    2216:	82 83       	std	Z+2, r24	; 0x02
    2218:	8d 81       	ldd	r24, Y+5	; 0x05
    221a:	9e 81       	ldd	r25, Y+6	; 0x06
    221c:	eb 81       	ldd	r30, Y+3	; 0x03
    221e:	fc 81       	ldd	r31, Y+4	; 0x04
    2220:	92 83       	std	Z+2, r25	; 0x02
    2222:	81 83       	std	Z+1, r24	; 0x01
    2224:	ed 81       	ldd	r30, Y+5	; 0x05
    2226:	fe 81       	ldd	r31, Y+6	; 0x06
    2228:	8b 81       	ldd	r24, Y+3	; 0x03
    222a:	9c 81       	ldd	r25, Y+4	; 0x04
    222c:	91 87       	std	Z+9, r25	; 0x09
    222e:	80 87       	std	Z+8, r24	; 0x08
    2230:	eb 81       	ldd	r30, Y+3	; 0x03
    2232:	fc 81       	ldd	r31, Y+4	; 0x04
    2234:	80 81       	ld	r24, Z
    2236:	8f 5f       	subi	r24, 0xFF	; 255
    2238:	eb 81       	ldd	r30, Y+3	; 0x03
    223a:	fc 81       	ldd	r31, Y+4	; 0x04
    223c:	80 83       	st	Z, r24
    223e:	26 96       	adiw	r28, 0x06	; 6
    2240:	0f b6       	in	r0, 0x3f	; 63
    2242:	f8 94       	cli
    2244:	de bf       	out	0x3e, r29	; 62
    2246:	0f be       	out	0x3f, r0	; 63
    2248:	cd bf       	out	0x3d, r28	; 61
    224a:	cf 91       	pop	r28
    224c:	df 91       	pop	r29
    224e:	08 95       	ret

00002250 <vListInsert>:
    2250:	df 93       	push	r29
    2252:	cf 93       	push	r28
    2254:	cd b7       	in	r28, 0x3d	; 61
    2256:	de b7       	in	r29, 0x3e	; 62
    2258:	28 97       	sbiw	r28, 0x08	; 8
    225a:	0f b6       	in	r0, 0x3f	; 63
    225c:	f8 94       	cli
    225e:	de bf       	out	0x3e, r29	; 62
    2260:	0f be       	out	0x3f, r0	; 63
    2262:	cd bf       	out	0x3d, r28	; 61
    2264:	9e 83       	std	Y+6, r25	; 0x06
    2266:	8d 83       	std	Y+5, r24	; 0x05
    2268:	78 87       	std	Y+8, r23	; 0x08
    226a:	6f 83       	std	Y+7, r22	; 0x07
    226c:	ef 81       	ldd	r30, Y+7	; 0x07
    226e:	f8 85       	ldd	r31, Y+8	; 0x08
    2270:	80 81       	ld	r24, Z
    2272:	91 81       	ldd	r25, Z+1	; 0x01
    2274:	9a 83       	std	Y+2, r25	; 0x02
    2276:	89 83       	std	Y+1, r24	; 0x01
    2278:	89 81       	ldd	r24, Y+1	; 0x01
    227a:	9a 81       	ldd	r25, Y+2	; 0x02
    227c:	2f ef       	ldi	r18, 0xFF	; 255
    227e:	8f 3f       	cpi	r24, 0xFF	; 255
    2280:	92 07       	cpc	r25, r18
    2282:	39 f4       	brne	.+14     	; 0x2292 <vListInsert+0x42>
    2284:	ed 81       	ldd	r30, Y+5	; 0x05
    2286:	fe 81       	ldd	r31, Y+6	; 0x06
    2288:	87 81       	ldd	r24, Z+7	; 0x07
    228a:	90 85       	ldd	r25, Z+8	; 0x08
    228c:	9c 83       	std	Y+4, r25	; 0x04
    228e:	8b 83       	std	Y+3, r24	; 0x03
    2290:	18 c0       	rjmp	.+48     	; 0x22c2 <vListInsert+0x72>
    2292:	8d 81       	ldd	r24, Y+5	; 0x05
    2294:	9e 81       	ldd	r25, Y+6	; 0x06
    2296:	03 96       	adiw	r24, 0x03	; 3
    2298:	9c 83       	std	Y+4, r25	; 0x04
    229a:	8b 83       	std	Y+3, r24	; 0x03
    229c:	06 c0       	rjmp	.+12     	; 0x22aa <vListInsert+0x5a>
    229e:	eb 81       	ldd	r30, Y+3	; 0x03
    22a0:	fc 81       	ldd	r31, Y+4	; 0x04
    22a2:	82 81       	ldd	r24, Z+2	; 0x02
    22a4:	93 81       	ldd	r25, Z+3	; 0x03
    22a6:	9c 83       	std	Y+4, r25	; 0x04
    22a8:	8b 83       	std	Y+3, r24	; 0x03
    22aa:	eb 81       	ldd	r30, Y+3	; 0x03
    22ac:	fc 81       	ldd	r31, Y+4	; 0x04
    22ae:	02 80       	ldd	r0, Z+2	; 0x02
    22b0:	f3 81       	ldd	r31, Z+3	; 0x03
    22b2:	e0 2d       	mov	r30, r0
    22b4:	20 81       	ld	r18, Z
    22b6:	31 81       	ldd	r19, Z+1	; 0x01
    22b8:	89 81       	ldd	r24, Y+1	; 0x01
    22ba:	9a 81       	ldd	r25, Y+2	; 0x02
    22bc:	82 17       	cp	r24, r18
    22be:	93 07       	cpc	r25, r19
    22c0:	70 f7       	brcc	.-36     	; 0x229e <vListInsert+0x4e>
    22c2:	eb 81       	ldd	r30, Y+3	; 0x03
    22c4:	fc 81       	ldd	r31, Y+4	; 0x04
    22c6:	82 81       	ldd	r24, Z+2	; 0x02
    22c8:	93 81       	ldd	r25, Z+3	; 0x03
    22ca:	ef 81       	ldd	r30, Y+7	; 0x07
    22cc:	f8 85       	ldd	r31, Y+8	; 0x08
    22ce:	93 83       	std	Z+3, r25	; 0x03
    22d0:	82 83       	std	Z+2, r24	; 0x02
    22d2:	ef 81       	ldd	r30, Y+7	; 0x07
    22d4:	f8 85       	ldd	r31, Y+8	; 0x08
    22d6:	02 80       	ldd	r0, Z+2	; 0x02
    22d8:	f3 81       	ldd	r31, Z+3	; 0x03
    22da:	e0 2d       	mov	r30, r0
    22dc:	8f 81       	ldd	r24, Y+7	; 0x07
    22de:	98 85       	ldd	r25, Y+8	; 0x08
    22e0:	95 83       	std	Z+5, r25	; 0x05
    22e2:	84 83       	std	Z+4, r24	; 0x04
    22e4:	ef 81       	ldd	r30, Y+7	; 0x07
    22e6:	f8 85       	ldd	r31, Y+8	; 0x08
    22e8:	8b 81       	ldd	r24, Y+3	; 0x03
    22ea:	9c 81       	ldd	r25, Y+4	; 0x04
    22ec:	95 83       	std	Z+5, r25	; 0x05
    22ee:	84 83       	std	Z+4, r24	; 0x04
    22f0:	8f 81       	ldd	r24, Y+7	; 0x07
    22f2:	98 85       	ldd	r25, Y+8	; 0x08
    22f4:	eb 81       	ldd	r30, Y+3	; 0x03
    22f6:	fc 81       	ldd	r31, Y+4	; 0x04
    22f8:	93 83       	std	Z+3, r25	; 0x03
    22fa:	82 83       	std	Z+2, r24	; 0x02
    22fc:	ef 81       	ldd	r30, Y+7	; 0x07
    22fe:	f8 85       	ldd	r31, Y+8	; 0x08
    2300:	8d 81       	ldd	r24, Y+5	; 0x05
    2302:	9e 81       	ldd	r25, Y+6	; 0x06
    2304:	91 87       	std	Z+9, r25	; 0x09
    2306:	80 87       	std	Z+8, r24	; 0x08
    2308:	ed 81       	ldd	r30, Y+5	; 0x05
    230a:	fe 81       	ldd	r31, Y+6	; 0x06
    230c:	80 81       	ld	r24, Z
    230e:	8f 5f       	subi	r24, 0xFF	; 255
    2310:	ed 81       	ldd	r30, Y+5	; 0x05
    2312:	fe 81       	ldd	r31, Y+6	; 0x06
    2314:	80 83       	st	Z, r24
    2316:	28 96       	adiw	r28, 0x08	; 8
    2318:	0f b6       	in	r0, 0x3f	; 63
    231a:	f8 94       	cli
    231c:	de bf       	out	0x3e, r29	; 62
    231e:	0f be       	out	0x3f, r0	; 63
    2320:	cd bf       	out	0x3d, r28	; 61
    2322:	cf 91       	pop	r28
    2324:	df 91       	pop	r29
    2326:	08 95       	ret

00002328 <uxListRemove>:
    2328:	df 93       	push	r29
    232a:	cf 93       	push	r28
    232c:	00 d0       	rcall	.+0      	; 0x232e <uxListRemove+0x6>
    232e:	0f 92       	push	r0
    2330:	cd b7       	in	r28, 0x3d	; 61
    2332:	de b7       	in	r29, 0x3e	; 62
    2334:	9c 83       	std	Y+4, r25	; 0x04
    2336:	8b 83       	std	Y+3, r24	; 0x03
    2338:	eb 81       	ldd	r30, Y+3	; 0x03
    233a:	fc 81       	ldd	r31, Y+4	; 0x04
    233c:	a2 81       	ldd	r26, Z+2	; 0x02
    233e:	b3 81       	ldd	r27, Z+3	; 0x03
    2340:	eb 81       	ldd	r30, Y+3	; 0x03
    2342:	fc 81       	ldd	r31, Y+4	; 0x04
    2344:	84 81       	ldd	r24, Z+4	; 0x04
    2346:	95 81       	ldd	r25, Z+5	; 0x05
    2348:	15 96       	adiw	r26, 0x05	; 5
    234a:	9c 93       	st	X, r25
    234c:	8e 93       	st	-X, r24
    234e:	14 97       	sbiw	r26, 0x04	; 4
    2350:	eb 81       	ldd	r30, Y+3	; 0x03
    2352:	fc 81       	ldd	r31, Y+4	; 0x04
    2354:	a4 81       	ldd	r26, Z+4	; 0x04
    2356:	b5 81       	ldd	r27, Z+5	; 0x05
    2358:	eb 81       	ldd	r30, Y+3	; 0x03
    235a:	fc 81       	ldd	r31, Y+4	; 0x04
    235c:	82 81       	ldd	r24, Z+2	; 0x02
    235e:	93 81       	ldd	r25, Z+3	; 0x03
    2360:	13 96       	adiw	r26, 0x03	; 3
    2362:	9c 93       	st	X, r25
    2364:	8e 93       	st	-X, r24
    2366:	12 97       	sbiw	r26, 0x02	; 2
    2368:	eb 81       	ldd	r30, Y+3	; 0x03
    236a:	fc 81       	ldd	r31, Y+4	; 0x04
    236c:	80 85       	ldd	r24, Z+8	; 0x08
    236e:	91 85       	ldd	r25, Z+9	; 0x09
    2370:	9a 83       	std	Y+2, r25	; 0x02
    2372:	89 83       	std	Y+1, r24	; 0x01
    2374:	e9 81       	ldd	r30, Y+1	; 0x01
    2376:	fa 81       	ldd	r31, Y+2	; 0x02
    2378:	21 81       	ldd	r18, Z+1	; 0x01
    237a:	32 81       	ldd	r19, Z+2	; 0x02
    237c:	8b 81       	ldd	r24, Y+3	; 0x03
    237e:	9c 81       	ldd	r25, Y+4	; 0x04
    2380:	28 17       	cp	r18, r24
    2382:	39 07       	cpc	r19, r25
    2384:	41 f4       	brne	.+16     	; 0x2396 <uxListRemove+0x6e>
    2386:	eb 81       	ldd	r30, Y+3	; 0x03
    2388:	fc 81       	ldd	r31, Y+4	; 0x04
    238a:	84 81       	ldd	r24, Z+4	; 0x04
    238c:	95 81       	ldd	r25, Z+5	; 0x05
    238e:	e9 81       	ldd	r30, Y+1	; 0x01
    2390:	fa 81       	ldd	r31, Y+2	; 0x02
    2392:	92 83       	std	Z+2, r25	; 0x02
    2394:	81 83       	std	Z+1, r24	; 0x01
    2396:	eb 81       	ldd	r30, Y+3	; 0x03
    2398:	fc 81       	ldd	r31, Y+4	; 0x04
    239a:	11 86       	std	Z+9, r1	; 0x09
    239c:	10 86       	std	Z+8, r1	; 0x08
    239e:	e9 81       	ldd	r30, Y+1	; 0x01
    23a0:	fa 81       	ldd	r31, Y+2	; 0x02
    23a2:	80 81       	ld	r24, Z
    23a4:	81 50       	subi	r24, 0x01	; 1
    23a6:	e9 81       	ldd	r30, Y+1	; 0x01
    23a8:	fa 81       	ldd	r31, Y+2	; 0x02
    23aa:	80 83       	st	Z, r24
    23ac:	e9 81       	ldd	r30, Y+1	; 0x01
    23ae:	fa 81       	ldd	r31, Y+2	; 0x02
    23b0:	80 81       	ld	r24, Z
    23b2:	0f 90       	pop	r0
    23b4:	0f 90       	pop	r0
    23b6:	0f 90       	pop	r0
    23b8:	0f 90       	pop	r0
    23ba:	cf 91       	pop	r28
    23bc:	df 91       	pop	r29
    23be:	08 95       	ret

000023c0 <xCoRoutineCreate>:
    23c0:	df 93       	push	r29
    23c2:	cf 93       	push	r28
    23c4:	cd b7       	in	r28, 0x3d	; 61
    23c6:	de b7       	in	r29, 0x3e	; 62
    23c8:	27 97       	sbiw	r28, 0x07	; 7
    23ca:	0f b6       	in	r0, 0x3f	; 63
    23cc:	f8 94       	cli
    23ce:	de bf       	out	0x3e, r29	; 62
    23d0:	0f be       	out	0x3f, r0	; 63
    23d2:	cd bf       	out	0x3d, r28	; 61
    23d4:	9d 83       	std	Y+5, r25	; 0x05
    23d6:	8c 83       	std	Y+4, r24	; 0x04
    23d8:	6e 83       	std	Y+6, r22	; 0x06
    23da:	4f 83       	std	Y+7, r20	; 0x07
    23dc:	8a e1       	ldi	r24, 0x1A	; 26
    23de:	90 e0       	ldi	r25, 0x00	; 0
    23e0:	0e 94 b9 14 	call	0x2972	; 0x2972 <pvPortMalloc>
    23e4:	9a 83       	std	Y+2, r25	; 0x02
    23e6:	89 83       	std	Y+1, r24	; 0x01
    23e8:	89 81       	ldd	r24, Y+1	; 0x01
    23ea:	9a 81       	ldd	r25, Y+2	; 0x02
    23ec:	00 97       	sbiw	r24, 0x00	; 0
    23ee:	09 f4       	brne	.+2      	; 0x23f2 <xCoRoutineCreate+0x32>
    23f0:	6f c0       	rjmp	.+222    	; 0x24d0 <xCoRoutineCreate+0x110>
    23f2:	80 91 7f 02 	lds	r24, 0x027F
    23f6:	90 91 80 02 	lds	r25, 0x0280
    23fa:	00 97       	sbiw	r24, 0x00	; 0
    23fc:	41 f4       	brne	.+16     	; 0x240e <xCoRoutineCreate+0x4e>
    23fe:	89 81       	ldd	r24, Y+1	; 0x01
    2400:	9a 81       	ldd	r25, Y+2	; 0x02
    2402:	90 93 80 02 	sts	0x0280, r25
    2406:	80 93 7f 02 	sts	0x027F, r24
    240a:	0e 94 48 14 	call	0x2890	; 0x2890 <prvInitialiseCoRoutineLists>
    240e:	8e 81       	ldd	r24, Y+6	; 0x06
    2410:	82 30       	cpi	r24, 0x02	; 2
    2412:	10 f0       	brcs	.+4      	; 0x2418 <xCoRoutineCreate+0x58>
    2414:	81 e0       	ldi	r24, 0x01	; 1
    2416:	8e 83       	std	Y+6, r24	; 0x06
    2418:	e9 81       	ldd	r30, Y+1	; 0x01
    241a:	fa 81       	ldd	r31, Y+2	; 0x02
    241c:	11 8e       	std	Z+25, r1	; 0x19
    241e:	10 8e       	std	Z+24, r1	; 0x18
    2420:	e9 81       	ldd	r30, Y+1	; 0x01
    2422:	fa 81       	ldd	r31, Y+2	; 0x02
    2424:	8e 81       	ldd	r24, Y+6	; 0x06
    2426:	86 8b       	std	Z+22, r24	; 0x16
    2428:	e9 81       	ldd	r30, Y+1	; 0x01
    242a:	fa 81       	ldd	r31, Y+2	; 0x02
    242c:	8f 81       	ldd	r24, Y+7	; 0x07
    242e:	87 8b       	std	Z+23, r24	; 0x17
    2430:	e9 81       	ldd	r30, Y+1	; 0x01
    2432:	fa 81       	ldd	r31, Y+2	; 0x02
    2434:	8c 81       	ldd	r24, Y+4	; 0x04
    2436:	9d 81       	ldd	r25, Y+5	; 0x05
    2438:	91 83       	std	Z+1, r25	; 0x01
    243a:	80 83       	st	Z, r24
    243c:	89 81       	ldd	r24, Y+1	; 0x01
    243e:	9a 81       	ldd	r25, Y+2	; 0x02
    2440:	02 96       	adiw	r24, 0x02	; 2
    2442:	0e 94 cc 10 	call	0x2198	; 0x2198 <vListInitialiseItem>
    2446:	89 81       	ldd	r24, Y+1	; 0x01
    2448:	9a 81       	ldd	r25, Y+2	; 0x02
    244a:	0c 96       	adiw	r24, 0x0c	; 12
    244c:	0e 94 cc 10 	call	0x2198	; 0x2198 <vListInitialiseItem>
    2450:	e9 81       	ldd	r30, Y+1	; 0x01
    2452:	fa 81       	ldd	r31, Y+2	; 0x02
    2454:	89 81       	ldd	r24, Y+1	; 0x01
    2456:	9a 81       	ldd	r25, Y+2	; 0x02
    2458:	91 87       	std	Z+9, r25	; 0x09
    245a:	80 87       	std	Z+8, r24	; 0x08
    245c:	e9 81       	ldd	r30, Y+1	; 0x01
    245e:	fa 81       	ldd	r31, Y+2	; 0x02
    2460:	89 81       	ldd	r24, Y+1	; 0x01
    2462:	9a 81       	ldd	r25, Y+2	; 0x02
    2464:	93 8b       	std	Z+19, r25	; 0x13
    2466:	82 8b       	std	Z+18, r24	; 0x12
    2468:	8e 81       	ldd	r24, Y+6	; 0x06
    246a:	28 2f       	mov	r18, r24
    246c:	30 e0       	ldi	r19, 0x00	; 0
    246e:	84 e0       	ldi	r24, 0x04	; 4
    2470:	90 e0       	ldi	r25, 0x00	; 0
    2472:	82 1b       	sub	r24, r18
    2474:	93 0b       	sbc	r25, r19
    2476:	e9 81       	ldd	r30, Y+1	; 0x01
    2478:	fa 81       	ldd	r31, Y+2	; 0x02
    247a:	95 87       	std	Z+13, r25	; 0x0d
    247c:	84 87       	std	Z+12, r24	; 0x0c
    247e:	e9 81       	ldd	r30, Y+1	; 0x01
    2480:	fa 81       	ldd	r31, Y+2	; 0x02
    2482:	96 89       	ldd	r25, Z+22	; 0x16
    2484:	80 91 81 02 	lds	r24, 0x0281
    2488:	89 17       	cp	r24, r25
    248a:	28 f4       	brcc	.+10     	; 0x2496 <xCoRoutineCreate+0xd6>
    248c:	e9 81       	ldd	r30, Y+1	; 0x01
    248e:	fa 81       	ldd	r31, Y+2	; 0x02
    2490:	86 89       	ldd	r24, Z+22	; 0x16
    2492:	80 93 81 02 	sts	0x0281, r24
    2496:	e9 81       	ldd	r30, Y+1	; 0x01
    2498:	fa 81       	ldd	r31, Y+2	; 0x02
    249a:	86 89       	ldd	r24, Z+22	; 0x16
    249c:	28 2f       	mov	r18, r24
    249e:	30 e0       	ldi	r19, 0x00	; 0
    24a0:	c9 01       	movw	r24, r18
    24a2:	88 0f       	add	r24, r24
    24a4:	99 1f       	adc	r25, r25
    24a6:	88 0f       	add	r24, r24
    24a8:	99 1f       	adc	r25, r25
    24aa:	88 0f       	add	r24, r24
    24ac:	99 1f       	adc	r25, r25
    24ae:	82 0f       	add	r24, r18
    24b0:	93 1f       	adc	r25, r19
    24b2:	ac 01       	movw	r20, r24
    24b4:	48 57       	subi	r20, 0x78	; 120
    24b6:	5d 4f       	sbci	r21, 0xFD	; 253
    24b8:	89 81       	ldd	r24, Y+1	; 0x01
    24ba:	9a 81       	ldd	r25, Y+2	; 0x02
    24bc:	9c 01       	movw	r18, r24
    24be:	2e 5f       	subi	r18, 0xFE	; 254
    24c0:	3f 4f       	sbci	r19, 0xFF	; 255
    24c2:	ca 01       	movw	r24, r20
    24c4:	b9 01       	movw	r22, r18
    24c6:	0e 94 dd 10 	call	0x21ba	; 0x21ba <vListInsertEnd>
    24ca:	81 e0       	ldi	r24, 0x01	; 1
    24cc:	8b 83       	std	Y+3, r24	; 0x03
    24ce:	02 c0       	rjmp	.+4      	; 0x24d4 <xCoRoutineCreate+0x114>
    24d0:	8f ef       	ldi	r24, 0xFF	; 255
    24d2:	8b 83       	std	Y+3, r24	; 0x03
    24d4:	8b 81       	ldd	r24, Y+3	; 0x03
    24d6:	27 96       	adiw	r28, 0x07	; 7
    24d8:	0f b6       	in	r0, 0x3f	; 63
    24da:	f8 94       	cli
    24dc:	de bf       	out	0x3e, r29	; 62
    24de:	0f be       	out	0x3f, r0	; 63
    24e0:	cd bf       	out	0x3d, r28	; 61
    24e2:	cf 91       	pop	r28
    24e4:	df 91       	pop	r29
    24e6:	08 95       	ret

000024e8 <vCoRoutineAddToDelayedList>:
    24e8:	df 93       	push	r29
    24ea:	cf 93       	push	r28
    24ec:	00 d0       	rcall	.+0      	; 0x24ee <vCoRoutineAddToDelayedList+0x6>
    24ee:	00 d0       	rcall	.+0      	; 0x24f0 <vCoRoutineAddToDelayedList+0x8>
    24f0:	cd b7       	in	r28, 0x3d	; 61
    24f2:	de b7       	in	r29, 0x3e	; 62
    24f4:	9c 83       	std	Y+4, r25	; 0x04
    24f6:	8b 83       	std	Y+3, r24	; 0x03
    24f8:	7e 83       	std	Y+6, r23	; 0x06
    24fa:	6d 83       	std	Y+5, r22	; 0x05
    24fc:	20 91 82 02 	lds	r18, 0x0282
    2500:	30 91 83 02 	lds	r19, 0x0283
    2504:	8b 81       	ldd	r24, Y+3	; 0x03
    2506:	9c 81       	ldd	r25, Y+4	; 0x04
    2508:	82 0f       	add	r24, r18
    250a:	93 1f       	adc	r25, r19
    250c:	9a 83       	std	Y+2, r25	; 0x02
    250e:	89 83       	std	Y+1, r24	; 0x01
    2510:	80 91 7f 02 	lds	r24, 0x027F
    2514:	90 91 80 02 	lds	r25, 0x0280
    2518:	02 96       	adiw	r24, 0x02	; 2
    251a:	0e 94 94 11 	call	0x2328	; 0x2328 <uxListRemove>
    251e:	e0 91 7f 02 	lds	r30, 0x027F
    2522:	f0 91 80 02 	lds	r31, 0x0280
    2526:	89 81       	ldd	r24, Y+1	; 0x01
    2528:	9a 81       	ldd	r25, Y+2	; 0x02
    252a:	93 83       	std	Z+3, r25	; 0x03
    252c:	82 83       	std	Z+2, r24	; 0x02
    252e:	20 91 82 02 	lds	r18, 0x0282
    2532:	30 91 83 02 	lds	r19, 0x0283
    2536:	89 81       	ldd	r24, Y+1	; 0x01
    2538:	9a 81       	ldd	r25, Y+2	; 0x02
    253a:	82 17       	cp	r24, r18
    253c:	93 07       	cpc	r25, r19
    253e:	70 f4       	brcc	.+28     	; 0x255c <vCoRoutineAddToDelayedList+0x74>
    2540:	80 91 ae 02 	lds	r24, 0x02AE
    2544:	90 91 af 02 	lds	r25, 0x02AF
    2548:	20 91 7f 02 	lds	r18, 0x027F
    254c:	30 91 80 02 	lds	r19, 0x0280
    2550:	2e 5f       	subi	r18, 0xFE	; 254
    2552:	3f 4f       	sbci	r19, 0xFF	; 255
    2554:	b9 01       	movw	r22, r18
    2556:	0e 94 28 11 	call	0x2250	; 0x2250 <vListInsert>
    255a:	0d c0       	rjmp	.+26     	; 0x2576 <vCoRoutineAddToDelayedList+0x8e>
    255c:	80 91 ac 02 	lds	r24, 0x02AC
    2560:	90 91 ad 02 	lds	r25, 0x02AD
    2564:	20 91 7f 02 	lds	r18, 0x027F
    2568:	30 91 80 02 	lds	r19, 0x0280
    256c:	2e 5f       	subi	r18, 0xFE	; 254
    256e:	3f 4f       	sbci	r19, 0xFF	; 255
    2570:	b9 01       	movw	r22, r18
    2572:	0e 94 28 11 	call	0x2250	; 0x2250 <vListInsert>
    2576:	8d 81       	ldd	r24, Y+5	; 0x05
    2578:	9e 81       	ldd	r25, Y+6	; 0x06
    257a:	00 97       	sbiw	r24, 0x00	; 0
    257c:	61 f0       	breq	.+24     	; 0x2596 <vCoRoutineAddToDelayedList+0xae>
    257e:	80 91 7f 02 	lds	r24, 0x027F
    2582:	90 91 80 02 	lds	r25, 0x0280
    2586:	9c 01       	movw	r18, r24
    2588:	24 5f       	subi	r18, 0xF4	; 244
    258a:	3f 4f       	sbci	r19, 0xFF	; 255
    258c:	8d 81       	ldd	r24, Y+5	; 0x05
    258e:	9e 81       	ldd	r25, Y+6	; 0x06
    2590:	b9 01       	movw	r22, r18
    2592:	0e 94 28 11 	call	0x2250	; 0x2250 <vListInsert>
    2596:	26 96       	adiw	r28, 0x06	; 6
    2598:	0f b6       	in	r0, 0x3f	; 63
    259a:	f8 94       	cli
    259c:	de bf       	out	0x3e, r29	; 62
    259e:	0f be       	out	0x3f, r0	; 63
    25a0:	cd bf       	out	0x3d, r28	; 61
    25a2:	cf 91       	pop	r28
    25a4:	df 91       	pop	r29
    25a6:	08 95       	ret

000025a8 <prvCheckPendingReadyList>:
    25a8:	df 93       	push	r29
    25aa:	cf 93       	push	r28
    25ac:	0f 92       	push	r0
    25ae:	0f 92       	push	r0
    25b0:	cd b7       	in	r28, 0x3d	; 61
    25b2:	de b7       	in	r29, 0x3e	; 62
    25b4:	3a c0       	rjmp	.+116    	; 0x262a <prvCheckPendingReadyList+0x82>
    25b6:	f8 94       	cli
    25b8:	e0 91 b5 02 	lds	r30, 0x02B5
    25bc:	f0 91 b6 02 	lds	r31, 0x02B6
    25c0:	86 81       	ldd	r24, Z+6	; 0x06
    25c2:	97 81       	ldd	r25, Z+7	; 0x07
    25c4:	9a 83       	std	Y+2, r25	; 0x02
    25c6:	89 83       	std	Y+1, r24	; 0x01
    25c8:	89 81       	ldd	r24, Y+1	; 0x01
    25ca:	9a 81       	ldd	r25, Y+2	; 0x02
    25cc:	0c 96       	adiw	r24, 0x0c	; 12
    25ce:	0e 94 94 11 	call	0x2328	; 0x2328 <uxListRemove>
    25d2:	78 94       	sei
    25d4:	89 81       	ldd	r24, Y+1	; 0x01
    25d6:	9a 81       	ldd	r25, Y+2	; 0x02
    25d8:	02 96       	adiw	r24, 0x02	; 2
    25da:	0e 94 94 11 	call	0x2328	; 0x2328 <uxListRemove>
    25de:	e9 81       	ldd	r30, Y+1	; 0x01
    25e0:	fa 81       	ldd	r31, Y+2	; 0x02
    25e2:	96 89       	ldd	r25, Z+22	; 0x16
    25e4:	80 91 81 02 	lds	r24, 0x0281
    25e8:	89 17       	cp	r24, r25
    25ea:	28 f4       	brcc	.+10     	; 0x25f6 <prvCheckPendingReadyList+0x4e>
    25ec:	e9 81       	ldd	r30, Y+1	; 0x01
    25ee:	fa 81       	ldd	r31, Y+2	; 0x02
    25f0:	86 89       	ldd	r24, Z+22	; 0x16
    25f2:	80 93 81 02 	sts	0x0281, r24
    25f6:	e9 81       	ldd	r30, Y+1	; 0x01
    25f8:	fa 81       	ldd	r31, Y+2	; 0x02
    25fa:	86 89       	ldd	r24, Z+22	; 0x16
    25fc:	28 2f       	mov	r18, r24
    25fe:	30 e0       	ldi	r19, 0x00	; 0
    2600:	c9 01       	movw	r24, r18
    2602:	88 0f       	add	r24, r24
    2604:	99 1f       	adc	r25, r25
    2606:	88 0f       	add	r24, r24
    2608:	99 1f       	adc	r25, r25
    260a:	88 0f       	add	r24, r24
    260c:	99 1f       	adc	r25, r25
    260e:	82 0f       	add	r24, r18
    2610:	93 1f       	adc	r25, r19
    2612:	ac 01       	movw	r20, r24
    2614:	48 57       	subi	r20, 0x78	; 120
    2616:	5d 4f       	sbci	r21, 0xFD	; 253
    2618:	89 81       	ldd	r24, Y+1	; 0x01
    261a:	9a 81       	ldd	r25, Y+2	; 0x02
    261c:	9c 01       	movw	r18, r24
    261e:	2e 5f       	subi	r18, 0xFE	; 254
    2620:	3f 4f       	sbci	r19, 0xFF	; 255
    2622:	ca 01       	movw	r24, r20
    2624:	b9 01       	movw	r22, r18
    2626:	0e 94 dd 10 	call	0x21ba	; 0x21ba <vListInsertEnd>
    262a:	80 91 b0 02 	lds	r24, 0x02B0
    262e:	88 23       	and	r24, r24
    2630:	09 f0       	breq	.+2      	; 0x2634 <prvCheckPendingReadyList+0x8c>
    2632:	c1 cf       	rjmp	.-126    	; 0x25b6 <prvCheckPendingReadyList+0xe>
    2634:	0f 90       	pop	r0
    2636:	0f 90       	pop	r0
    2638:	cf 91       	pop	r28
    263a:	df 91       	pop	r29
    263c:	08 95       	ret

0000263e <prvCheckDelayedList>:
    263e:	df 93       	push	r29
    2640:	cf 93       	push	r28
    2642:	00 d0       	rcall	.+0      	; 0x2644 <prvCheckDelayedList+0x6>
    2644:	0f 92       	push	r0
    2646:	cd b7       	in	r28, 0x3d	; 61
    2648:	de b7       	in	r29, 0x3e	; 62
    264a:	0e 94 10 06 	call	0xc20	; 0xc20 <xTaskGetTickCount>
    264e:	20 91 84 02 	lds	r18, 0x0284
    2652:	30 91 85 02 	lds	r19, 0x0285
    2656:	82 1b       	sub	r24, r18
    2658:	93 0b       	sbc	r25, r19
    265a:	90 93 87 02 	sts	0x0287, r25
    265e:	80 93 86 02 	sts	0x0286, r24
    2662:	85 c0       	rjmp	.+266    	; 0x276e <prvCheckDelayedList+0x130>
    2664:	80 91 82 02 	lds	r24, 0x0282
    2668:	90 91 83 02 	lds	r25, 0x0283
    266c:	01 96       	adiw	r24, 0x01	; 1
    266e:	90 93 83 02 	sts	0x0283, r25
    2672:	80 93 82 02 	sts	0x0282, r24
    2676:	80 91 86 02 	lds	r24, 0x0286
    267a:	90 91 87 02 	lds	r25, 0x0287
    267e:	01 97       	sbiw	r24, 0x01	; 1
    2680:	90 93 87 02 	sts	0x0287, r25
    2684:	80 93 86 02 	sts	0x0286, r24
    2688:	80 91 82 02 	lds	r24, 0x0282
    268c:	90 91 83 02 	lds	r25, 0x0283
    2690:	00 97       	sbiw	r24, 0x00	; 0
    2692:	09 f0       	breq	.+2      	; 0x2696 <prvCheckDelayedList+0x58>
    2694:	64 c0       	rjmp	.+200    	; 0x275e <prvCheckDelayedList+0x120>
    2696:	80 91 ac 02 	lds	r24, 0x02AC
    269a:	90 91 ad 02 	lds	r25, 0x02AD
    269e:	9a 83       	std	Y+2, r25	; 0x02
    26a0:	89 83       	std	Y+1, r24	; 0x01
    26a2:	80 91 ae 02 	lds	r24, 0x02AE
    26a6:	90 91 af 02 	lds	r25, 0x02AF
    26aa:	90 93 ad 02 	sts	0x02AD, r25
    26ae:	80 93 ac 02 	sts	0x02AC, r24
    26b2:	89 81       	ldd	r24, Y+1	; 0x01
    26b4:	9a 81       	ldd	r25, Y+2	; 0x02
    26b6:	90 93 af 02 	sts	0x02AF, r25
    26ba:	80 93 ae 02 	sts	0x02AE, r24
    26be:	4f c0       	rjmp	.+158    	; 0x275e <prvCheckDelayedList+0x120>
    26c0:	e0 91 ac 02 	lds	r30, 0x02AC
    26c4:	f0 91 ad 02 	lds	r31, 0x02AD
    26c8:	05 80       	ldd	r0, Z+5	; 0x05
    26ca:	f6 81       	ldd	r31, Z+6	; 0x06
    26cc:	e0 2d       	mov	r30, r0
    26ce:	86 81       	ldd	r24, Z+6	; 0x06
    26d0:	97 81       	ldd	r25, Z+7	; 0x07
    26d2:	9c 83       	std	Y+4, r25	; 0x04
    26d4:	8b 83       	std	Y+3, r24	; 0x03
    26d6:	eb 81       	ldd	r30, Y+3	; 0x03
    26d8:	fc 81       	ldd	r31, Y+4	; 0x04
    26da:	22 81       	ldd	r18, Z+2	; 0x02
    26dc:	33 81       	ldd	r19, Z+3	; 0x03
    26de:	80 91 82 02 	lds	r24, 0x0282
    26e2:	90 91 83 02 	lds	r25, 0x0283
    26e6:	82 17       	cp	r24, r18
    26e8:	93 07       	cpc	r25, r19
    26ea:	08 f4       	brcc	.+2      	; 0x26ee <prvCheckDelayedList+0xb0>
    26ec:	40 c0       	rjmp	.+128    	; 0x276e <prvCheckDelayedList+0x130>
    26ee:	f8 94       	cli
    26f0:	8b 81       	ldd	r24, Y+3	; 0x03
    26f2:	9c 81       	ldd	r25, Y+4	; 0x04
    26f4:	02 96       	adiw	r24, 0x02	; 2
    26f6:	0e 94 94 11 	call	0x2328	; 0x2328 <uxListRemove>
    26fa:	eb 81       	ldd	r30, Y+3	; 0x03
    26fc:	fc 81       	ldd	r31, Y+4	; 0x04
    26fe:	84 89       	ldd	r24, Z+20	; 0x14
    2700:	95 89       	ldd	r25, Z+21	; 0x15
    2702:	00 97       	sbiw	r24, 0x00	; 0
    2704:	29 f0       	breq	.+10     	; 0x2710 <prvCheckDelayedList+0xd2>
    2706:	8b 81       	ldd	r24, Y+3	; 0x03
    2708:	9c 81       	ldd	r25, Y+4	; 0x04
    270a:	0c 96       	adiw	r24, 0x0c	; 12
    270c:	0e 94 94 11 	call	0x2328	; 0x2328 <uxListRemove>
    2710:	78 94       	sei
    2712:	eb 81       	ldd	r30, Y+3	; 0x03
    2714:	fc 81       	ldd	r31, Y+4	; 0x04
    2716:	96 89       	ldd	r25, Z+22	; 0x16
    2718:	80 91 81 02 	lds	r24, 0x0281
    271c:	89 17       	cp	r24, r25
    271e:	28 f4       	brcc	.+10     	; 0x272a <prvCheckDelayedList+0xec>
    2720:	eb 81       	ldd	r30, Y+3	; 0x03
    2722:	fc 81       	ldd	r31, Y+4	; 0x04
    2724:	86 89       	ldd	r24, Z+22	; 0x16
    2726:	80 93 81 02 	sts	0x0281, r24
    272a:	eb 81       	ldd	r30, Y+3	; 0x03
    272c:	fc 81       	ldd	r31, Y+4	; 0x04
    272e:	86 89       	ldd	r24, Z+22	; 0x16
    2730:	28 2f       	mov	r18, r24
    2732:	30 e0       	ldi	r19, 0x00	; 0
    2734:	c9 01       	movw	r24, r18
    2736:	88 0f       	add	r24, r24
    2738:	99 1f       	adc	r25, r25
    273a:	88 0f       	add	r24, r24
    273c:	99 1f       	adc	r25, r25
    273e:	88 0f       	add	r24, r24
    2740:	99 1f       	adc	r25, r25
    2742:	82 0f       	add	r24, r18
    2744:	93 1f       	adc	r25, r19
    2746:	ac 01       	movw	r20, r24
    2748:	48 57       	subi	r20, 0x78	; 120
    274a:	5d 4f       	sbci	r21, 0xFD	; 253
    274c:	8b 81       	ldd	r24, Y+3	; 0x03
    274e:	9c 81       	ldd	r25, Y+4	; 0x04
    2750:	9c 01       	movw	r18, r24
    2752:	2e 5f       	subi	r18, 0xFE	; 254
    2754:	3f 4f       	sbci	r19, 0xFF	; 255
    2756:	ca 01       	movw	r24, r20
    2758:	b9 01       	movw	r22, r18
    275a:	0e 94 dd 10 	call	0x21ba	; 0x21ba <vListInsertEnd>
    275e:	e0 91 ac 02 	lds	r30, 0x02AC
    2762:	f0 91 ad 02 	lds	r31, 0x02AD
    2766:	80 81       	ld	r24, Z
    2768:	88 23       	and	r24, r24
    276a:	09 f0       	breq	.+2      	; 0x276e <prvCheckDelayedList+0x130>
    276c:	a9 cf       	rjmp	.-174    	; 0x26c0 <prvCheckDelayedList+0x82>
    276e:	80 91 86 02 	lds	r24, 0x0286
    2772:	90 91 87 02 	lds	r25, 0x0287
    2776:	00 97       	sbiw	r24, 0x00	; 0
    2778:	09 f0       	breq	.+2      	; 0x277c <prvCheckDelayedList+0x13e>
    277a:	74 cf       	rjmp	.-280    	; 0x2664 <prvCheckDelayedList+0x26>
    277c:	80 91 82 02 	lds	r24, 0x0282
    2780:	90 91 83 02 	lds	r25, 0x0283
    2784:	90 93 85 02 	sts	0x0285, r25
    2788:	80 93 84 02 	sts	0x0284, r24
    278c:	0f 90       	pop	r0
    278e:	0f 90       	pop	r0
    2790:	0f 90       	pop	r0
    2792:	0f 90       	pop	r0
    2794:	cf 91       	pop	r28
    2796:	df 91       	pop	r29
    2798:	08 95       	ret

0000279a <vCoRoutineSchedule>:
    279a:	df 93       	push	r29
    279c:	cf 93       	push	r28
    279e:	0f 92       	push	r0
    27a0:	0f 92       	push	r0
    27a2:	cd b7       	in	r28, 0x3d	; 61
    27a4:	de b7       	in	r29, 0x3e	; 62
    27a6:	0e 94 d4 12 	call	0x25a8	; 0x25a8 <prvCheckPendingReadyList>
    27aa:	0e 94 1f 13 	call	0x263e	; 0x263e <prvCheckDelayedList>
    27ae:	0a c0       	rjmp	.+20     	; 0x27c4 <vCoRoutineSchedule+0x2a>
    27b0:	80 91 81 02 	lds	r24, 0x0281
    27b4:	88 23       	and	r24, r24
    27b6:	09 f4       	brne	.+2      	; 0x27ba <vCoRoutineSchedule+0x20>
    27b8:	66 c0       	rjmp	.+204    	; 0x2886 <vCoRoutineSchedule+0xec>
    27ba:	80 91 81 02 	lds	r24, 0x0281
    27be:	81 50       	subi	r24, 0x01	; 1
    27c0:	80 93 81 02 	sts	0x0281, r24
    27c4:	80 91 81 02 	lds	r24, 0x0281
    27c8:	28 2f       	mov	r18, r24
    27ca:	30 e0       	ldi	r19, 0x00	; 0
    27cc:	c9 01       	movw	r24, r18
    27ce:	88 0f       	add	r24, r24
    27d0:	99 1f       	adc	r25, r25
    27d2:	88 0f       	add	r24, r24
    27d4:	99 1f       	adc	r25, r25
    27d6:	88 0f       	add	r24, r24
    27d8:	99 1f       	adc	r25, r25
    27da:	82 0f       	add	r24, r18
    27dc:	93 1f       	adc	r25, r19
    27de:	fc 01       	movw	r30, r24
    27e0:	e8 57       	subi	r30, 0x78	; 120
    27e2:	fd 4f       	sbci	r31, 0xFD	; 253
    27e4:	80 81       	ld	r24, Z
    27e6:	88 23       	and	r24, r24
    27e8:	19 f3       	breq	.-58     	; 0x27b0 <vCoRoutineSchedule+0x16>
    27ea:	80 91 81 02 	lds	r24, 0x0281
    27ee:	28 2f       	mov	r18, r24
    27f0:	30 e0       	ldi	r19, 0x00	; 0
    27f2:	c9 01       	movw	r24, r18
    27f4:	88 0f       	add	r24, r24
    27f6:	99 1f       	adc	r25, r25
    27f8:	88 0f       	add	r24, r24
    27fa:	99 1f       	adc	r25, r25
    27fc:	88 0f       	add	r24, r24
    27fe:	99 1f       	adc	r25, r25
    2800:	82 0f       	add	r24, r18
    2802:	93 1f       	adc	r25, r19
    2804:	88 57       	subi	r24, 0x78	; 120
    2806:	9d 4f       	sbci	r25, 0xFD	; 253
    2808:	9a 83       	std	Y+2, r25	; 0x02
    280a:	89 83       	std	Y+1, r24	; 0x01
    280c:	e9 81       	ldd	r30, Y+1	; 0x01
    280e:	fa 81       	ldd	r31, Y+2	; 0x02
    2810:	01 80       	ldd	r0, Z+1	; 0x01
    2812:	f2 81       	ldd	r31, Z+2	; 0x02
    2814:	e0 2d       	mov	r30, r0
    2816:	82 81       	ldd	r24, Z+2	; 0x02
    2818:	93 81       	ldd	r25, Z+3	; 0x03
    281a:	e9 81       	ldd	r30, Y+1	; 0x01
    281c:	fa 81       	ldd	r31, Y+2	; 0x02
    281e:	92 83       	std	Z+2, r25	; 0x02
    2820:	81 83       	std	Z+1, r24	; 0x01
    2822:	e9 81       	ldd	r30, Y+1	; 0x01
    2824:	fa 81       	ldd	r31, Y+2	; 0x02
    2826:	21 81       	ldd	r18, Z+1	; 0x01
    2828:	32 81       	ldd	r19, Z+2	; 0x02
    282a:	89 81       	ldd	r24, Y+1	; 0x01
    282c:	9a 81       	ldd	r25, Y+2	; 0x02
    282e:	03 96       	adiw	r24, 0x03	; 3
    2830:	28 17       	cp	r18, r24
    2832:	39 07       	cpc	r19, r25
    2834:	59 f4       	brne	.+22     	; 0x284c <vCoRoutineSchedule+0xb2>
    2836:	e9 81       	ldd	r30, Y+1	; 0x01
    2838:	fa 81       	ldd	r31, Y+2	; 0x02
    283a:	01 80       	ldd	r0, Z+1	; 0x01
    283c:	f2 81       	ldd	r31, Z+2	; 0x02
    283e:	e0 2d       	mov	r30, r0
    2840:	82 81       	ldd	r24, Z+2	; 0x02
    2842:	93 81       	ldd	r25, Z+3	; 0x03
    2844:	e9 81       	ldd	r30, Y+1	; 0x01
    2846:	fa 81       	ldd	r31, Y+2	; 0x02
    2848:	92 83       	std	Z+2, r25	; 0x02
    284a:	81 83       	std	Z+1, r24	; 0x01
    284c:	e9 81       	ldd	r30, Y+1	; 0x01
    284e:	fa 81       	ldd	r31, Y+2	; 0x02
    2850:	01 80       	ldd	r0, Z+1	; 0x01
    2852:	f2 81       	ldd	r31, Z+2	; 0x02
    2854:	e0 2d       	mov	r30, r0
    2856:	86 81       	ldd	r24, Z+6	; 0x06
    2858:	97 81       	ldd	r25, Z+7	; 0x07
    285a:	90 93 80 02 	sts	0x0280, r25
    285e:	80 93 7f 02 	sts	0x027F, r24
    2862:	e0 91 7f 02 	lds	r30, 0x027F
    2866:	f0 91 80 02 	lds	r31, 0x0280
    286a:	40 81       	ld	r20, Z
    286c:	51 81       	ldd	r21, Z+1	; 0x01
    286e:	80 91 7f 02 	lds	r24, 0x027F
    2872:	90 91 80 02 	lds	r25, 0x0280
    2876:	e0 91 7f 02 	lds	r30, 0x027F
    287a:	f0 91 80 02 	lds	r31, 0x0280
    287e:	27 89       	ldd	r18, Z+23	; 0x17
    2880:	62 2f       	mov	r22, r18
    2882:	fa 01       	movw	r30, r20
    2884:	19 95       	eicall
    2886:	0f 90       	pop	r0
    2888:	0f 90       	pop	r0
    288a:	cf 91       	pop	r28
    288c:	df 91       	pop	r29
    288e:	08 95       	ret

00002890 <prvInitialiseCoRoutineLists>:
    2890:	df 93       	push	r29
    2892:	cf 93       	push	r28
    2894:	0f 92       	push	r0
    2896:	cd b7       	in	r28, 0x3d	; 61
    2898:	de b7       	in	r29, 0x3e	; 62
    289a:	19 82       	std	Y+1, r1	; 0x01
    289c:	13 c0       	rjmp	.+38     	; 0x28c4 <prvInitialiseCoRoutineLists+0x34>
    289e:	89 81       	ldd	r24, Y+1	; 0x01
    28a0:	28 2f       	mov	r18, r24
    28a2:	30 e0       	ldi	r19, 0x00	; 0
    28a4:	c9 01       	movw	r24, r18
    28a6:	88 0f       	add	r24, r24
    28a8:	99 1f       	adc	r25, r25
    28aa:	88 0f       	add	r24, r24
    28ac:	99 1f       	adc	r25, r25
    28ae:	88 0f       	add	r24, r24
    28b0:	99 1f       	adc	r25, r25
    28b2:	82 0f       	add	r24, r18
    28b4:	93 1f       	adc	r25, r19
    28b6:	88 57       	subi	r24, 0x78	; 120
    28b8:	9d 4f       	sbci	r25, 0xFD	; 253
    28ba:	0e 94 a1 10 	call	0x2142	; 0x2142 <vListInitialise>
    28be:	89 81       	ldd	r24, Y+1	; 0x01
    28c0:	8f 5f       	subi	r24, 0xFF	; 255
    28c2:	89 83       	std	Y+1, r24	; 0x01
    28c4:	89 81       	ldd	r24, Y+1	; 0x01
    28c6:	82 30       	cpi	r24, 0x02	; 2
    28c8:	50 f3       	brcs	.-44     	; 0x289e <prvInitialiseCoRoutineLists+0xe>
    28ca:	8a e9       	ldi	r24, 0x9A	; 154
    28cc:	92 e0       	ldi	r25, 0x02	; 2
    28ce:	0e 94 a1 10 	call	0x2142	; 0x2142 <vListInitialise>
    28d2:	83 ea       	ldi	r24, 0xA3	; 163
    28d4:	92 e0       	ldi	r25, 0x02	; 2
    28d6:	0e 94 a1 10 	call	0x2142	; 0x2142 <vListInitialise>
    28da:	80 eb       	ldi	r24, 0xB0	; 176
    28dc:	92 e0       	ldi	r25, 0x02	; 2
    28de:	0e 94 a1 10 	call	0x2142	; 0x2142 <vListInitialise>
    28e2:	8a e9       	ldi	r24, 0x9A	; 154
    28e4:	92 e0       	ldi	r25, 0x02	; 2
    28e6:	90 93 ad 02 	sts	0x02AD, r25
    28ea:	80 93 ac 02 	sts	0x02AC, r24
    28ee:	83 ea       	ldi	r24, 0xA3	; 163
    28f0:	92 e0       	ldi	r25, 0x02	; 2
    28f2:	90 93 af 02 	sts	0x02AF, r25
    28f6:	80 93 ae 02 	sts	0x02AE, r24
    28fa:	0f 90       	pop	r0
    28fc:	cf 91       	pop	r28
    28fe:	df 91       	pop	r29
    2900:	08 95       	ret

00002902 <xCoRoutineRemoveFromEventList>:
    2902:	df 93       	push	r29
    2904:	cf 93       	push	r28
    2906:	00 d0       	rcall	.+0      	; 0x2908 <xCoRoutineRemoveFromEventList+0x6>
    2908:	0f 92       	push	r0
    290a:	0f 92       	push	r0
    290c:	cd b7       	in	r28, 0x3d	; 61
    290e:	de b7       	in	r29, 0x3e	; 62
    2910:	9d 83       	std	Y+5, r25	; 0x05
    2912:	8c 83       	std	Y+4, r24	; 0x04
    2914:	ec 81       	ldd	r30, Y+4	; 0x04
    2916:	fd 81       	ldd	r31, Y+5	; 0x05
    2918:	05 80       	ldd	r0, Z+5	; 0x05
    291a:	f6 81       	ldd	r31, Z+6	; 0x06
    291c:	e0 2d       	mov	r30, r0
    291e:	86 81       	ldd	r24, Z+6	; 0x06
    2920:	97 81       	ldd	r25, Z+7	; 0x07
    2922:	9b 83       	std	Y+3, r25	; 0x03
    2924:	8a 83       	std	Y+2, r24	; 0x02
    2926:	8a 81       	ldd	r24, Y+2	; 0x02
    2928:	9b 81       	ldd	r25, Y+3	; 0x03
    292a:	0c 96       	adiw	r24, 0x0c	; 12
    292c:	0e 94 94 11 	call	0x2328	; 0x2328 <uxListRemove>
    2930:	8a 81       	ldd	r24, Y+2	; 0x02
    2932:	9b 81       	ldd	r25, Y+3	; 0x03
    2934:	9c 01       	movw	r18, r24
    2936:	24 5f       	subi	r18, 0xF4	; 244
    2938:	3f 4f       	sbci	r19, 0xFF	; 255
    293a:	80 eb       	ldi	r24, 0xB0	; 176
    293c:	92 e0       	ldi	r25, 0x02	; 2
    293e:	b9 01       	movw	r22, r18
    2940:	0e 94 dd 10 	call	0x21ba	; 0x21ba <vListInsertEnd>
    2944:	ea 81       	ldd	r30, Y+2	; 0x02
    2946:	fb 81       	ldd	r31, Y+3	; 0x03
    2948:	96 89       	ldd	r25, Z+22	; 0x16
    294a:	e0 91 7f 02 	lds	r30, 0x027F
    294e:	f0 91 80 02 	lds	r31, 0x0280
    2952:	86 89       	ldd	r24, Z+22	; 0x16
    2954:	98 17       	cp	r25, r24
    2956:	18 f0       	brcs	.+6      	; 0x295e <xCoRoutineRemoveFromEventList+0x5c>
    2958:	81 e0       	ldi	r24, 0x01	; 1
    295a:	89 83       	std	Y+1, r24	; 0x01
    295c:	01 c0       	rjmp	.+2      	; 0x2960 <xCoRoutineRemoveFromEventList+0x5e>
    295e:	19 82       	std	Y+1, r1	; 0x01
    2960:	89 81       	ldd	r24, Y+1	; 0x01
    2962:	0f 90       	pop	r0
    2964:	0f 90       	pop	r0
    2966:	0f 90       	pop	r0
    2968:	0f 90       	pop	r0
    296a:	0f 90       	pop	r0
    296c:	cf 91       	pop	r28
    296e:	df 91       	pop	r29
    2970:	08 95       	ret

00002972 <pvPortMalloc>:
    2972:	df 93       	push	r29
    2974:	cf 93       	push	r28
    2976:	00 d0       	rcall	.+0      	; 0x2978 <pvPortMalloc+0x6>
    2978:	0f 92       	push	r0
    297a:	cd b7       	in	r28, 0x3d	; 61
    297c:	de b7       	in	r29, 0x3e	; 62
    297e:	9c 83       	std	Y+4, r25	; 0x04
    2980:	8b 83       	std	Y+3, r24	; 0x03
    2982:	1a 82       	std	Y+2, r1	; 0x02
    2984:	19 82       	std	Y+1, r1	; 0x01
    2986:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <vTaskSuspendAll>
    298a:	80 91 b9 02 	lds	r24, 0x02B9
    298e:	90 91 ba 02 	lds	r25, 0x02BA
    2992:	2b 81       	ldd	r18, Y+3	; 0x03
    2994:	3c 81       	ldd	r19, Y+4	; 0x04
    2996:	82 0f       	add	r24, r18
    2998:	93 1f       	adc	r25, r19
    299a:	28 e1       	ldi	r18, 0x18	; 24
    299c:	80 30       	cpi	r24, 0x00	; 0
    299e:	92 07       	cpc	r25, r18
    29a0:	18 f5       	brcc	.+70     	; 0x29e8 <pvPortMalloc+0x76>
    29a2:	20 91 b9 02 	lds	r18, 0x02B9
    29a6:	30 91 ba 02 	lds	r19, 0x02BA
    29aa:	8b 81       	ldd	r24, Y+3	; 0x03
    29ac:	9c 81       	ldd	r25, Y+4	; 0x04
    29ae:	28 0f       	add	r18, r24
    29b0:	39 1f       	adc	r19, r25
    29b2:	80 91 b9 02 	lds	r24, 0x02B9
    29b6:	90 91 ba 02 	lds	r25, 0x02BA
    29ba:	82 17       	cp	r24, r18
    29bc:	93 07       	cpc	r25, r19
    29be:	a0 f4       	brcc	.+40     	; 0x29e8 <pvPortMalloc+0x76>
    29c0:	80 91 b9 02 	lds	r24, 0x02B9
    29c4:	90 91 ba 02 	lds	r25, 0x02BA
    29c8:	85 54       	subi	r24, 0x45	; 69
    29ca:	9d 4f       	sbci	r25, 0xFD	; 253
    29cc:	9a 83       	std	Y+2, r25	; 0x02
    29ce:	89 83       	std	Y+1, r24	; 0x01
    29d0:	20 91 b9 02 	lds	r18, 0x02B9
    29d4:	30 91 ba 02 	lds	r19, 0x02BA
    29d8:	8b 81       	ldd	r24, Y+3	; 0x03
    29da:	9c 81       	ldd	r25, Y+4	; 0x04
    29dc:	82 0f       	add	r24, r18
    29de:	93 1f       	adc	r25, r19
    29e0:	90 93 ba 02 	sts	0x02BA, r25
    29e4:	80 93 b9 02 	sts	0x02B9, r24
    29e8:	0e 94 86 05 	call	0xb0c	; 0xb0c <xTaskResumeAll>
    29ec:	89 81       	ldd	r24, Y+1	; 0x01
    29ee:	9a 81       	ldd	r25, Y+2	; 0x02
    29f0:	0f 90       	pop	r0
    29f2:	0f 90       	pop	r0
    29f4:	0f 90       	pop	r0
    29f6:	0f 90       	pop	r0
    29f8:	cf 91       	pop	r28
    29fa:	df 91       	pop	r29
    29fc:	08 95       	ret

000029fe <vPortFree>:
    29fe:	df 93       	push	r29
    2a00:	cf 93       	push	r28
    2a02:	0f 92       	push	r0
    2a04:	0f 92       	push	r0
    2a06:	cd b7       	in	r28, 0x3d	; 61
    2a08:	de b7       	in	r29, 0x3e	; 62
    2a0a:	9a 83       	std	Y+2, r25	; 0x02
    2a0c:	89 83       	std	Y+1, r24	; 0x01
    2a0e:	0f 90       	pop	r0
    2a10:	0f 90       	pop	r0
    2a12:	cf 91       	pop	r28
    2a14:	df 91       	pop	r29
    2a16:	08 95       	ret

00002a18 <vPortInitialiseBlocks>:
    2a18:	df 93       	push	r29
    2a1a:	cf 93       	push	r28
    2a1c:	cd b7       	in	r28, 0x3d	; 61
    2a1e:	de b7       	in	r29, 0x3e	; 62
    2a20:	10 92 ba 02 	sts	0x02BA, r1
    2a24:	10 92 b9 02 	sts	0x02B9, r1
    2a28:	cf 91       	pop	r28
    2a2a:	df 91       	pop	r29
    2a2c:	08 95       	ret

00002a2e <xPortGetFreeHeapSize>:
    2a2e:	df 93       	push	r29
    2a30:	cf 93       	push	r28
    2a32:	cd b7       	in	r28, 0x3d	; 61
    2a34:	de b7       	in	r29, 0x3e	; 62
    2a36:	20 91 b9 02 	lds	r18, 0x02B9
    2a3a:	30 91 ba 02 	lds	r19, 0x02BA
    2a3e:	80 e0       	ldi	r24, 0x00	; 0
    2a40:	98 e1       	ldi	r25, 0x18	; 24
    2a42:	82 1b       	sub	r24, r18
    2a44:	93 0b       	sbc	r25, r19
    2a46:	cf 91       	pop	r28
    2a48:	df 91       	pop	r29
    2a4a:	08 95       	ret

00002a4c <pxPortInitialiseStack>:
    2a4c:	df 93       	push	r29
    2a4e:	cf 93       	push	r28
    2a50:	cd b7       	in	r28, 0x3d	; 61
    2a52:	de b7       	in	r29, 0x3e	; 62
    2a54:	28 97       	sbiw	r28, 0x08	; 8
    2a56:	0f b6       	in	r0, 0x3f	; 63
    2a58:	f8 94       	cli
    2a5a:	de bf       	out	0x3e, r29	; 62
    2a5c:	0f be       	out	0x3f, r0	; 63
    2a5e:	cd bf       	out	0x3d, r28	; 61
    2a60:	9c 83       	std	Y+4, r25	; 0x04
    2a62:	8b 83       	std	Y+3, r24	; 0x03
    2a64:	7e 83       	std	Y+6, r23	; 0x06
    2a66:	6d 83       	std	Y+5, r22	; 0x05
    2a68:	58 87       	std	Y+8, r21	; 0x08
    2a6a:	4f 83       	std	Y+7, r20	; 0x07
    2a6c:	eb 81       	ldd	r30, Y+3	; 0x03
    2a6e:	fc 81       	ldd	r31, Y+4	; 0x04
    2a70:	81 e1       	ldi	r24, 0x11	; 17
    2a72:	80 83       	st	Z, r24
    2a74:	8b 81       	ldd	r24, Y+3	; 0x03
    2a76:	9c 81       	ldd	r25, Y+4	; 0x04
    2a78:	01 97       	sbiw	r24, 0x01	; 1
    2a7a:	9c 83       	std	Y+4, r25	; 0x04
    2a7c:	8b 83       	std	Y+3, r24	; 0x03
    2a7e:	eb 81       	ldd	r30, Y+3	; 0x03
    2a80:	fc 81       	ldd	r31, Y+4	; 0x04
    2a82:	82 e2       	ldi	r24, 0x22	; 34
    2a84:	80 83       	st	Z, r24
    2a86:	8b 81       	ldd	r24, Y+3	; 0x03
    2a88:	9c 81       	ldd	r25, Y+4	; 0x04
    2a8a:	01 97       	sbiw	r24, 0x01	; 1
    2a8c:	9c 83       	std	Y+4, r25	; 0x04
    2a8e:	8b 83       	std	Y+3, r24	; 0x03
    2a90:	eb 81       	ldd	r30, Y+3	; 0x03
    2a92:	fc 81       	ldd	r31, Y+4	; 0x04
    2a94:	83 e3       	ldi	r24, 0x33	; 51
    2a96:	80 83       	st	Z, r24
    2a98:	8b 81       	ldd	r24, Y+3	; 0x03
    2a9a:	9c 81       	ldd	r25, Y+4	; 0x04
    2a9c:	01 97       	sbiw	r24, 0x01	; 1
    2a9e:	9c 83       	std	Y+4, r25	; 0x04
    2aa0:	8b 83       	std	Y+3, r24	; 0x03
    2aa2:	8d 81       	ldd	r24, Y+5	; 0x05
    2aa4:	9e 81       	ldd	r25, Y+6	; 0x06
    2aa6:	9a 83       	std	Y+2, r25	; 0x02
    2aa8:	89 83       	std	Y+1, r24	; 0x01
    2aaa:	89 81       	ldd	r24, Y+1	; 0x01
    2aac:	eb 81       	ldd	r30, Y+3	; 0x03
    2aae:	fc 81       	ldd	r31, Y+4	; 0x04
    2ab0:	80 83       	st	Z, r24
    2ab2:	8b 81       	ldd	r24, Y+3	; 0x03
    2ab4:	9c 81       	ldd	r25, Y+4	; 0x04
    2ab6:	01 97       	sbiw	r24, 0x01	; 1
    2ab8:	9c 83       	std	Y+4, r25	; 0x04
    2aba:	8b 83       	std	Y+3, r24	; 0x03
    2abc:	89 81       	ldd	r24, Y+1	; 0x01
    2abe:	9a 81       	ldd	r25, Y+2	; 0x02
    2ac0:	89 2f       	mov	r24, r25
    2ac2:	99 27       	eor	r25, r25
    2ac4:	9a 83       	std	Y+2, r25	; 0x02
    2ac6:	89 83       	std	Y+1, r24	; 0x01
    2ac8:	89 81       	ldd	r24, Y+1	; 0x01
    2aca:	eb 81       	ldd	r30, Y+3	; 0x03
    2acc:	fc 81       	ldd	r31, Y+4	; 0x04
    2ace:	80 83       	st	Z, r24
    2ad0:	8b 81       	ldd	r24, Y+3	; 0x03
    2ad2:	9c 81       	ldd	r25, Y+4	; 0x04
    2ad4:	01 97       	sbiw	r24, 0x01	; 1
    2ad6:	9c 83       	std	Y+4, r25	; 0x04
    2ad8:	8b 83       	std	Y+3, r24	; 0x03
    2ada:	eb 81       	ldd	r30, Y+3	; 0x03
    2adc:	fc 81       	ldd	r31, Y+4	; 0x04
    2ade:	10 82       	st	Z, r1
    2ae0:	8b 81       	ldd	r24, Y+3	; 0x03
    2ae2:	9c 81       	ldd	r25, Y+4	; 0x04
    2ae4:	01 97       	sbiw	r24, 0x01	; 1
    2ae6:	9c 83       	std	Y+4, r25	; 0x04
    2ae8:	8b 83       	std	Y+3, r24	; 0x03
    2aea:	eb 81       	ldd	r30, Y+3	; 0x03
    2aec:	fc 81       	ldd	r31, Y+4	; 0x04
    2aee:	10 82       	st	Z, r1
    2af0:	8b 81       	ldd	r24, Y+3	; 0x03
    2af2:	9c 81       	ldd	r25, Y+4	; 0x04
    2af4:	01 97       	sbiw	r24, 0x01	; 1
    2af6:	9c 83       	std	Y+4, r25	; 0x04
    2af8:	8b 83       	std	Y+3, r24	; 0x03
    2afa:	eb 81       	ldd	r30, Y+3	; 0x03
    2afc:	fc 81       	ldd	r31, Y+4	; 0x04
    2afe:	80 e8       	ldi	r24, 0x80	; 128
    2b00:	80 83       	st	Z, r24
    2b02:	8b 81       	ldd	r24, Y+3	; 0x03
    2b04:	9c 81       	ldd	r25, Y+4	; 0x04
    2b06:	01 97       	sbiw	r24, 0x01	; 1
    2b08:	9c 83       	std	Y+4, r25	; 0x04
    2b0a:	8b 83       	std	Y+3, r24	; 0x03
    2b0c:	eb 81       	ldd	r30, Y+3	; 0x03
    2b0e:	fc 81       	ldd	r31, Y+4	; 0x04
    2b10:	10 82       	st	Z, r1
    2b12:	8b 81       	ldd	r24, Y+3	; 0x03
    2b14:	9c 81       	ldd	r25, Y+4	; 0x04
    2b16:	01 97       	sbiw	r24, 0x01	; 1
    2b18:	9c 83       	std	Y+4, r25	; 0x04
    2b1a:	8b 83       	std	Y+3, r24	; 0x03
    2b1c:	eb 81       	ldd	r30, Y+3	; 0x03
    2b1e:	fc 81       	ldd	r31, Y+4	; 0x04
    2b20:	10 82       	st	Z, r1
    2b22:	8b 81       	ldd	r24, Y+3	; 0x03
    2b24:	9c 81       	ldd	r25, Y+4	; 0x04
    2b26:	01 97       	sbiw	r24, 0x01	; 1
    2b28:	9c 83       	std	Y+4, r25	; 0x04
    2b2a:	8b 83       	std	Y+3, r24	; 0x03
    2b2c:	eb 81       	ldd	r30, Y+3	; 0x03
    2b2e:	fc 81       	ldd	r31, Y+4	; 0x04
    2b30:	10 82       	st	Z, r1
    2b32:	8b 81       	ldd	r24, Y+3	; 0x03
    2b34:	9c 81       	ldd	r25, Y+4	; 0x04
    2b36:	01 97       	sbiw	r24, 0x01	; 1
    2b38:	9c 83       	std	Y+4, r25	; 0x04
    2b3a:	8b 83       	std	Y+3, r24	; 0x03
    2b3c:	eb 81       	ldd	r30, Y+3	; 0x03
    2b3e:	fc 81       	ldd	r31, Y+4	; 0x04
    2b40:	82 e0       	ldi	r24, 0x02	; 2
    2b42:	80 83       	st	Z, r24
    2b44:	8b 81       	ldd	r24, Y+3	; 0x03
    2b46:	9c 81       	ldd	r25, Y+4	; 0x04
    2b48:	01 97       	sbiw	r24, 0x01	; 1
    2b4a:	9c 83       	std	Y+4, r25	; 0x04
    2b4c:	8b 83       	std	Y+3, r24	; 0x03
    2b4e:	eb 81       	ldd	r30, Y+3	; 0x03
    2b50:	fc 81       	ldd	r31, Y+4	; 0x04
    2b52:	83 e0       	ldi	r24, 0x03	; 3
    2b54:	80 83       	st	Z, r24
    2b56:	8b 81       	ldd	r24, Y+3	; 0x03
    2b58:	9c 81       	ldd	r25, Y+4	; 0x04
    2b5a:	01 97       	sbiw	r24, 0x01	; 1
    2b5c:	9c 83       	std	Y+4, r25	; 0x04
    2b5e:	8b 83       	std	Y+3, r24	; 0x03
    2b60:	eb 81       	ldd	r30, Y+3	; 0x03
    2b62:	fc 81       	ldd	r31, Y+4	; 0x04
    2b64:	84 e0       	ldi	r24, 0x04	; 4
    2b66:	80 83       	st	Z, r24
    2b68:	8b 81       	ldd	r24, Y+3	; 0x03
    2b6a:	9c 81       	ldd	r25, Y+4	; 0x04
    2b6c:	01 97       	sbiw	r24, 0x01	; 1
    2b6e:	9c 83       	std	Y+4, r25	; 0x04
    2b70:	8b 83       	std	Y+3, r24	; 0x03
    2b72:	eb 81       	ldd	r30, Y+3	; 0x03
    2b74:	fc 81       	ldd	r31, Y+4	; 0x04
    2b76:	85 e0       	ldi	r24, 0x05	; 5
    2b78:	80 83       	st	Z, r24
    2b7a:	8b 81       	ldd	r24, Y+3	; 0x03
    2b7c:	9c 81       	ldd	r25, Y+4	; 0x04
    2b7e:	01 97       	sbiw	r24, 0x01	; 1
    2b80:	9c 83       	std	Y+4, r25	; 0x04
    2b82:	8b 83       	std	Y+3, r24	; 0x03
    2b84:	eb 81       	ldd	r30, Y+3	; 0x03
    2b86:	fc 81       	ldd	r31, Y+4	; 0x04
    2b88:	86 e0       	ldi	r24, 0x06	; 6
    2b8a:	80 83       	st	Z, r24
    2b8c:	8b 81       	ldd	r24, Y+3	; 0x03
    2b8e:	9c 81       	ldd	r25, Y+4	; 0x04
    2b90:	01 97       	sbiw	r24, 0x01	; 1
    2b92:	9c 83       	std	Y+4, r25	; 0x04
    2b94:	8b 83       	std	Y+3, r24	; 0x03
    2b96:	eb 81       	ldd	r30, Y+3	; 0x03
    2b98:	fc 81       	ldd	r31, Y+4	; 0x04
    2b9a:	87 e0       	ldi	r24, 0x07	; 7
    2b9c:	80 83       	st	Z, r24
    2b9e:	8b 81       	ldd	r24, Y+3	; 0x03
    2ba0:	9c 81       	ldd	r25, Y+4	; 0x04
    2ba2:	01 97       	sbiw	r24, 0x01	; 1
    2ba4:	9c 83       	std	Y+4, r25	; 0x04
    2ba6:	8b 83       	std	Y+3, r24	; 0x03
    2ba8:	eb 81       	ldd	r30, Y+3	; 0x03
    2baa:	fc 81       	ldd	r31, Y+4	; 0x04
    2bac:	88 e0       	ldi	r24, 0x08	; 8
    2bae:	80 83       	st	Z, r24
    2bb0:	8b 81       	ldd	r24, Y+3	; 0x03
    2bb2:	9c 81       	ldd	r25, Y+4	; 0x04
    2bb4:	01 97       	sbiw	r24, 0x01	; 1
    2bb6:	9c 83       	std	Y+4, r25	; 0x04
    2bb8:	8b 83       	std	Y+3, r24	; 0x03
    2bba:	eb 81       	ldd	r30, Y+3	; 0x03
    2bbc:	fc 81       	ldd	r31, Y+4	; 0x04
    2bbe:	89 e0       	ldi	r24, 0x09	; 9
    2bc0:	80 83       	st	Z, r24
    2bc2:	8b 81       	ldd	r24, Y+3	; 0x03
    2bc4:	9c 81       	ldd	r25, Y+4	; 0x04
    2bc6:	01 97       	sbiw	r24, 0x01	; 1
    2bc8:	9c 83       	std	Y+4, r25	; 0x04
    2bca:	8b 83       	std	Y+3, r24	; 0x03
    2bcc:	eb 81       	ldd	r30, Y+3	; 0x03
    2bce:	fc 81       	ldd	r31, Y+4	; 0x04
    2bd0:	80 e1       	ldi	r24, 0x10	; 16
    2bd2:	80 83       	st	Z, r24
    2bd4:	8b 81       	ldd	r24, Y+3	; 0x03
    2bd6:	9c 81       	ldd	r25, Y+4	; 0x04
    2bd8:	01 97       	sbiw	r24, 0x01	; 1
    2bda:	9c 83       	std	Y+4, r25	; 0x04
    2bdc:	8b 83       	std	Y+3, r24	; 0x03
    2bde:	eb 81       	ldd	r30, Y+3	; 0x03
    2be0:	fc 81       	ldd	r31, Y+4	; 0x04
    2be2:	81 e1       	ldi	r24, 0x11	; 17
    2be4:	80 83       	st	Z, r24
    2be6:	8b 81       	ldd	r24, Y+3	; 0x03
    2be8:	9c 81       	ldd	r25, Y+4	; 0x04
    2bea:	01 97       	sbiw	r24, 0x01	; 1
    2bec:	9c 83       	std	Y+4, r25	; 0x04
    2bee:	8b 83       	std	Y+3, r24	; 0x03
    2bf0:	eb 81       	ldd	r30, Y+3	; 0x03
    2bf2:	fc 81       	ldd	r31, Y+4	; 0x04
    2bf4:	82 e1       	ldi	r24, 0x12	; 18
    2bf6:	80 83       	st	Z, r24
    2bf8:	8b 81       	ldd	r24, Y+3	; 0x03
    2bfa:	9c 81       	ldd	r25, Y+4	; 0x04
    2bfc:	01 97       	sbiw	r24, 0x01	; 1
    2bfe:	9c 83       	std	Y+4, r25	; 0x04
    2c00:	8b 83       	std	Y+3, r24	; 0x03
    2c02:	eb 81       	ldd	r30, Y+3	; 0x03
    2c04:	fc 81       	ldd	r31, Y+4	; 0x04
    2c06:	83 e1       	ldi	r24, 0x13	; 19
    2c08:	80 83       	st	Z, r24
    2c0a:	8b 81       	ldd	r24, Y+3	; 0x03
    2c0c:	9c 81       	ldd	r25, Y+4	; 0x04
    2c0e:	01 97       	sbiw	r24, 0x01	; 1
    2c10:	9c 83       	std	Y+4, r25	; 0x04
    2c12:	8b 83       	std	Y+3, r24	; 0x03
    2c14:	eb 81       	ldd	r30, Y+3	; 0x03
    2c16:	fc 81       	ldd	r31, Y+4	; 0x04
    2c18:	84 e1       	ldi	r24, 0x14	; 20
    2c1a:	80 83       	st	Z, r24
    2c1c:	8b 81       	ldd	r24, Y+3	; 0x03
    2c1e:	9c 81       	ldd	r25, Y+4	; 0x04
    2c20:	01 97       	sbiw	r24, 0x01	; 1
    2c22:	9c 83       	std	Y+4, r25	; 0x04
    2c24:	8b 83       	std	Y+3, r24	; 0x03
    2c26:	eb 81       	ldd	r30, Y+3	; 0x03
    2c28:	fc 81       	ldd	r31, Y+4	; 0x04
    2c2a:	85 e1       	ldi	r24, 0x15	; 21
    2c2c:	80 83       	st	Z, r24
    2c2e:	8b 81       	ldd	r24, Y+3	; 0x03
    2c30:	9c 81       	ldd	r25, Y+4	; 0x04
    2c32:	01 97       	sbiw	r24, 0x01	; 1
    2c34:	9c 83       	std	Y+4, r25	; 0x04
    2c36:	8b 83       	std	Y+3, r24	; 0x03
    2c38:	eb 81       	ldd	r30, Y+3	; 0x03
    2c3a:	fc 81       	ldd	r31, Y+4	; 0x04
    2c3c:	86 e1       	ldi	r24, 0x16	; 22
    2c3e:	80 83       	st	Z, r24
    2c40:	8b 81       	ldd	r24, Y+3	; 0x03
    2c42:	9c 81       	ldd	r25, Y+4	; 0x04
    2c44:	01 97       	sbiw	r24, 0x01	; 1
    2c46:	9c 83       	std	Y+4, r25	; 0x04
    2c48:	8b 83       	std	Y+3, r24	; 0x03
    2c4a:	eb 81       	ldd	r30, Y+3	; 0x03
    2c4c:	fc 81       	ldd	r31, Y+4	; 0x04
    2c4e:	87 e1       	ldi	r24, 0x17	; 23
    2c50:	80 83       	st	Z, r24
    2c52:	8b 81       	ldd	r24, Y+3	; 0x03
    2c54:	9c 81       	ldd	r25, Y+4	; 0x04
    2c56:	01 97       	sbiw	r24, 0x01	; 1
    2c58:	9c 83       	std	Y+4, r25	; 0x04
    2c5a:	8b 83       	std	Y+3, r24	; 0x03
    2c5c:	eb 81       	ldd	r30, Y+3	; 0x03
    2c5e:	fc 81       	ldd	r31, Y+4	; 0x04
    2c60:	88 e1       	ldi	r24, 0x18	; 24
    2c62:	80 83       	st	Z, r24
    2c64:	8b 81       	ldd	r24, Y+3	; 0x03
    2c66:	9c 81       	ldd	r25, Y+4	; 0x04
    2c68:	01 97       	sbiw	r24, 0x01	; 1
    2c6a:	9c 83       	std	Y+4, r25	; 0x04
    2c6c:	8b 83       	std	Y+3, r24	; 0x03
    2c6e:	eb 81       	ldd	r30, Y+3	; 0x03
    2c70:	fc 81       	ldd	r31, Y+4	; 0x04
    2c72:	89 e1       	ldi	r24, 0x19	; 25
    2c74:	80 83       	st	Z, r24
    2c76:	8b 81       	ldd	r24, Y+3	; 0x03
    2c78:	9c 81       	ldd	r25, Y+4	; 0x04
    2c7a:	01 97       	sbiw	r24, 0x01	; 1
    2c7c:	9c 83       	std	Y+4, r25	; 0x04
    2c7e:	8b 83       	std	Y+3, r24	; 0x03
    2c80:	eb 81       	ldd	r30, Y+3	; 0x03
    2c82:	fc 81       	ldd	r31, Y+4	; 0x04
    2c84:	80 e2       	ldi	r24, 0x20	; 32
    2c86:	80 83       	st	Z, r24
    2c88:	8b 81       	ldd	r24, Y+3	; 0x03
    2c8a:	9c 81       	ldd	r25, Y+4	; 0x04
    2c8c:	01 97       	sbiw	r24, 0x01	; 1
    2c8e:	9c 83       	std	Y+4, r25	; 0x04
    2c90:	8b 83       	std	Y+3, r24	; 0x03
    2c92:	eb 81       	ldd	r30, Y+3	; 0x03
    2c94:	fc 81       	ldd	r31, Y+4	; 0x04
    2c96:	81 e2       	ldi	r24, 0x21	; 33
    2c98:	80 83       	st	Z, r24
    2c9a:	8b 81       	ldd	r24, Y+3	; 0x03
    2c9c:	9c 81       	ldd	r25, Y+4	; 0x04
    2c9e:	01 97       	sbiw	r24, 0x01	; 1
    2ca0:	9c 83       	std	Y+4, r25	; 0x04
    2ca2:	8b 83       	std	Y+3, r24	; 0x03
    2ca4:	eb 81       	ldd	r30, Y+3	; 0x03
    2ca6:	fc 81       	ldd	r31, Y+4	; 0x04
    2ca8:	82 e2       	ldi	r24, 0x22	; 34
    2caa:	80 83       	st	Z, r24
    2cac:	8b 81       	ldd	r24, Y+3	; 0x03
    2cae:	9c 81       	ldd	r25, Y+4	; 0x04
    2cb0:	01 97       	sbiw	r24, 0x01	; 1
    2cb2:	9c 83       	std	Y+4, r25	; 0x04
    2cb4:	8b 83       	std	Y+3, r24	; 0x03
    2cb6:	eb 81       	ldd	r30, Y+3	; 0x03
    2cb8:	fc 81       	ldd	r31, Y+4	; 0x04
    2cba:	83 e2       	ldi	r24, 0x23	; 35
    2cbc:	80 83       	st	Z, r24
    2cbe:	8b 81       	ldd	r24, Y+3	; 0x03
    2cc0:	9c 81       	ldd	r25, Y+4	; 0x04
    2cc2:	01 97       	sbiw	r24, 0x01	; 1
    2cc4:	9c 83       	std	Y+4, r25	; 0x04
    2cc6:	8b 83       	std	Y+3, r24	; 0x03
    2cc8:	8f 81       	ldd	r24, Y+7	; 0x07
    2cca:	98 85       	ldd	r25, Y+8	; 0x08
    2ccc:	9a 83       	std	Y+2, r25	; 0x02
    2cce:	89 83       	std	Y+1, r24	; 0x01
    2cd0:	89 81       	ldd	r24, Y+1	; 0x01
    2cd2:	eb 81       	ldd	r30, Y+3	; 0x03
    2cd4:	fc 81       	ldd	r31, Y+4	; 0x04
    2cd6:	80 83       	st	Z, r24
    2cd8:	8b 81       	ldd	r24, Y+3	; 0x03
    2cda:	9c 81       	ldd	r25, Y+4	; 0x04
    2cdc:	01 97       	sbiw	r24, 0x01	; 1
    2cde:	9c 83       	std	Y+4, r25	; 0x04
    2ce0:	8b 83       	std	Y+3, r24	; 0x03
    2ce2:	89 81       	ldd	r24, Y+1	; 0x01
    2ce4:	9a 81       	ldd	r25, Y+2	; 0x02
    2ce6:	89 2f       	mov	r24, r25
    2ce8:	99 27       	eor	r25, r25
    2cea:	9a 83       	std	Y+2, r25	; 0x02
    2cec:	89 83       	std	Y+1, r24	; 0x01
    2cee:	89 81       	ldd	r24, Y+1	; 0x01
    2cf0:	eb 81       	ldd	r30, Y+3	; 0x03
    2cf2:	fc 81       	ldd	r31, Y+4	; 0x04
    2cf4:	80 83       	st	Z, r24
    2cf6:	8b 81       	ldd	r24, Y+3	; 0x03
    2cf8:	9c 81       	ldd	r25, Y+4	; 0x04
    2cfa:	01 97       	sbiw	r24, 0x01	; 1
    2cfc:	9c 83       	std	Y+4, r25	; 0x04
    2cfe:	8b 83       	std	Y+3, r24	; 0x03
    2d00:	eb 81       	ldd	r30, Y+3	; 0x03
    2d02:	fc 81       	ldd	r31, Y+4	; 0x04
    2d04:	86 e2       	ldi	r24, 0x26	; 38
    2d06:	80 83       	st	Z, r24
    2d08:	8b 81       	ldd	r24, Y+3	; 0x03
    2d0a:	9c 81       	ldd	r25, Y+4	; 0x04
    2d0c:	01 97       	sbiw	r24, 0x01	; 1
    2d0e:	9c 83       	std	Y+4, r25	; 0x04
    2d10:	8b 83       	std	Y+3, r24	; 0x03
    2d12:	eb 81       	ldd	r30, Y+3	; 0x03
    2d14:	fc 81       	ldd	r31, Y+4	; 0x04
    2d16:	87 e2       	ldi	r24, 0x27	; 39
    2d18:	80 83       	st	Z, r24
    2d1a:	8b 81       	ldd	r24, Y+3	; 0x03
    2d1c:	9c 81       	ldd	r25, Y+4	; 0x04
    2d1e:	01 97       	sbiw	r24, 0x01	; 1
    2d20:	9c 83       	std	Y+4, r25	; 0x04
    2d22:	8b 83       	std	Y+3, r24	; 0x03
    2d24:	eb 81       	ldd	r30, Y+3	; 0x03
    2d26:	fc 81       	ldd	r31, Y+4	; 0x04
    2d28:	88 e2       	ldi	r24, 0x28	; 40
    2d2a:	80 83       	st	Z, r24
    2d2c:	8b 81       	ldd	r24, Y+3	; 0x03
    2d2e:	9c 81       	ldd	r25, Y+4	; 0x04
    2d30:	01 97       	sbiw	r24, 0x01	; 1
    2d32:	9c 83       	std	Y+4, r25	; 0x04
    2d34:	8b 83       	std	Y+3, r24	; 0x03
    2d36:	eb 81       	ldd	r30, Y+3	; 0x03
    2d38:	fc 81       	ldd	r31, Y+4	; 0x04
    2d3a:	89 e2       	ldi	r24, 0x29	; 41
    2d3c:	80 83       	st	Z, r24
    2d3e:	8b 81       	ldd	r24, Y+3	; 0x03
    2d40:	9c 81       	ldd	r25, Y+4	; 0x04
    2d42:	01 97       	sbiw	r24, 0x01	; 1
    2d44:	9c 83       	std	Y+4, r25	; 0x04
    2d46:	8b 83       	std	Y+3, r24	; 0x03
    2d48:	eb 81       	ldd	r30, Y+3	; 0x03
    2d4a:	fc 81       	ldd	r31, Y+4	; 0x04
    2d4c:	80 e3       	ldi	r24, 0x30	; 48
    2d4e:	80 83       	st	Z, r24
    2d50:	8b 81       	ldd	r24, Y+3	; 0x03
    2d52:	9c 81       	ldd	r25, Y+4	; 0x04
    2d54:	01 97       	sbiw	r24, 0x01	; 1
    2d56:	9c 83       	std	Y+4, r25	; 0x04
    2d58:	8b 83       	std	Y+3, r24	; 0x03
    2d5a:	eb 81       	ldd	r30, Y+3	; 0x03
    2d5c:	fc 81       	ldd	r31, Y+4	; 0x04
    2d5e:	81 e3       	ldi	r24, 0x31	; 49
    2d60:	80 83       	st	Z, r24
    2d62:	8b 81       	ldd	r24, Y+3	; 0x03
    2d64:	9c 81       	ldd	r25, Y+4	; 0x04
    2d66:	01 97       	sbiw	r24, 0x01	; 1
    2d68:	9c 83       	std	Y+4, r25	; 0x04
    2d6a:	8b 83       	std	Y+3, r24	; 0x03
    2d6c:	8b 81       	ldd	r24, Y+3	; 0x03
    2d6e:	9c 81       	ldd	r25, Y+4	; 0x04
    2d70:	28 96       	adiw	r28, 0x08	; 8
    2d72:	0f b6       	in	r0, 0x3f	; 63
    2d74:	f8 94       	cli
    2d76:	de bf       	out	0x3e, r29	; 62
    2d78:	0f be       	out	0x3f, r0	; 63
    2d7a:	cd bf       	out	0x3d, r28	; 61
    2d7c:	cf 91       	pop	r28
    2d7e:	df 91       	pop	r29
    2d80:	08 95       	ret

00002d82 <xPortStartScheduler>:
    2d82:	df 93       	push	r29
    2d84:	cf 93       	push	r28
    2d86:	cd b7       	in	r28, 0x3d	; 61
    2d88:	de b7       	in	r29, 0x3e	; 62
    2d8a:	0e 94 c5 17 	call	0x2f8a	; 0x2f8a <prvSetupTimerInterrupt>
    2d8e:	a0 91 26 02 	lds	r26, 0x0226
    2d92:	b0 91 27 02 	lds	r27, 0x0227
    2d96:	cd 91       	ld	r28, X+
    2d98:	cd bf       	out	0x3d, r28	; 61
    2d9a:	dd 91       	ld	r29, X+
    2d9c:	de bf       	out	0x3e, r29	; 62
    2d9e:	ff 91       	pop	r31
    2da0:	ef 91       	pop	r30
    2da2:	df 91       	pop	r29
    2da4:	cf 91       	pop	r28
    2da6:	bf 91       	pop	r27
    2da8:	af 91       	pop	r26
    2daa:	9f 91       	pop	r25
    2dac:	8f 91       	pop	r24
    2dae:	7f 91       	pop	r23
    2db0:	6f 91       	pop	r22
    2db2:	5f 91       	pop	r21
    2db4:	4f 91       	pop	r20
    2db6:	3f 91       	pop	r19
    2db8:	2f 91       	pop	r18
    2dba:	1f 91       	pop	r17
    2dbc:	0f 91       	pop	r16
    2dbe:	ff 90       	pop	r15
    2dc0:	ef 90       	pop	r14
    2dc2:	df 90       	pop	r13
    2dc4:	cf 90       	pop	r12
    2dc6:	bf 90       	pop	r11
    2dc8:	af 90       	pop	r10
    2dca:	9f 90       	pop	r9
    2dcc:	8f 90       	pop	r8
    2dce:	7f 90       	pop	r7
    2dd0:	6f 90       	pop	r6
    2dd2:	5f 90       	pop	r5
    2dd4:	4f 90       	pop	r4
    2dd6:	3f 90       	pop	r3
    2dd8:	2f 90       	pop	r2
    2dda:	1f 90       	pop	r1
    2ddc:	0f 90       	pop	r0
    2dde:	0c be       	out	0x3c, r0	; 60
    2de0:	0f 90       	pop	r0
    2de2:	0b be       	out	0x3b, r0	; 59
    2de4:	0f 90       	pop	r0
    2de6:	0f be       	out	0x3f, r0	; 63
    2de8:	0f 90       	pop	r0
    2dea:	08 95       	ret
    2dec:	81 e0       	ldi	r24, 0x01	; 1
    2dee:	cf 91       	pop	r28
    2df0:	df 91       	pop	r29
    2df2:	08 95       	ret

00002df4 <vPortEndScheduler>:
    2df4:	df 93       	push	r29
    2df6:	cf 93       	push	r28
    2df8:	cd b7       	in	r28, 0x3d	; 61
    2dfa:	de b7       	in	r29, 0x3e	; 62
    2dfc:	cf 91       	pop	r28
    2dfe:	df 91       	pop	r29
    2e00:	08 95       	ret

00002e02 <vPortYield>:
    2e02:	0f 92       	push	r0
    2e04:	0f b6       	in	r0, 0x3f	; 63
    2e06:	f8 94       	cli
    2e08:	0f 92       	push	r0
    2e0a:	0b b6       	in	r0, 0x3b	; 59
    2e0c:	0f 92       	push	r0
    2e0e:	0c b6       	in	r0, 0x3c	; 60
    2e10:	0f 92       	push	r0
    2e12:	1f 92       	push	r1
    2e14:	11 24       	eor	r1, r1
    2e16:	2f 92       	push	r2
    2e18:	3f 92       	push	r3
    2e1a:	4f 92       	push	r4
    2e1c:	5f 92       	push	r5
    2e1e:	6f 92       	push	r6
    2e20:	7f 92       	push	r7
    2e22:	8f 92       	push	r8
    2e24:	9f 92       	push	r9
    2e26:	af 92       	push	r10
    2e28:	bf 92       	push	r11
    2e2a:	cf 92       	push	r12
    2e2c:	df 92       	push	r13
    2e2e:	ef 92       	push	r14
    2e30:	ff 92       	push	r15
    2e32:	0f 93       	push	r16
    2e34:	1f 93       	push	r17
    2e36:	2f 93       	push	r18
    2e38:	3f 93       	push	r19
    2e3a:	4f 93       	push	r20
    2e3c:	5f 93       	push	r21
    2e3e:	6f 93       	push	r22
    2e40:	7f 93       	push	r23
    2e42:	8f 93       	push	r24
    2e44:	9f 93       	push	r25
    2e46:	af 93       	push	r26
    2e48:	bf 93       	push	r27
    2e4a:	cf 93       	push	r28
    2e4c:	df 93       	push	r29
    2e4e:	ef 93       	push	r30
    2e50:	ff 93       	push	r31
    2e52:	a0 91 26 02 	lds	r26, 0x0226
    2e56:	b0 91 27 02 	lds	r27, 0x0227
    2e5a:	0d b6       	in	r0, 0x3d	; 61
    2e5c:	0d 92       	st	X+, r0
    2e5e:	0e b6       	in	r0, 0x3e	; 62
    2e60:	0d 92       	st	X+, r0
    2e62:	0e 94 19 07 	call	0xe32	; 0xe32 <vTaskSwitchContext>
    2e66:	a0 91 26 02 	lds	r26, 0x0226
    2e6a:	b0 91 27 02 	lds	r27, 0x0227
    2e6e:	cd 91       	ld	r28, X+
    2e70:	cd bf       	out	0x3d, r28	; 61
    2e72:	dd 91       	ld	r29, X+
    2e74:	de bf       	out	0x3e, r29	; 62
    2e76:	ff 91       	pop	r31
    2e78:	ef 91       	pop	r30
    2e7a:	df 91       	pop	r29
    2e7c:	cf 91       	pop	r28
    2e7e:	bf 91       	pop	r27
    2e80:	af 91       	pop	r26
    2e82:	9f 91       	pop	r25
    2e84:	8f 91       	pop	r24
    2e86:	7f 91       	pop	r23
    2e88:	6f 91       	pop	r22
    2e8a:	5f 91       	pop	r21
    2e8c:	4f 91       	pop	r20
    2e8e:	3f 91       	pop	r19
    2e90:	2f 91       	pop	r18
    2e92:	1f 91       	pop	r17
    2e94:	0f 91       	pop	r16
    2e96:	ff 90       	pop	r15
    2e98:	ef 90       	pop	r14
    2e9a:	df 90       	pop	r13
    2e9c:	cf 90       	pop	r12
    2e9e:	bf 90       	pop	r11
    2ea0:	af 90       	pop	r10
    2ea2:	9f 90       	pop	r9
    2ea4:	8f 90       	pop	r8
    2ea6:	7f 90       	pop	r7
    2ea8:	6f 90       	pop	r6
    2eaa:	5f 90       	pop	r5
    2eac:	4f 90       	pop	r4
    2eae:	3f 90       	pop	r3
    2eb0:	2f 90       	pop	r2
    2eb2:	1f 90       	pop	r1
    2eb4:	0f 90       	pop	r0
    2eb6:	0c be       	out	0x3c, r0	; 60
    2eb8:	0f 90       	pop	r0
    2eba:	0b be       	out	0x3b, r0	; 59
    2ebc:	0f 90       	pop	r0
    2ebe:	0f be       	out	0x3f, r0	; 63
    2ec0:	0f 90       	pop	r0
    2ec2:	08 95       	ret

00002ec4 <vPortYieldFromTick>:
    2ec4:	0f 92       	push	r0
    2ec6:	0f b6       	in	r0, 0x3f	; 63
    2ec8:	f8 94       	cli
    2eca:	0f 92       	push	r0
    2ecc:	0b b6       	in	r0, 0x3b	; 59
    2ece:	0f 92       	push	r0
    2ed0:	0c b6       	in	r0, 0x3c	; 60
    2ed2:	0f 92       	push	r0
    2ed4:	1f 92       	push	r1
    2ed6:	11 24       	eor	r1, r1
    2ed8:	2f 92       	push	r2
    2eda:	3f 92       	push	r3
    2edc:	4f 92       	push	r4
    2ede:	5f 92       	push	r5
    2ee0:	6f 92       	push	r6
    2ee2:	7f 92       	push	r7
    2ee4:	8f 92       	push	r8
    2ee6:	9f 92       	push	r9
    2ee8:	af 92       	push	r10
    2eea:	bf 92       	push	r11
    2eec:	cf 92       	push	r12
    2eee:	df 92       	push	r13
    2ef0:	ef 92       	push	r14
    2ef2:	ff 92       	push	r15
    2ef4:	0f 93       	push	r16
    2ef6:	1f 93       	push	r17
    2ef8:	2f 93       	push	r18
    2efa:	3f 93       	push	r19
    2efc:	4f 93       	push	r20
    2efe:	5f 93       	push	r21
    2f00:	6f 93       	push	r22
    2f02:	7f 93       	push	r23
    2f04:	8f 93       	push	r24
    2f06:	9f 93       	push	r25
    2f08:	af 93       	push	r26
    2f0a:	bf 93       	push	r27
    2f0c:	cf 93       	push	r28
    2f0e:	df 93       	push	r29
    2f10:	ef 93       	push	r30
    2f12:	ff 93       	push	r31
    2f14:	a0 91 26 02 	lds	r26, 0x0226
    2f18:	b0 91 27 02 	lds	r27, 0x0227
    2f1c:	0d b6       	in	r0, 0x3d	; 61
    2f1e:	0d 92       	st	X+, r0
    2f20:	0e b6       	in	r0, 0x3e	; 62
    2f22:	0d 92       	st	X+, r0
    2f24:	0e 94 45 06 	call	0xc8a	; 0xc8a <vTaskIncrementTick>
    2f28:	0e 94 19 07 	call	0xe32	; 0xe32 <vTaskSwitchContext>
    2f2c:	a0 91 26 02 	lds	r26, 0x0226
    2f30:	b0 91 27 02 	lds	r27, 0x0227
    2f34:	cd 91       	ld	r28, X+
    2f36:	cd bf       	out	0x3d, r28	; 61
    2f38:	dd 91       	ld	r29, X+
    2f3a:	de bf       	out	0x3e, r29	; 62
    2f3c:	ff 91       	pop	r31
    2f3e:	ef 91       	pop	r30
    2f40:	df 91       	pop	r29
    2f42:	cf 91       	pop	r28
    2f44:	bf 91       	pop	r27
    2f46:	af 91       	pop	r26
    2f48:	9f 91       	pop	r25
    2f4a:	8f 91       	pop	r24
    2f4c:	7f 91       	pop	r23
    2f4e:	6f 91       	pop	r22
    2f50:	5f 91       	pop	r21
    2f52:	4f 91       	pop	r20
    2f54:	3f 91       	pop	r19
    2f56:	2f 91       	pop	r18
    2f58:	1f 91       	pop	r17
    2f5a:	0f 91       	pop	r16
    2f5c:	ff 90       	pop	r15
    2f5e:	ef 90       	pop	r14
    2f60:	df 90       	pop	r13
    2f62:	cf 90       	pop	r12
    2f64:	bf 90       	pop	r11
    2f66:	af 90       	pop	r10
    2f68:	9f 90       	pop	r9
    2f6a:	8f 90       	pop	r8
    2f6c:	7f 90       	pop	r7
    2f6e:	6f 90       	pop	r6
    2f70:	5f 90       	pop	r5
    2f72:	4f 90       	pop	r4
    2f74:	3f 90       	pop	r3
    2f76:	2f 90       	pop	r2
    2f78:	1f 90       	pop	r1
    2f7a:	0f 90       	pop	r0
    2f7c:	0c be       	out	0x3c, r0	; 60
    2f7e:	0f 90       	pop	r0
    2f80:	0b be       	out	0x3b, r0	; 59
    2f82:	0f 90       	pop	r0
    2f84:	0f be       	out	0x3f, r0	; 63
    2f86:	0f 90       	pop	r0
    2f88:	08 95       	ret

00002f8a <prvSetupTimerInterrupt>:
    2f8a:	df 93       	push	r29
    2f8c:	cf 93       	push	r28
    2f8e:	00 d0       	rcall	.+0      	; 0x2f90 <prvSetupTimerInterrupt+0x6>
    2f90:	00 d0       	rcall	.+0      	; 0x2f92 <prvSetupTimerInterrupt+0x8>
    2f92:	cd b7       	in	r28, 0x3d	; 61
    2f94:	de b7       	in	r29, 0x3e	; 62
    2f96:	80 e0       	ldi	r24, 0x00	; 0
    2f98:	9d e7       	ldi	r25, 0x7D	; 125
    2f9a:	a0 e0       	ldi	r26, 0x00	; 0
    2f9c:	b0 e0       	ldi	r27, 0x00	; 0
    2f9e:	8b 83       	std	Y+3, r24	; 0x03
    2fa0:	9c 83       	std	Y+4, r25	; 0x04
    2fa2:	ad 83       	std	Y+5, r26	; 0x05
    2fa4:	be 83       	std	Y+6, r27	; 0x06
    2fa6:	8b 81       	ldd	r24, Y+3	; 0x03
    2fa8:	9c 81       	ldd	r25, Y+4	; 0x04
    2faa:	ad 81       	ldd	r26, Y+5	; 0x05
    2fac:	be 81       	ldd	r27, Y+6	; 0x06
    2fae:	68 94       	set
    2fb0:	15 f8       	bld	r1, 5
    2fb2:	b6 95       	lsr	r27
    2fb4:	a7 95       	ror	r26
    2fb6:	97 95       	ror	r25
    2fb8:	87 95       	ror	r24
    2fba:	16 94       	lsr	r1
    2fbc:	d1 f7       	brne	.-12     	; 0x2fb2 <prvSetupTimerInterrupt+0x28>
    2fbe:	8b 83       	std	Y+3, r24	; 0x03
    2fc0:	9c 83       	std	Y+4, r25	; 0x04
    2fc2:	ad 83       	std	Y+5, r26	; 0x05
    2fc4:	be 83       	std	Y+6, r27	; 0x06
    2fc6:	8b 81       	ldd	r24, Y+3	; 0x03
    2fc8:	9c 81       	ldd	r25, Y+4	; 0x04
    2fca:	ad 81       	ldd	r26, Y+5	; 0x05
    2fcc:	be 81       	ldd	r27, Y+6	; 0x06
    2fce:	01 97       	sbiw	r24, 0x01	; 1
    2fd0:	a1 09       	sbc	r26, r1
    2fd2:	b1 09       	sbc	r27, r1
    2fd4:	8b 83       	std	Y+3, r24	; 0x03
    2fd6:	9c 83       	std	Y+4, r25	; 0x04
    2fd8:	ad 83       	std	Y+5, r26	; 0x05
    2fda:	be 83       	std	Y+6, r27	; 0x06
    2fdc:	8b 81       	ldd	r24, Y+3	; 0x03
    2fde:	89 83       	std	Y+1, r24	; 0x01
    2fe0:	8b 81       	ldd	r24, Y+3	; 0x03
    2fe2:	9c 81       	ldd	r25, Y+4	; 0x04
    2fe4:	ad 81       	ldd	r26, Y+5	; 0x05
    2fe6:	be 81       	ldd	r27, Y+6	; 0x06
    2fe8:	89 2f       	mov	r24, r25
    2fea:	9a 2f       	mov	r25, r26
    2fec:	ab 2f       	mov	r26, r27
    2fee:	bb 27       	eor	r27, r27
    2ff0:	8b 83       	std	Y+3, r24	; 0x03
    2ff2:	9c 83       	std	Y+4, r25	; 0x04
    2ff4:	ad 83       	std	Y+5, r26	; 0x05
    2ff6:	be 83       	std	Y+6, r27	; 0x06
    2ff8:	8b 81       	ldd	r24, Y+3	; 0x03
    2ffa:	8a 83       	std	Y+2, r24	; 0x02
    2ffc:	e9 e9       	ldi	r30, 0x99	; 153
    2ffe:	f0 e0       	ldi	r31, 0x00	; 0
    3000:	8a 81       	ldd	r24, Y+2	; 0x02
    3002:	80 83       	st	Z, r24
    3004:	e8 e9       	ldi	r30, 0x98	; 152
    3006:	f0 e0       	ldi	r31, 0x00	; 0
    3008:	89 81       	ldd	r24, Y+1	; 0x01
    300a:	80 83       	st	Z, r24
    300c:	8b e0       	ldi	r24, 0x0B	; 11
    300e:	89 83       	std	Y+1, r24	; 0x01
    3010:	e1 e9       	ldi	r30, 0x91	; 145
    3012:	f0 e0       	ldi	r31, 0x00	; 0
    3014:	89 81       	ldd	r24, Y+1	; 0x01
    3016:	80 83       	st	Z, r24
    3018:	e1 e7       	ldi	r30, 0x71	; 113
    301a:	f0 e0       	ldi	r31, 0x00	; 0
    301c:	80 81       	ld	r24, Z
    301e:	89 83       	std	Y+1, r24	; 0x01
    3020:	89 81       	ldd	r24, Y+1	; 0x01
    3022:	82 60       	ori	r24, 0x02	; 2
    3024:	89 83       	std	Y+1, r24	; 0x01
    3026:	e1 e7       	ldi	r30, 0x71	; 113
    3028:	f0 e0       	ldi	r31, 0x00	; 0
    302a:	89 81       	ldd	r24, Y+1	; 0x01
    302c:	80 83       	st	Z, r24
    302e:	26 96       	adiw	r28, 0x06	; 6
    3030:	0f b6       	in	r0, 0x3f	; 63
    3032:	f8 94       	cli
    3034:	de bf       	out	0x3e, r29	; 62
    3036:	0f be       	out	0x3f, r0	; 63
    3038:	cd bf       	out	0x3d, r28	; 61
    303a:	cf 91       	pop	r28
    303c:	df 91       	pop	r29
    303e:	08 95       	ret

00003040 <__vector_32>:
    3040:	0e 94 62 17 	call	0x2ec4	; 0x2ec4 <vPortYieldFromTick>
    3044:	18 95       	reti

00003046 <USART_Init>:
    3046:	cf 93       	push	r28
    3048:	df 93       	push	r29
    304a:	cd b7       	in	r28, 0x3d	; 61
    304c:	de b7       	in	r29, 0x3e	; 62
    304e:	2e 97       	sbiw	r28, 0x0e	; 14
    3050:	0f b6       	in	r0, 0x3f	; 63
    3052:	f8 94       	cli
    3054:	de bf       	out	0x3e, r29	; 62
    3056:	0f be       	out	0x3f, r0	; 63
    3058:	cd bf       	out	0x3d, r28	; 61
    305a:	9e 83       	std	Y+6, r25	; 0x06
    305c:	8d 83       	std	Y+5, r24	; 0x05
    305e:	4f 83       	std	Y+7, r20	; 0x07
    3060:	58 87       	std	Y+8, r21	; 0x08
    3062:	69 87       	std	Y+9, r22	; 0x09
    3064:	7a 87       	std	Y+10, r23	; 0x0a
    3066:	40 e0       	ldi	r20, 0x00	; 0
    3068:	61 e0       	ldi	r22, 0x01	; 1
    306a:	80 e4       	ldi	r24, 0x40	; 64
    306c:	0e 94 ed 0b 	call	0x17da	; 0x17da <xQueueGenericCreate>
    3070:	90 93 c3 1a 	sts	0x1AC3, r25
    3074:	80 93 c2 1a 	sts	0x1AC2, r24
    3078:	40 e0       	ldi	r20, 0x00	; 0
    307a:	61 e0       	ldi	r22, 0x01	; 1
    307c:	88 e0       	ldi	r24, 0x08	; 8
    307e:	0e 94 ed 0b 	call	0x17da	; 0x17da <xQueueGenericCreate>
    3082:	90 93 bf 1a 	sts	0x1ABF, r25
    3086:	80 93 be 1a 	sts	0x1ABE, r24
    308a:	8f 81       	ldd	r24, Y+7	; 0x07
    308c:	98 85       	ldd	r25, Y+8	; 0x08
    308e:	a9 85       	ldd	r26, Y+9	; 0x09
    3090:	ba 85       	ldd	r27, Y+10	; 0x0a
    3092:	68 94       	set
    3094:	13 f8       	bld	r1, 3
    3096:	b6 95       	lsr	r27
    3098:	a7 95       	ror	r26
    309a:	97 95       	ror	r25
    309c:	87 95       	ror	r24
    309e:	16 94       	lsr	r1
    30a0:	d1 f7       	brne	.-12     	; 0x3096 <USART_Init+0x50>
    30a2:	2d 81       	ldd	r18, Y+5	; 0x05
    30a4:	3e 81       	ldd	r19, Y+6	; 0x06
    30a6:	99 01       	movw	r18, r18
    30a8:	40 e0       	ldi	r20, 0x00	; 0
    30aa:	50 e0       	ldi	r21, 0x00	; 0
    30ac:	bc 01       	movw	r22, r24
    30ae:	cd 01       	movw	r24, r26
    30b0:	0e 94 14 20 	call	0x4028	; 0x4028 <__udivmodsi4>
    30b4:	da 01       	movw	r26, r20
    30b6:	c9 01       	movw	r24, r18
    30b8:	01 97       	sbiw	r24, 0x01	; 1
    30ba:	a1 09       	sbc	r26, r1
    30bc:	b1 09       	sbc	r27, r1
    30be:	89 83       	std	Y+1, r24	; 0x01
    30c0:	9a 83       	std	Y+2, r25	; 0x02
    30c2:	ab 83       	std	Y+3, r26	; 0x03
    30c4:	bc 83       	std	Y+4, r27	; 0x04
    30c6:	2d ec       	ldi	r18, 0xCD	; 205
    30c8:	30 e0       	ldi	r19, 0x00	; 0
    30ca:	89 81       	ldd	r24, Y+1	; 0x01
    30cc:	9a 81       	ldd	r25, Y+2	; 0x02
    30ce:	ab 81       	ldd	r26, Y+3	; 0x03
    30d0:	bc 81       	ldd	r27, Y+4	; 0x04
    30d2:	89 2f       	mov	r24, r25
    30d4:	9a 2f       	mov	r25, r26
    30d6:	ab 2f       	mov	r26, r27
    30d8:	bb 27       	eor	r27, r27
    30da:	f9 01       	movw	r30, r18
    30dc:	80 83       	st	Z, r24
    30de:	8c ec       	ldi	r24, 0xCC	; 204
    30e0:	90 e0       	ldi	r25, 0x00	; 0
    30e2:	29 81       	ldd	r18, Y+1	; 0x01
    30e4:	fc 01       	movw	r30, r24
    30e6:	20 83       	st	Z, r18
    30e8:	89 ec       	ldi	r24, 0xC9	; 201
    30ea:	90 e0       	ldi	r25, 0x00	; 0
    30ec:	28 e9       	ldi	r18, 0x98	; 152
    30ee:	fc 01       	movw	r30, r24
    30f0:	20 83       	st	Z, r18
    30f2:	8a ec       	ldi	r24, 0xCA	; 202
    30f4:	90 e0       	ldi	r25, 0x00	; 0
    30f6:	26 e0       	ldi	r18, 0x06	; 6
    30f8:	fc 01       	movw	r30, r24
    30fa:	20 83       	st	Z, r18
    30fc:	88 ec       	ldi	r24, 0xC8	; 200
    30fe:	90 e0       	ldi	r25, 0x00	; 0
    3100:	28 ec       	ldi	r18, 0xC8	; 200
    3102:	30 e0       	ldi	r19, 0x00	; 0
    3104:	f9 01       	movw	r30, r18
    3106:	20 81       	ld	r18, Z
    3108:	2d 7f       	andi	r18, 0xFD	; 253
    310a:	fc 01       	movw	r30, r24
    310c:	20 83       	st	Z, r18
    310e:	2e 96       	adiw	r28, 0x0e	; 14
    3110:	0f b6       	in	r0, 0x3f	; 63
    3112:	f8 94       	cli
    3114:	de bf       	out	0x3e, r29	; 62
    3116:	0f be       	out	0x3f, r0	; 63
    3118:	cd bf       	out	0x3d, r28	; 61
    311a:	df 91       	pop	r29
    311c:	cf 91       	pop	r28
    311e:	08 95       	ret

00003120 <USART_Write>:
    3120:	cf 93       	push	r28
    3122:	df 93       	push	r29
    3124:	1f 92       	push	r1
    3126:	cd b7       	in	r28, 0x3d	; 61
    3128:	de b7       	in	r29, 0x3e	; 62
    312a:	89 83       	std	Y+1, r24	; 0x01
    312c:	00 00       	nop
    312e:	80 ec       	ldi	r24, 0xC0	; 192
    3130:	90 e0       	ldi	r25, 0x00	; 0
    3132:	fc 01       	movw	r30, r24
    3134:	80 81       	ld	r24, Z
    3136:	88 2f       	mov	r24, r24
    3138:	90 e0       	ldi	r25, 0x00	; 0
    313a:	80 72       	andi	r24, 0x20	; 32
    313c:	99 27       	eor	r25, r25
    313e:	00 97       	sbiw	r24, 0x00	; 0
    3140:	b1 f3       	breq	.-20     	; 0x312e <USART_Write+0xe>
    3142:	86 ec       	ldi	r24, 0xC6	; 198
    3144:	90 e0       	ldi	r25, 0x00	; 0
    3146:	29 81       	ldd	r18, Y+1	; 0x01
    3148:	fc 01       	movw	r30, r24
    314a:	20 83       	st	Z, r18
    314c:	0f 90       	pop	r0
    314e:	df 91       	pop	r29
    3150:	cf 91       	pop	r28
    3152:	08 95       	ret

00003154 <USART_Write_Unprotected>:
    3154:	cf 93       	push	r28
    3156:	df 93       	push	r29
    3158:	1f 92       	push	r1
    315a:	cd b7       	in	r28, 0x3d	; 61
    315c:	de b7       	in	r29, 0x3e	; 62
    315e:	89 83       	std	Y+1, r24	; 0x01
    3160:	00 00       	nop
    3162:	80 ec       	ldi	r24, 0xC0	; 192
    3164:	90 e0       	ldi	r25, 0x00	; 0
    3166:	fc 01       	movw	r30, r24
    3168:	80 81       	ld	r24, Z
    316a:	88 2f       	mov	r24, r24
    316c:	90 e0       	ldi	r25, 0x00	; 0
    316e:	80 72       	andi	r24, 0x20	; 32
    3170:	99 27       	eor	r25, r25
    3172:	00 97       	sbiw	r24, 0x00	; 0
    3174:	b1 f3       	breq	.-20     	; 0x3162 <USART_Write_Unprotected+0xe>
    3176:	86 ec       	ldi	r24, 0xC6	; 198
    3178:	90 e0       	ldi	r25, 0x00	; 0
    317a:	29 81       	ldd	r18, Y+1	; 0x01
    317c:	fc 01       	movw	r30, r24
    317e:	20 83       	st	Z, r18
    3180:	0f 90       	pop	r0
    3182:	df 91       	pop	r29
    3184:	cf 91       	pop	r28
    3186:	08 95       	ret

00003188 <USART_Read>:
    3188:	cf 93       	push	r28
    318a:	df 93       	push	r29
    318c:	cd b7       	in	r28, 0x3d	; 61
    318e:	de b7       	in	r29, 0x3e	; 62
    3190:	00 00       	nop
    3192:	80 ec       	ldi	r24, 0xC0	; 192
    3194:	90 e0       	ldi	r25, 0x00	; 0
    3196:	fc 01       	movw	r30, r24
    3198:	80 81       	ld	r24, Z
    319a:	88 23       	and	r24, r24
    319c:	d4 f7       	brge	.-12     	; 0x3192 <USART_Read+0xa>
    319e:	86 ec       	ldi	r24, 0xC6	; 198
    31a0:	90 e0       	ldi	r25, 0x00	; 0
    31a2:	fc 01       	movw	r30, r24
    31a4:	80 81       	ld	r24, Z
    31a6:	df 91       	pop	r29
    31a8:	cf 91       	pop	r28
    31aa:	08 95       	ret

000031ac <__vector_36>:
    31ac:	1f 92       	push	r1
    31ae:	0f 92       	push	r0
    31b0:	00 90 5f 00 	lds	r0, 0x005F
    31b4:	0f 92       	push	r0
    31b6:	11 24       	eor	r1, r1
    31b8:	00 90 5b 00 	lds	r0, 0x005B
    31bc:	0f 92       	push	r0
    31be:	2f 93       	push	r18
    31c0:	3f 93       	push	r19
    31c2:	4f 93       	push	r20
    31c4:	5f 93       	push	r21
    31c6:	6f 93       	push	r22
    31c8:	7f 93       	push	r23
    31ca:	8f 93       	push	r24
    31cc:	9f 93       	push	r25
    31ce:	af 93       	push	r26
    31d0:	bf 93       	push	r27
    31d2:	ef 93       	push	r30
    31d4:	ff 93       	push	r31
    31d6:	cf 93       	push	r28
    31d8:	df 93       	push	r29
    31da:	1f 92       	push	r1
    31dc:	cd b7       	in	r28, 0x3d	; 61
    31de:	de b7       	in	r29, 0x3e	; 62
    31e0:	8e ec       	ldi	r24, 0xCE	; 206
    31e2:	90 e0       	ldi	r25, 0x00	; 0
    31e4:	fc 01       	movw	r30, r24
    31e6:	80 81       	ld	r24, Z
    31e8:	89 83       	std	Y+1, r24	; 0x01
    31ea:	80 91 be 1a 	lds	r24, 0x1ABE
    31ee:	90 91 bf 1a 	lds	r25, 0x1ABF
    31f2:	20 e0       	ldi	r18, 0x00	; 0
    31f4:	40 e0       	ldi	r20, 0x00	; 0
    31f6:	50 e0       	ldi	r21, 0x00	; 0
    31f8:	be 01       	movw	r22, r28
    31fa:	6f 5f       	subi	r22, 0xFF	; 255
    31fc:	7f 4f       	sbci	r23, 0xFF	; 255
    31fe:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <xQueueGenericSendFromISR>
    3202:	0f 90       	pop	r0
    3204:	df 91       	pop	r29
    3206:	cf 91       	pop	r28
    3208:	ff 91       	pop	r31
    320a:	ef 91       	pop	r30
    320c:	bf 91       	pop	r27
    320e:	af 91       	pop	r26
    3210:	9f 91       	pop	r25
    3212:	8f 91       	pop	r24
    3214:	7f 91       	pop	r23
    3216:	6f 91       	pop	r22
    3218:	5f 91       	pop	r21
    321a:	4f 91       	pop	r20
    321c:	3f 91       	pop	r19
    321e:	2f 91       	pop	r18
    3220:	0f 90       	pop	r0
    3222:	00 92 5b 00 	sts	0x005B, r0
    3226:	0f 90       	pop	r0
    3228:	00 92 5f 00 	sts	0x005F, r0
    322c:	0f 90       	pop	r0
    322e:	1f 90       	pop	r1
    3230:	18 95       	reti

00003232 <USART_AddToQueue>:
    3232:	cf 93       	push	r28
    3234:	df 93       	push	r29
    3236:	1f 92       	push	r1
    3238:	cd b7       	in	r28, 0x3d	; 61
    323a:	de b7       	in	r29, 0x3e	; 62
    323c:	89 83       	std	Y+1, r24	; 0x01
    323e:	80 91 c2 1a 	lds	r24, 0x1AC2
    3242:	90 91 c3 1a 	lds	r25, 0x1AC3
    3246:	20 e0       	ldi	r18, 0x00	; 0
    3248:	4f ef       	ldi	r20, 0xFF	; 255
    324a:	5f ef       	ldi	r21, 0xFF	; 255
    324c:	be 01       	movw	r22, r28
    324e:	6f 5f       	subi	r22, 0xFF	; 255
    3250:	7f 4f       	sbci	r23, 0xFF	; 255
    3252:	0e 94 97 0c 	call	0x192e	; 0x192e <xQueueGenericSend>
    3256:	0f 90       	pop	r0
    3258:	df 91       	pop	r29
    325a:	cf 91       	pop	r28
    325c:	08 95       	ret

0000325e <USART_TransmitString>:
    325e:	cf 93       	push	r28
    3260:	df 93       	push	r29
    3262:	1f 92       	push	r1
    3264:	1f 92       	push	r1
    3266:	cd b7       	in	r28, 0x3d	; 61
    3268:	de b7       	in	r29, 0x3e	; 62
    326a:	9a 83       	std	Y+2, r25	; 0x02
    326c:	89 83       	std	Y+1, r24	; 0x01
    326e:	0b c0       	rjmp	.+22     	; 0x3286 <USART_TransmitString+0x28>
    3270:	89 81       	ldd	r24, Y+1	; 0x01
    3272:	9a 81       	ldd	r25, Y+2	; 0x02
    3274:	fc 01       	movw	r30, r24
    3276:	80 81       	ld	r24, Z
    3278:	0e 94 19 19 	call	0x3232	; 0x3232 <USART_AddToQueue>
    327c:	89 81       	ldd	r24, Y+1	; 0x01
    327e:	9a 81       	ldd	r25, Y+2	; 0x02
    3280:	01 96       	adiw	r24, 0x01	; 1
    3282:	9a 83       	std	Y+2, r25	; 0x02
    3284:	89 83       	std	Y+1, r24	; 0x01
    3286:	89 81       	ldd	r24, Y+1	; 0x01
    3288:	9a 81       	ldd	r25, Y+2	; 0x02
    328a:	fc 01       	movw	r30, r24
    328c:	80 81       	ld	r24, Z
    328e:	88 23       	and	r24, r24
    3290:	79 f7       	brne	.-34     	; 0x3270 <USART_TransmitString+0x12>
    3292:	0f 90       	pop	r0
    3294:	0f 90       	pop	r0
    3296:	df 91       	pop	r29
    3298:	cf 91       	pop	r28
    329a:	08 95       	ret

0000329c <vTaskUSARTWrite>:
    329c:	cf 93       	push	r28
    329e:	df 93       	push	r29
    32a0:	00 d0       	rcall	.+0      	; 0x32a2 <vTaskUSARTWrite+0x6>
    32a2:	cd b7       	in	r28, 0x3d	; 61
    32a4:	de b7       	in	r29, 0x3e	; 62
    32a6:	9b 83       	std	Y+3, r25	; 0x03
    32a8:	8a 83       	std	Y+2, r24	; 0x02
    32aa:	80 91 c2 1a 	lds	r24, 0x1AC2
    32ae:	90 91 c3 1a 	lds	r25, 0x1AC3
    32b2:	20 e0       	ldi	r18, 0x00	; 0
    32b4:	4f ef       	ldi	r20, 0xFF	; 255
    32b6:	5f ef       	ldi	r21, 0xFF	; 255
    32b8:	be 01       	movw	r22, r28
    32ba:	6f 5f       	subi	r22, 0xFF	; 255
    32bc:	7f 4f       	sbci	r23, 0xFF	; 255
    32be:	0e 94 86 0d 	call	0x1b0c	; 0x1b0c <xQueueGenericReceive>
    32c2:	00 00       	nop
    32c4:	88 ec       	ldi	r24, 0xC8	; 200
    32c6:	90 e0       	ldi	r25, 0x00	; 0
    32c8:	fc 01       	movw	r30, r24
    32ca:	80 81       	ld	r24, Z
    32cc:	88 2f       	mov	r24, r24
    32ce:	90 e0       	ldi	r25, 0x00	; 0
    32d0:	80 72       	andi	r24, 0x20	; 32
    32d2:	99 27       	eor	r25, r25
    32d4:	00 97       	sbiw	r24, 0x00	; 0
    32d6:	b1 f3       	breq	.-20     	; 0x32c4 <vTaskUSARTWrite+0x28>
    32d8:	8e ec       	ldi	r24, 0xCE	; 206
    32da:	90 e0       	ldi	r25, 0x00	; 0
    32dc:	29 81       	ldd	r18, Y+1	; 0x01
    32de:	fc 01       	movw	r30, r24
    32e0:	20 83       	st	Z, r18
    32e2:	e3 cf       	rjmp	.-58     	; 0x32aa <vTaskUSARTWrite+0xe>

000032e4 <USART_LogChar>:
    32e4:	cf 93       	push	r28
    32e6:	df 93       	push	r29
    32e8:	1f 92       	push	r1
    32ea:	cd b7       	in	r28, 0x3d	; 61
    32ec:	de b7       	in	r29, 0x3e	; 62
    32ee:	89 83       	std	Y+1, r24	; 0x01
    32f0:	80 91 c0 1a 	lds	r24, 0x1AC0
    32f4:	90 91 c1 1a 	lds	r25, 0x1AC1
    32f8:	20 e0       	ldi	r18, 0x00	; 0
    32fa:	4f ef       	ldi	r20, 0xFF	; 255
    32fc:	5f ef       	ldi	r21, 0xFF	; 255
    32fe:	be 01       	movw	r22, r28
    3300:	6f 5f       	subi	r22, 0xFF	; 255
    3302:	7f 4f       	sbci	r23, 0xFF	; 255
    3304:	0e 94 97 0c 	call	0x192e	; 0x192e <xQueueGenericSend>
    3308:	0f 90       	pop	r0
    330a:	df 91       	pop	r29
    330c:	cf 91       	pop	r28
    330e:	08 95       	ret

00003310 <USART_LogString>:
    3310:	cf 93       	push	r28
    3312:	df 93       	push	r29
    3314:	1f 92       	push	r1
    3316:	1f 92       	push	r1
    3318:	cd b7       	in	r28, 0x3d	; 61
    331a:	de b7       	in	r29, 0x3e	; 62
    331c:	9a 83       	std	Y+2, r25	; 0x02
    331e:	89 83       	std	Y+1, r24	; 0x01
    3320:	0b c0       	rjmp	.+22     	; 0x3338 <USART_LogString+0x28>
    3322:	89 81       	ldd	r24, Y+1	; 0x01
    3324:	9a 81       	ldd	r25, Y+2	; 0x02
    3326:	fc 01       	movw	r30, r24
    3328:	80 81       	ld	r24, Z
    332a:	0e 94 72 19 	call	0x32e4	; 0x32e4 <USART_LogChar>
    332e:	89 81       	ldd	r24, Y+1	; 0x01
    3330:	9a 81       	ldd	r25, Y+2	; 0x02
    3332:	01 96       	adiw	r24, 0x01	; 1
    3334:	9a 83       	std	Y+2, r25	; 0x02
    3336:	89 83       	std	Y+1, r24	; 0x01
    3338:	89 81       	ldd	r24, Y+1	; 0x01
    333a:	9a 81       	ldd	r25, Y+2	; 0x02
    333c:	fc 01       	movw	r30, r24
    333e:	80 81       	ld	r24, Z
    3340:	88 23       	and	r24, r24
    3342:	79 f7       	brne	.-34     	; 0x3322 <USART_LogString+0x12>
    3344:	0f 90       	pop	r0
    3346:	0f 90       	pop	r0
    3348:	df 91       	pop	r29
    334a:	cf 91       	pop	r28
    334c:	08 95       	ret

0000334e <vTaskUSARTLog>:
    334e:	cf 93       	push	r28
    3350:	df 93       	push	r29
    3352:	00 d0       	rcall	.+0      	; 0x3354 <vTaskUSARTLog+0x6>
    3354:	cd b7       	in	r28, 0x3d	; 61
    3356:	de b7       	in	r29, 0x3e	; 62
    3358:	9b 83       	std	Y+3, r25	; 0x03
    335a:	8a 83       	std	Y+2, r24	; 0x02
    335c:	80 91 c0 1a 	lds	r24, 0x1AC0
    3360:	90 91 c1 1a 	lds	r25, 0x1AC1
    3364:	20 e0       	ldi	r18, 0x00	; 0
    3366:	4f ef       	ldi	r20, 0xFF	; 255
    3368:	5f ef       	ldi	r21, 0xFF	; 255
    336a:	be 01       	movw	r22, r28
    336c:	6f 5f       	subi	r22, 0xFF	; 255
    336e:	7f 4f       	sbci	r23, 0xFF	; 255
    3370:	0e 94 86 0d 	call	0x1b0c	; 0x1b0c <xQueueGenericReceive>
    3374:	00 00       	nop
    3376:	80 ec       	ldi	r24, 0xC0	; 192
    3378:	90 e0       	ldi	r25, 0x00	; 0
    337a:	fc 01       	movw	r30, r24
    337c:	80 81       	ld	r24, Z
    337e:	88 2f       	mov	r24, r24
    3380:	90 e0       	ldi	r25, 0x00	; 0
    3382:	80 72       	andi	r24, 0x20	; 32
    3384:	99 27       	eor	r25, r25
    3386:	00 97       	sbiw	r24, 0x00	; 0
    3388:	b1 f3       	breq	.-20     	; 0x3376 <vTaskUSARTLog+0x28>
    338a:	86 ec       	ldi	r24, 0xC6	; 198
    338c:	90 e0       	ldi	r25, 0x00	; 0
    338e:	29 81       	ldd	r18, Y+1	; 0x01
    3390:	fc 01       	movw	r30, r24
    3392:	20 83       	st	Z, r18
    3394:	e3 cf       	rjmp	.-58     	; 0x335c <vTaskUSARTLog+0xe>

00003396 <USART_GetChar>:
    3396:	cf 93       	push	r28
    3398:	df 93       	push	r29
    339a:	1f 92       	push	r1
    339c:	cd b7       	in	r28, 0x3d	; 61
    339e:	de b7       	in	r29, 0x3e	; 62
    33a0:	80 91 be 1a 	lds	r24, 0x1ABE
    33a4:	90 91 bf 1a 	lds	r25, 0x1ABF
    33a8:	20 e0       	ldi	r18, 0x00	; 0
    33aa:	41 e0       	ldi	r20, 0x01	; 1
    33ac:	50 e0       	ldi	r21, 0x00	; 0
    33ae:	be 01       	movw	r22, r28
    33b0:	6f 5f       	subi	r22, 0xFF	; 255
    33b2:	7f 4f       	sbci	r23, 0xFF	; 255
    33b4:	0e 94 86 0d 	call	0x1b0c	; 0x1b0c <xQueueGenericReceive>
    33b8:	81 30       	cpi	r24, 0x01	; 1
    33ba:	11 f4       	brne	.+4      	; 0x33c0 <USART_GetChar+0x2a>
    33bc:	89 81       	ldd	r24, Y+1	; 0x01
    33be:	01 c0       	rjmp	.+2      	; 0x33c2 <USART_GetChar+0x2c>
    33c0:	8f ef       	ldi	r24, 0xFF	; 255
    33c2:	0f 90       	pop	r0
    33c4:	df 91       	pop	r29
    33c6:	cf 91       	pop	r28
    33c8:	08 95       	ret

000033ca <vTaskUSARTRead>:
    33ca:	cf 93       	push	r28
    33cc:	df 93       	push	r29
    33ce:	cd b7       	in	r28, 0x3d	; 61
    33d0:	de b7       	in	r29, 0x3e	; 62
    33d2:	c4 55       	subi	r28, 0x54	; 84
    33d4:	d1 09       	sbc	r29, r1
    33d6:	0f b6       	in	r0, 0x3f	; 63
    33d8:	f8 94       	cli
    33da:	de bf       	out	0x3e, r29	; 62
    33dc:	0f be       	out	0x3f, r0	; 63
    33de:	cd bf       	out	0x3d, r28	; 61
    33e0:	9e 01       	movw	r18, r28
    33e2:	2d 5a       	subi	r18, 0xAD	; 173
    33e4:	3f 4f       	sbci	r19, 0xFF	; 255
    33e6:	f9 01       	movw	r30, r18
    33e8:	91 83       	std	Z+1, r25	; 0x01
    33ea:	80 83       	st	Z, r24
    33ec:	85 e2       	ldi	r24, 0x25	; 37
    33ee:	90 e0       	ldi	r25, 0x00	; 0
    33f0:	fc 01       	movw	r30, r24
    33f2:	10 82       	st	Z, r1
    33f4:	19 82       	std	Y+1, r1	; 0x01
    33f6:	1b 82       	std	Y+3, r1	; 0x03
    33f8:	1a 82       	std	Y+2, r1	; 0x02
    33fa:	29 c0       	rjmp	.+82     	; 0x344e <vTaskUSARTRead+0x84>
    33fc:	0e 94 cb 19 	call	0x3396	; 0x3396 <USART_GetChar>
    3400:	8c 83       	std	Y+4, r24	; 0x04
    3402:	8c 81       	ldd	r24, Y+4	; 0x04
    3404:	8f 3f       	cpi	r24, 0xFF	; 255
    3406:	81 f0       	breq	.+32     	; 0x3428 <vTaskUSARTRead+0x5e>
    3408:	89 81       	ldd	r24, Y+1	; 0x01
    340a:	99 27       	eor	r25, r25
    340c:	87 fd       	sbrc	r24, 7
    340e:	90 95       	com	r25
    3410:	9e 01       	movw	r18, r28
    3412:	2a 5f       	subi	r18, 0xFA	; 250
    3414:	3f 4f       	sbci	r19, 0xFF	; 255
    3416:	82 0f       	add	r24, r18
    3418:	93 1f       	adc	r25, r19
    341a:	2c 81       	ldd	r18, Y+4	; 0x04
    341c:	fc 01       	movw	r30, r24
    341e:	20 83       	st	Z, r18
    3420:	89 81       	ldd	r24, Y+1	; 0x01
    3422:	8f 5f       	subi	r24, 0xFF	; 255
    3424:	89 83       	std	Y+1, r24	; 0x01
    3426:	0a c0       	rjmp	.+20     	; 0x343c <vTaskUSARTRead+0x72>
    3428:	8a 81       	ldd	r24, Y+2	; 0x02
    342a:	9b 81       	ldd	r25, Y+3	; 0x03
    342c:	01 96       	adiw	r24, 0x01	; 1
    342e:	9b 83       	std	Y+3, r25	; 0x03
    3430:	8a 83       	std	Y+2, r24	; 0x02
    3432:	85 e2       	ldi	r24, 0x25	; 37
    3434:	90 e0       	ldi	r25, 0x00	; 0
    3436:	2f ef       	ldi	r18, 0xFF	; 255
    3438:	fc 01       	movw	r30, r24
    343a:	20 83       	st	Z, r18
    343c:	8a 81       	ldd	r24, Y+2	; 0x02
    343e:	9b 81       	ldd	r25, Y+3	; 0x03
    3440:	81 35       	cpi	r24, 0x51	; 81
    3442:	f3 ec       	ldi	r31, 0xC3	; 195
    3444:	9f 07       	cpc	r25, r31
    3446:	18 f0       	brcs	.+6      	; 0x344e <vTaskUSARTRead+0x84>
    3448:	1b 82       	std	Y+3, r1	; 0x03
    344a:	1a 82       	std	Y+2, r1	; 0x02
    344c:	19 82       	std	Y+1, r1	; 0x01
    344e:	89 81       	ldd	r24, Y+1	; 0x01
    3450:	84 30       	cpi	r24, 0x04	; 4
    3452:	a4 f2       	brlt	.-88     	; 0x33fc <vTaskUSARTRead+0x32>
    3454:	ce 01       	movw	r24, r28
    3456:	06 96       	adiw	r24, 0x06	; 6
    3458:	63 e0       	ldi	r22, 0x03	; 3
    345a:	0e 94 33 1b 	call	0x3666	; 0x3666 <calcChecksum>
    345e:	98 2f       	mov	r25, r24
    3460:	89 85       	ldd	r24, Y+9	; 0x09
    3462:	98 17       	cp	r25, r24
    3464:	19 f0       	breq	.+6      	; 0x346c <vTaskUSARTRead+0xa2>
    3466:	0e 94 1b 1b 	call	0x3636	; 0x3636 <sendNACK>
    346a:	c4 cf       	rjmp	.-120    	; 0x33f4 <vTaskUSARTRead+0x2a>
    346c:	0e 94 11 1b 	call	0x3622	; 0x3622 <sendACK>
    3470:	19 82       	std	Y+1, r1	; 0x01
    3472:	8e 81       	ldd	r24, Y+6	; 0x06
    3474:	8e 87       	std	Y+14, r24	; 0x0e
    3476:	8f 81       	ldd	r24, Y+7	; 0x07
    3478:	8f 87       	std	Y+15, r24	; 0x0f
    347a:	89 85       	ldd	r24, Y+9	; 0x09
    347c:	88 8b       	std	Y+16, r24	; 0x10
    347e:	88 85       	ldd	r24, Y+8	; 0x08
    3480:	8d 83       	std	Y+5, r24	; 0x05
    3482:	1b 82       	std	Y+3, r1	; 0x03
    3484:	1a 82       	std	Y+2, r1	; 0x02
    3486:	8d 81       	ldd	r24, Y+5	; 0x05
    3488:	88 23       	and	r24, r24
    348a:	09 f4       	brne	.+2      	; 0x348e <vTaskUSARTRead+0xc4>
    348c:	61 c0       	rjmp	.+194    	; 0x3550 <vTaskUSARTRead+0x186>
    348e:	1f c0       	rjmp	.+62     	; 0x34ce <vTaskUSARTRead+0x104>
    3490:	88 ec       	ldi	r24, 0xC8	; 200
    3492:	90 e0       	ldi	r25, 0x00	; 0
    3494:	fc 01       	movw	r30, r24
    3496:	80 81       	ld	r24, Z
    3498:	88 23       	and	r24, r24
    349a:	ac f4       	brge	.+42     	; 0x34c6 <vTaskUSARTRead+0xfc>
    349c:	8e ec       	ldi	r24, 0xCE	; 206
    349e:	90 e0       	ldi	r25, 0x00	; 0
    34a0:	fc 01       	movw	r30, r24
    34a2:	80 81       	ld	r24, Z
    34a4:	8c 83       	std	Y+4, r24	; 0x04
    34a6:	89 81       	ldd	r24, Y+1	; 0x01
    34a8:	99 27       	eor	r25, r25
    34aa:	87 fd       	sbrc	r24, 7
    34ac:	90 95       	com	r25
    34ae:	9e 01       	movw	r18, r28
    34b0:	2a 5f       	subi	r18, 0xFA	; 250
    34b2:	3f 4f       	sbci	r19, 0xFF	; 255
    34b4:	82 0f       	add	r24, r18
    34b6:	93 1f       	adc	r25, r19
    34b8:	2c 81       	ldd	r18, Y+4	; 0x04
    34ba:	fc 01       	movw	r30, r24
    34bc:	20 83       	st	Z, r18
    34be:	89 81       	ldd	r24, Y+1	; 0x01
    34c0:	8f 5f       	subi	r24, 0xFF	; 255
    34c2:	89 83       	std	Y+1, r24	; 0x01
    34c4:	04 c0       	rjmp	.+8      	; 0x34ce <vTaskUSARTRead+0x104>
    34c6:	81 e0       	ldi	r24, 0x01	; 1
    34c8:	90 e0       	ldi	r25, 0x00	; 0
    34ca:	9b 83       	std	Y+3, r25	; 0x03
    34cc:	8a 83       	std	Y+2, r24	; 0x02
    34ce:	89 81       	ldd	r24, Y+1	; 0x01
    34d0:	28 2f       	mov	r18, r24
    34d2:	33 27       	eor	r19, r19
    34d4:	27 fd       	sbrc	r18, 7
    34d6:	30 95       	com	r19
    34d8:	8d 81       	ldd	r24, Y+5	; 0x05
    34da:	99 27       	eor	r25, r25
    34dc:	87 fd       	sbrc	r24, 7
    34de:	90 95       	com	r25
    34e0:	01 96       	adiw	r24, 0x01	; 1
    34e2:	28 17       	cp	r18, r24
    34e4:	39 07       	cpc	r19, r25
    34e6:	2c f4       	brge	.+10     	; 0x34f2 <vTaskUSARTRead+0x128>
    34e8:	8a 81       	ldd	r24, Y+2	; 0x02
    34ea:	9b 81       	ldd	r25, Y+3	; 0x03
    34ec:	82 33       	cpi	r24, 0x32	; 50
    34ee:	91 05       	cpc	r25, r1
    34f0:	78 f2       	brcs	.-98     	; 0x3490 <vTaskUSARTRead+0xc6>
    34f2:	8a 81       	ldd	r24, Y+2	; 0x02
    34f4:	9b 81       	ldd	r25, Y+3	; 0x03
    34f6:	82 33       	cpi	r24, 0x32	; 50
    34f8:	91 05       	cpc	r25, r1
    34fa:	08 f0       	brcs	.+2      	; 0x34fe <vTaskUSARTRead+0x134>
    34fc:	29 c0       	rjmp	.+82     	; 0x3550 <vTaskUSARTRead+0x186>
    34fe:	2d 81       	ldd	r18, Y+5	; 0x05
    3500:	ce 01       	movw	r24, r28
    3502:	06 96       	adiw	r24, 0x06	; 6
    3504:	62 2f       	mov	r22, r18
    3506:	0e 94 33 1b 	call	0x3666	; 0x3666 <calcChecksum>
    350a:	48 2f       	mov	r20, r24
    350c:	8d 81       	ldd	r24, Y+5	; 0x05
    350e:	99 27       	eor	r25, r25
    3510:	87 fd       	sbrc	r24, 7
    3512:	90 95       	com	r25
    3514:	9e 01       	movw	r18, r28
    3516:	2a 5f       	subi	r18, 0xFA	; 250
    3518:	3f 4f       	sbci	r19, 0xFF	; 255
    351a:	82 0f       	add	r24, r18
    351c:	93 1f       	adc	r25, r19
    351e:	fc 01       	movw	r30, r24
    3520:	80 81       	ld	r24, Z
    3522:	48 17       	cp	r20, r24
    3524:	21 f0       	breq	.+8      	; 0x352e <vTaskUSARTRead+0x164>
    3526:	0e 94 1b 1b 	call	0x3636	; 0x3636 <sendNACK>
    352a:	19 82       	std	Y+1, r1	; 0x01
    352c:	b0 cf       	rjmp	.-160    	; 0x348e <vTaskUSARTRead+0xc4>
    352e:	0e 94 11 1b 	call	0x3622	; 0x3622 <sendACK>
    3532:	8d 81       	ldd	r24, Y+5	; 0x05
    3534:	48 2f       	mov	r20, r24
    3536:	55 27       	eor	r21, r21
    3538:	47 fd       	sbrc	r20, 7
    353a:	50 95       	com	r21
    353c:	9e 01       	movw	r18, r28
    353e:	2a 5f       	subi	r18, 0xFA	; 250
    3540:	3f 4f       	sbci	r19, 0xFF	; 255
    3542:	ce 01       	movw	r24, r28
    3544:	0e 96       	adiw	r24, 0x0e	; 14
    3546:	03 96       	adiw	r24, 0x03	; 3
    3548:	b9 01       	movw	r22, r18
    354a:	0e 94 36 20 	call	0x406c	; 0x406c <memcpy>
    354e:	00 00       	nop
    3550:	9e 01       	movw	r18, r28
    3552:	2f 5c       	subi	r18, 0xCF	; 207
    3554:	3f 4f       	sbci	r19, 0xFF	; 255
    3556:	ce 01       	movw	r24, r28
    3558:	0e 96       	adiw	r24, 0x0e	; 14
    355a:	b9 01       	movw	r22, r18
    355c:	0e 94 2d 1d 	call	0x3a5a	; 0x3a5a <processCommand>
    3560:	ce 01       	movw	r24, r28
    3562:	c1 96       	adiw	r24, 0x31	; 49
    3564:	0e 94 b5 1a 	call	0x356a	; 0x356a <sendResponse>
    3568:	45 cf       	rjmp	.-374    	; 0x33f4 <vTaskUSARTRead+0x2a>

0000356a <sendResponse>:
    356a:	cf 93       	push	r28
    356c:	df 93       	push	r29
    356e:	00 d0       	rcall	.+0      	; 0x3570 <sendResponse+0x6>
    3570:	00 d0       	rcall	.+0      	; 0x3572 <sendResponse+0x8>
    3572:	cd b7       	in	r28, 0x3d	; 61
    3574:	de b7       	in	r29, 0x3e	; 62
    3576:	9e 83       	std	Y+6, r25	; 0x06
    3578:	8d 83       	std	Y+5, r24	; 0x05
    357a:	8d 81       	ldd	r24, Y+5	; 0x05
    357c:	9e 81       	ldd	r25, Y+6	; 0x06
    357e:	fc 01       	movw	r30, r24
    3580:	80 81       	ld	r24, Z
    3582:	0e 94 19 19 	call	0x3232	; 0x3232 <USART_AddToQueue>
    3586:	8d 81       	ldd	r24, Y+5	; 0x05
    3588:	9e 81       	ldd	r25, Y+6	; 0x06
    358a:	fc 01       	movw	r30, r24
    358c:	81 81       	ldd	r24, Z+1	; 0x01
    358e:	0e 94 19 19 	call	0x3232	; 0x3232 <USART_AddToQueue>
    3592:	8d 81       	ldd	r24, Y+5	; 0x05
    3594:	9e 81       	ldd	r25, Y+6	; 0x06
    3596:	fc 01       	movw	r30, r24
    3598:	80 81       	ld	r24, Z
    359a:	8b 83       	std	Y+3, r24	; 0x03
    359c:	8d 81       	ldd	r24, Y+5	; 0x05
    359e:	9e 81       	ldd	r25, Y+6	; 0x06
    35a0:	fc 01       	movw	r30, r24
    35a2:	81 81       	ldd	r24, Z+1	; 0x01
    35a4:	8c 83       	std	Y+4, r24	; 0x04
    35a6:	ce 01       	movw	r24, r28
    35a8:	03 96       	adiw	r24, 0x03	; 3
    35aa:	62 e0       	ldi	r22, 0x02	; 2
    35ac:	0e 94 33 1b 	call	0x3666	; 0x3666 <calcChecksum>
    35b0:	0e 94 19 19 	call	0x3232	; 0x3232 <USART_AddToQueue>
    35b4:	0e 94 25 1b 	call	0x364a	; 0x364a <waitForChecksum>
    35b8:	88 23       	and	r24, r24
    35ba:	21 f4       	brne	.+8      	; 0x35c4 <sendResponse+0x5a>
    35bc:	00 00       	nop
    35be:	1a 82       	std	Y+2, r1	; 0x02
    35c0:	19 82       	std	Y+1, r1	; 0x01
    35c2:	11 c0       	rjmp	.+34     	; 0x35e6 <sendResponse+0x7c>
    35c4:	da cf       	rjmp	.-76     	; 0x357a <sendResponse+0x10>
    35c6:	2d 81       	ldd	r18, Y+5	; 0x05
    35c8:	3e 81       	ldd	r19, Y+6	; 0x06
    35ca:	89 81       	ldd	r24, Y+1	; 0x01
    35cc:	9a 81       	ldd	r25, Y+2	; 0x02
    35ce:	82 0f       	add	r24, r18
    35d0:	93 1f       	adc	r25, r19
    35d2:	02 96       	adiw	r24, 0x02	; 2
    35d4:	fc 01       	movw	r30, r24
    35d6:	80 81       	ld	r24, Z
    35d8:	0e 94 19 19 	call	0x3232	; 0x3232 <USART_AddToQueue>
    35dc:	89 81       	ldd	r24, Y+1	; 0x01
    35de:	9a 81       	ldd	r25, Y+2	; 0x02
    35e0:	01 96       	adiw	r24, 0x01	; 1
    35e2:	9a 83       	std	Y+2, r25	; 0x02
    35e4:	89 83       	std	Y+1, r24	; 0x01
    35e6:	8d 81       	ldd	r24, Y+5	; 0x05
    35e8:	9e 81       	ldd	r25, Y+6	; 0x06
    35ea:	fc 01       	movw	r30, r24
    35ec:	81 81       	ldd	r24, Z+1	; 0x01
    35ee:	28 2f       	mov	r18, r24
    35f0:	33 27       	eor	r19, r19
    35f2:	27 fd       	sbrc	r18, 7
    35f4:	30 95       	com	r19
    35f6:	89 81       	ldd	r24, Y+1	; 0x01
    35f8:	9a 81       	ldd	r25, Y+2	; 0x02
    35fa:	82 17       	cp	r24, r18
    35fc:	93 07       	cpc	r25, r19
    35fe:	1c f3       	brlt	.-58     	; 0x35c6 <sendResponse+0x5c>
    3600:	8d 81       	ldd	r24, Y+5	; 0x05
    3602:	9e 81       	ldd	r25, Y+6	; 0x06
    3604:	02 96       	adiw	r24, 0x02	; 2
    3606:	6c e0       	ldi	r22, 0x0C	; 12
    3608:	0e 94 33 1b 	call	0x3666	; 0x3666 <calcChecksum>
    360c:	0e 94 19 19 	call	0x3232	; 0x3232 <USART_AddToQueue>
    3610:	26 96       	adiw	r28, 0x06	; 6
    3612:	0f b6       	in	r0, 0x3f	; 63
    3614:	f8 94       	cli
    3616:	de bf       	out	0x3e, r29	; 62
    3618:	0f be       	out	0x3f, r0	; 63
    361a:	cd bf       	out	0x3d, r28	; 61
    361c:	df 91       	pop	r29
    361e:	cf 91       	pop	r28
    3620:	08 95       	ret

00003622 <sendACK>:
    3622:	cf 93       	push	r28
    3624:	df 93       	push	r29
    3626:	cd b7       	in	r28, 0x3d	; 61
    3628:	de b7       	in	r29, 0x3e	; 62
    362a:	80 e8       	ldi	r24, 0x80	; 128
    362c:	0e 94 19 19 	call	0x3232	; 0x3232 <USART_AddToQueue>
    3630:	df 91       	pop	r29
    3632:	cf 91       	pop	r28
    3634:	08 95       	ret

00003636 <sendNACK>:
    3636:	cf 93       	push	r28
    3638:	df 93       	push	r29
    363a:	cd b7       	in	r28, 0x3d	; 61
    363c:	de b7       	in	r29, 0x3e	; 62
    363e:	80 e0       	ldi	r24, 0x00	; 0
    3640:	0e 94 19 19 	call	0x3232	; 0x3232 <USART_AddToQueue>
    3644:	df 91       	pop	r29
    3646:	cf 91       	pop	r28
    3648:	08 95       	ret

0000364a <waitForChecksum>:
    364a:	cf 93       	push	r28
    364c:	df 93       	push	r29
    364e:	cd b7       	in	r28, 0x3d	; 61
    3650:	de b7       	in	r29, 0x3e	; 62
    3652:	0e 94 cb 19 	call	0x3396	; 0x3396 <USART_GetChar>
    3656:	8f 3f       	cpi	r24, 0xFF	; 255
    3658:	11 f4       	brne	.+4      	; 0x365e <waitForChecksum+0x14>
    365a:	80 e0       	ldi	r24, 0x00	; 0
    365c:	01 c0       	rjmp	.+2      	; 0x3660 <waitForChecksum+0x16>
    365e:	8f ef       	ldi	r24, 0xFF	; 255
    3660:	df 91       	pop	r29
    3662:	cf 91       	pop	r28
    3664:	08 95       	ret

00003666 <calcChecksum>:
    3666:	cf 93       	push	r28
    3668:	df 93       	push	r29
    366a:	00 d0       	rcall	.+0      	; 0x366c <calcChecksum+0x6>
    366c:	1f 92       	push	r1
    366e:	cd b7       	in	r28, 0x3d	; 61
    3670:	de b7       	in	r29, 0x3e	; 62
    3672:	9b 83       	std	Y+3, r25	; 0x03
    3674:	8a 83       	std	Y+2, r24	; 0x02
    3676:	6c 83       	std	Y+4, r22	; 0x04
    3678:	19 82       	std	Y+1, r1	; 0x01
    367a:	0c c0       	rjmp	.+24     	; 0x3694 <calcChecksum+0x2e>
    367c:	8a 81       	ldd	r24, Y+2	; 0x02
    367e:	9b 81       	ldd	r25, Y+3	; 0x03
    3680:	9c 01       	movw	r18, r24
    3682:	2f 5f       	subi	r18, 0xFF	; 255
    3684:	3f 4f       	sbci	r19, 0xFF	; 255
    3686:	3b 83       	std	Y+3, r19	; 0x03
    3688:	2a 83       	std	Y+2, r18	; 0x02
    368a:	fc 01       	movw	r30, r24
    368c:	80 81       	ld	r24, Z
    368e:	99 81       	ldd	r25, Y+1	; 0x01
    3690:	89 0f       	add	r24, r25
    3692:	89 83       	std	Y+1, r24	; 0x01
    3694:	8c 81       	ldd	r24, Y+4	; 0x04
    3696:	9f ef       	ldi	r25, 0xFF	; 255
    3698:	98 0f       	add	r25, r24
    369a:	9c 83       	std	Y+4, r25	; 0x04
    369c:	88 23       	and	r24, r24
    369e:	71 f7       	brne	.-36     	; 0x367c <calcChecksum+0x16>
    36a0:	89 81       	ldd	r24, Y+1	; 0x01
    36a2:	0f 90       	pop	r0
    36a4:	0f 90       	pop	r0
    36a6:	0f 90       	pop	r0
    36a8:	0f 90       	pop	r0
    36aa:	df 91       	pop	r29
    36ac:	cf 91       	pop	r28
    36ae:	08 95       	ret

000036b0 <commandIntegCheck>:
    36b0:	df 93       	push	r29
    36b2:	cf 93       	push	r28
    36b4:	0f 92       	push	r0
    36b6:	0f 92       	push	r0
    36b8:	cd b7       	in	r28, 0x3d	; 61
    36ba:	de b7       	in	r29, 0x3e	; 62
    36bc:	9a 83       	std	Y+2, r25	; 0x02
    36be:	89 83       	std	Y+1, r24	; 0x01
    36c0:	81 e0       	ldi	r24, 0x01	; 1
    36c2:	0f 90       	pop	r0
    36c4:	0f 90       	pop	r0
    36c6:	cf 91       	pop	r28
    36c8:	df 91       	pop	r29
    36ca:	08 95       	ret

000036cc <processUltrasonicCommand>:
    36cc:	df 93       	push	r29
    36ce:	cf 93       	push	r28
    36d0:	cd b7       	in	r28, 0x3d	; 61
    36d2:	de b7       	in	r29, 0x3e	; 62
    36d4:	29 97       	sbiw	r28, 0x09	; 9
    36d6:	0f b6       	in	r0, 0x3f	; 63
    36d8:	f8 94       	cli
    36da:	de bf       	out	0x3e, r29	; 62
    36dc:	0f be       	out	0x3f, r0	; 63
    36de:	cd bf       	out	0x3d, r28	; 61
    36e0:	89 83       	std	Y+1, r24	; 0x01
    36e2:	7b 83       	std	Y+3, r23	; 0x03
    36e4:	6a 83       	std	Y+2, r22	; 0x02
    36e6:	5d 83       	std	Y+5, r21	; 0x05
    36e8:	4c 83       	std	Y+4, r20	; 0x04
    36ea:	3f 83       	std	Y+7, r19	; 0x07
    36ec:	2e 83       	std	Y+6, r18	; 0x06
    36ee:	89 81       	ldd	r24, Y+1	; 0x01
    36f0:	28 2f       	mov	r18, r24
    36f2:	33 27       	eor	r19, r19
    36f4:	27 fd       	sbrc	r18, 7
    36f6:	30 95       	com	r19
    36f8:	39 87       	std	Y+9, r19	; 0x09
    36fa:	28 87       	std	Y+8, r18	; 0x08
    36fc:	88 85       	ldd	r24, Y+8	; 0x08
    36fe:	99 85       	ldd	r25, Y+9	; 0x09
    3700:	82 30       	cpi	r24, 0x02	; 2
    3702:	91 05       	cpc	r25, r1
    3704:	99 f0       	breq	.+38     	; 0x372c <processUltrasonicCommand+0x60>
    3706:	28 85       	ldd	r18, Y+8	; 0x08
    3708:	39 85       	ldd	r19, Y+9	; 0x09
    370a:	23 30       	cpi	r18, 0x03	; 3
    370c:	31 05       	cpc	r19, r1
    370e:	b9 f0       	breq	.+46     	; 0x373e <processUltrasonicCommand+0x72>
    3710:	88 85       	ldd	r24, Y+8	; 0x08
    3712:	99 85       	ldd	r25, Y+9	; 0x09
    3714:	81 30       	cpi	r24, 0x01	; 1
    3716:	91 05       	cpc	r25, r1
    3718:	d1 f4       	brne	.+52     	; 0x374e <processUltrasonicCommand+0x82>
    371a:	8e 81       	ldd	r24, Y+6	; 0x06
    371c:	9f 81       	ldd	r25, Y+7	; 0x07
    371e:	0e 94 eb 1e 	call	0x3dd6	; 0x3dd6 <getAllSensors>
    3722:	ec 81       	ldd	r30, Y+4	; 0x04
    3724:	fd 81       	ldd	r31, Y+5	; 0x05
    3726:	8c e0       	ldi	r24, 0x0C	; 12
    3728:	80 83       	st	Z, r24
    372a:	11 c0       	rjmp	.+34     	; 0x374e <processUltrasonicCommand+0x82>
    372c:	ea 81       	ldd	r30, Y+2	; 0x02
    372e:	fb 81       	ldd	r31, Y+3	; 0x03
    3730:	80 81       	ld	r24, Z
    3732:	2e 81       	ldd	r18, Y+6	; 0x06
    3734:	3f 81       	ldd	r19, Y+7	; 0x07
    3736:	b9 01       	movw	r22, r18
    3738:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <getCertainSensor>
    373c:	08 c0       	rjmp	.+16     	; 0x374e <processUltrasonicCommand+0x82>
    373e:	ea 81       	ldd	r30, Y+2	; 0x02
    3740:	fb 81       	ldd	r31, Y+3	; 0x03
    3742:	80 81       	ld	r24, Z
    3744:	2e 81       	ldd	r18, Y+6	; 0x06
    3746:	3f 81       	ldd	r19, Y+7	; 0x07
    3748:	b9 01       	movw	r22, r18
    374a:	0e 94 41 1f 	call	0x3e82	; 0x3e82 <getSensorGroup>
    374e:	81 e0       	ldi	r24, 0x01	; 1
    3750:	29 96       	adiw	r28, 0x09	; 9
    3752:	0f b6       	in	r0, 0x3f	; 63
    3754:	f8 94       	cli
    3756:	de bf       	out	0x3e, r29	; 62
    3758:	0f be       	out	0x3f, r0	; 63
    375a:	cd bf       	out	0x3d, r28	; 61
    375c:	cf 91       	pop	r28
    375e:	df 91       	pop	r29
    3760:	08 95       	ret

00003762 <processSpeedCommand>:
    3762:	df 93       	push	r29
    3764:	cf 93       	push	r28
    3766:	cd b7       	in	r28, 0x3d	; 61
    3768:	de b7       	in	r29, 0x3e	; 62
    376a:	27 97       	sbiw	r28, 0x07	; 7
    376c:	0f b6       	in	r0, 0x3f	; 63
    376e:	f8 94       	cli
    3770:	de bf       	out	0x3e, r29	; 62
    3772:	0f be       	out	0x3f, r0	; 63
    3774:	cd bf       	out	0x3d, r28	; 61
    3776:	89 83       	std	Y+1, r24	; 0x01
    3778:	7b 83       	std	Y+3, r23	; 0x03
    377a:	6a 83       	std	Y+2, r22	; 0x02
    377c:	5d 83       	std	Y+5, r21	; 0x05
    377e:	4c 83       	std	Y+4, r20	; 0x04
    3780:	89 81       	ldd	r24, Y+1	; 0x01
    3782:	28 2f       	mov	r18, r24
    3784:	33 27       	eor	r19, r19
    3786:	27 fd       	sbrc	r18, 7
    3788:	30 95       	com	r19
    378a:	3f 83       	std	Y+7, r19	; 0x07
    378c:	2e 83       	std	Y+6, r18	; 0x06
    378e:	8e 81       	ldd	r24, Y+6	; 0x06
    3790:	9f 81       	ldd	r25, Y+7	; 0x07
    3792:	00 97       	sbiw	r24, 0x00	; 0
    3794:	31 f0       	breq	.+12     	; 0x37a2 <processSpeedCommand+0x40>
    3796:	2e 81       	ldd	r18, Y+6	; 0x06
    3798:	3f 81       	ldd	r19, Y+7	; 0x07
    379a:	21 30       	cpi	r18, 0x01	; 1
    379c:	31 05       	cpc	r19, r1
    379e:	31 f0       	breq	.+12     	; 0x37ac <processSpeedCommand+0x4a>
    37a0:	0d c0       	rjmp	.+26     	; 0x37bc <processSpeedCommand+0x5a>
    37a2:	8c 81       	ldd	r24, Y+4	; 0x04
    37a4:	9d 81       	ldd	r25, Y+5	; 0x05
    37a6:	0e 94 ae 1f 	call	0x3f5c	; 0x3f5c <getSpeed>
    37aa:	08 c0       	rjmp	.+16     	; 0x37bc <processSpeedCommand+0x5a>
    37ac:	ea 81       	ldd	r30, Y+2	; 0x02
    37ae:	fb 81       	ldd	r31, Y+3	; 0x03
    37b0:	80 81       	ld	r24, Z
    37b2:	99 27       	eor	r25, r25
    37b4:	87 fd       	sbrc	r24, 7
    37b6:	90 95       	com	r25
    37b8:	0e 94 bf 1f 	call	0x3f7e	; 0x3f7e <setSpeed>
    37bc:	81 e0       	ldi	r24, 0x01	; 1
    37be:	27 96       	adiw	r28, 0x07	; 7
    37c0:	0f b6       	in	r0, 0x3f	; 63
    37c2:	f8 94       	cli
    37c4:	de bf       	out	0x3e, r29	; 62
    37c6:	0f be       	out	0x3f, r0	; 63
    37c8:	cd bf       	out	0x3d, r28	; 61
    37ca:	cf 91       	pop	r28
    37cc:	df 91       	pop	r29
    37ce:	08 95       	ret

000037d0 <processSteeringCommand>:
    37d0:	df 93       	push	r29
    37d2:	cf 93       	push	r28
    37d4:	cd b7       	in	r28, 0x3d	; 61
    37d6:	de b7       	in	r29, 0x3e	; 62
    37d8:	27 97       	sbiw	r28, 0x07	; 7
    37da:	0f b6       	in	r0, 0x3f	; 63
    37dc:	f8 94       	cli
    37de:	de bf       	out	0x3e, r29	; 62
    37e0:	0f be       	out	0x3f, r0	; 63
    37e2:	cd bf       	out	0x3d, r28	; 61
    37e4:	89 83       	std	Y+1, r24	; 0x01
    37e6:	7b 83       	std	Y+3, r23	; 0x03
    37e8:	6a 83       	std	Y+2, r22	; 0x02
    37ea:	5d 83       	std	Y+5, r21	; 0x05
    37ec:	4c 83       	std	Y+4, r20	; 0x04
    37ee:	89 81       	ldd	r24, Y+1	; 0x01
    37f0:	28 2f       	mov	r18, r24
    37f2:	33 27       	eor	r19, r19
    37f4:	27 fd       	sbrc	r18, 7
    37f6:	30 95       	com	r19
    37f8:	3f 83       	std	Y+7, r19	; 0x07
    37fa:	2e 83       	std	Y+6, r18	; 0x06
    37fc:	8e 81       	ldd	r24, Y+6	; 0x06
    37fe:	9f 81       	ldd	r25, Y+7	; 0x07
    3800:	82 30       	cpi	r24, 0x02	; 2
    3802:	91 05       	cpc	r25, r1
    3804:	41 f1       	breq	.+80     	; 0x3856 <processSteeringCommand+0x86>
    3806:	2e 81       	ldd	r18, Y+6	; 0x06
    3808:	3f 81       	ldd	r19, Y+7	; 0x07
    380a:	23 30       	cpi	r18, 0x03	; 3
    380c:	31 05       	cpc	r19, r1
    380e:	54 f4       	brge	.+20     	; 0x3824 <processSteeringCommand+0x54>
    3810:	8e 81       	ldd	r24, Y+6	; 0x06
    3812:	9f 81       	ldd	r25, Y+7	; 0x07
    3814:	00 97       	sbiw	r24, 0x00	; 0
    3816:	89 f0       	breq	.+34     	; 0x383a <processSteeringCommand+0x6a>
    3818:	2e 81       	ldd	r18, Y+6	; 0x06
    381a:	3f 81       	ldd	r19, Y+7	; 0x07
    381c:	21 30       	cpi	r18, 0x01	; 1
    381e:	31 05       	cpc	r19, r1
    3820:	a9 f0       	breq	.+42     	; 0x384c <processSteeringCommand+0x7c>
    3822:	51 c0       	rjmp	.+162    	; 0x38c6 <processSteeringCommand+0xf6>
    3824:	8e 81       	ldd	r24, Y+6	; 0x06
    3826:	9f 81       	ldd	r25, Y+7	; 0x07
    3828:	83 30       	cpi	r24, 0x03	; 3
    382a:	91 05       	cpc	r25, r1
    382c:	c9 f0       	breq	.+50     	; 0x3860 <processSteeringCommand+0x90>
    382e:	2e 81       	ldd	r18, Y+6	; 0x06
    3830:	3f 81       	ldd	r19, Y+7	; 0x07
    3832:	24 30       	cpi	r18, 0x04	; 4
    3834:	31 05       	cpc	r19, r1
    3836:	99 f1       	breq	.+102    	; 0x389e <processSteeringCommand+0xce>
    3838:	46 c0       	rjmp	.+140    	; 0x38c6 <processSteeringCommand+0xf6>
    383a:	ea 81       	ldd	r30, Y+2	; 0x02
    383c:	fb 81       	ldd	r31, Y+3	; 0x03
    383e:	80 81       	ld	r24, Z
    3840:	99 27       	eor	r25, r25
    3842:	87 fd       	sbrc	r24, 7
    3844:	90 95       	com	r25
    3846:	0e 94 ca 1f 	call	0x3f94	; 0x3f94 <setAngle>
    384a:	3d c0       	rjmp	.+122    	; 0x38c6 <processSteeringCommand+0xf6>
    384c:	8c 81       	ldd	r24, Y+4	; 0x04
    384e:	9d 81       	ldd	r25, Y+5	; 0x05
    3850:	0e 94 d5 1f 	call	0x3faa	; 0x3faa <getAngle>
    3854:	38 c0       	rjmp	.+112    	; 0x38c6 <processSteeringCommand+0xf6>
    3856:	8c 81       	ldd	r24, Y+4	; 0x04
    3858:	9d 81       	ldd	r25, Y+5	; 0x05
    385a:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <getDesiredAngle>
    385e:	33 c0       	rjmp	.+102    	; 0x38c6 <processSteeringCommand+0xf6>
    3860:	ea 81       	ldd	r30, Y+2	; 0x02
    3862:	fb 81       	ldd	r31, Y+3	; 0x03
    3864:	80 81       	ld	r24, Z
    3866:	68 2f       	mov	r22, r24
    3868:	77 27       	eor	r23, r23
    386a:	67 fd       	sbrc	r22, 7
    386c:	70 95       	com	r23
    386e:	8a 81       	ldd	r24, Y+2	; 0x02
    3870:	9b 81       	ldd	r25, Y+3	; 0x03
    3872:	fc 01       	movw	r30, r24
    3874:	31 96       	adiw	r30, 0x01	; 1
    3876:	80 81       	ld	r24, Z
    3878:	48 2f       	mov	r20, r24
    387a:	55 27       	eor	r21, r21
    387c:	47 fd       	sbrc	r20, 7
    387e:	50 95       	com	r21
    3880:	8a 81       	ldd	r24, Y+2	; 0x02
    3882:	9b 81       	ldd	r25, Y+3	; 0x03
    3884:	fc 01       	movw	r30, r24
    3886:	32 96       	adiw	r30, 0x02	; 2
    3888:	80 81       	ld	r24, Z
    388a:	28 2f       	mov	r18, r24
    388c:	33 27       	eor	r19, r19
    388e:	27 fd       	sbrc	r18, 7
    3890:	30 95       	com	r19
    3892:	cb 01       	movw	r24, r22
    3894:	ba 01       	movw	r22, r20
    3896:	a9 01       	movw	r20, r18
    3898:	0e 94 f7 1f 	call	0x3fee	; 0x3fee <changePID>
    389c:	14 c0       	rjmp	.+40     	; 0x38c6 <processSteeringCommand+0xf6>
    389e:	ea 81       	ldd	r30, Y+2	; 0x02
    38a0:	fb 81       	ldd	r31, Y+3	; 0x03
    38a2:	80 81       	ld	r24, Z
    38a4:	48 2f       	mov	r20, r24
    38a6:	55 27       	eor	r21, r21
    38a8:	47 fd       	sbrc	r20, 7
    38aa:	50 95       	com	r21
    38ac:	8a 81       	ldd	r24, Y+2	; 0x02
    38ae:	9b 81       	ldd	r25, Y+3	; 0x03
    38b0:	fc 01       	movw	r30, r24
    38b2:	31 96       	adiw	r30, 0x01	; 1
    38b4:	80 81       	ld	r24, Z
    38b6:	28 2f       	mov	r18, r24
    38b8:	33 27       	eor	r19, r19
    38ba:	27 fd       	sbrc	r18, 7
    38bc:	30 95       	com	r19
    38be:	ca 01       	movw	r24, r20
    38c0:	b9 01       	movw	r22, r18
    38c2:	0e 94 06 20 	call	0x400c	; 0x400c <setLimits>
    38c6:	81 e0       	ldi	r24, 0x01	; 1
    38c8:	27 96       	adiw	r28, 0x07	; 7
    38ca:	0f b6       	in	r0, 0x3f	; 63
    38cc:	f8 94       	cli
    38ce:	de bf       	out	0x3e, r29	; 62
    38d0:	0f be       	out	0x3f, r0	; 63
    38d2:	cd bf       	out	0x3d, r28	; 61
    38d4:	cf 91       	pop	r28
    38d6:	df 91       	pop	r29
    38d8:	08 95       	ret

000038da <processFNRCommand>:
    38da:	df 93       	push	r29
    38dc:	cf 93       	push	r28
    38de:	cd b7       	in	r28, 0x3d	; 61
    38e0:	de b7       	in	r29, 0x3e	; 62
    38e2:	28 97       	sbiw	r28, 0x08	; 8
    38e4:	0f b6       	in	r0, 0x3f	; 63
    38e6:	f8 94       	cli
    38e8:	de bf       	out	0x3e, r29	; 62
    38ea:	0f be       	out	0x3f, r0	; 63
    38ec:	cd bf       	out	0x3d, r28	; 61
    38ee:	89 83       	std	Y+1, r24	; 0x01
    38f0:	7b 83       	std	Y+3, r23	; 0x03
    38f2:	6a 83       	std	Y+2, r22	; 0x02
    38f4:	5d 83       	std	Y+5, r21	; 0x05
    38f6:	4c 83       	std	Y+4, r20	; 0x04
    38f8:	89 81       	ldd	r24, Y+1	; 0x01
    38fa:	28 2f       	mov	r18, r24
    38fc:	33 27       	eor	r19, r19
    38fe:	27 fd       	sbrc	r18, 7
    3900:	30 95       	com	r19
    3902:	3f 83       	std	Y+7, r19	; 0x07
    3904:	2e 83       	std	Y+6, r18	; 0x06
    3906:	8e 81       	ldd	r24, Y+6	; 0x06
    3908:	9f 81       	ldd	r25, Y+7	; 0x07
    390a:	00 97       	sbiw	r24, 0x00	; 0
    390c:	31 f0       	breq	.+12     	; 0x391a <processFNRCommand+0x40>
    390e:	2e 81       	ldd	r18, Y+6	; 0x06
    3910:	3f 81       	ldd	r19, Y+7	; 0x07
    3912:	21 30       	cpi	r18, 0x01	; 1
    3914:	31 05       	cpc	r19, r1
    3916:	51 f0       	breq	.+20     	; 0x392c <processFNRCommand+0x52>
    3918:	0d c0       	rjmp	.+26     	; 0x3934 <processFNRCommand+0x5a>
    391a:	ea 81       	ldd	r30, Y+2	; 0x02
    391c:	fb 81       	ldd	r31, Y+3	; 0x03
    391e:	80 81       	ld	r24, Z
    3920:	99 27       	eor	r25, r25
    3922:	87 fd       	sbrc	r24, 7
    3924:	90 95       	com	r25
    3926:	0e 94 a7 1d 	call	0x3b4e	; 0x3b4e <setFNR>
    392a:	04 c0       	rjmp	.+8      	; 0x3934 <processFNRCommand+0x5a>
    392c:	8c 81       	ldd	r24, Y+4	; 0x04
    392e:	9d 81       	ldd	r25, Y+5	; 0x05
    3930:	0e 94 b2 1d 	call	0x3b64	; 0x3b64 <getFNR>
    3934:	28 96       	adiw	r28, 0x08	; 8
    3936:	0f b6       	in	r0, 0x3f	; 63
    3938:	f8 94       	cli
    393a:	de bf       	out	0x3e, r29	; 62
    393c:	0f be       	out	0x3f, r0	; 63
    393e:	cd bf       	out	0x3d, r28	; 61
    3940:	cf 91       	pop	r28
    3942:	df 91       	pop	r29
    3944:	08 95       	ret

00003946 <processBrakeCommand>:
    3946:	df 93       	push	r29
    3948:	cf 93       	push	r28
    394a:	cd b7       	in	r28, 0x3d	; 61
    394c:	de b7       	in	r29, 0x3e	; 62
    394e:	28 97       	sbiw	r28, 0x08	; 8
    3950:	0f b6       	in	r0, 0x3f	; 63
    3952:	f8 94       	cli
    3954:	de bf       	out	0x3e, r29	; 62
    3956:	0f be       	out	0x3f, r0	; 63
    3958:	cd bf       	out	0x3d, r28	; 61
    395a:	89 83       	std	Y+1, r24	; 0x01
    395c:	7b 83       	std	Y+3, r23	; 0x03
    395e:	6a 83       	std	Y+2, r22	; 0x02
    3960:	5d 83       	std	Y+5, r21	; 0x05
    3962:	4c 83       	std	Y+4, r20	; 0x04
    3964:	89 81       	ldd	r24, Y+1	; 0x01
    3966:	28 2f       	mov	r18, r24
    3968:	33 27       	eor	r19, r19
    396a:	27 fd       	sbrc	r18, 7
    396c:	30 95       	com	r19
    396e:	3f 83       	std	Y+7, r19	; 0x07
    3970:	2e 83       	std	Y+6, r18	; 0x06
    3972:	8e 81       	ldd	r24, Y+6	; 0x06
    3974:	9f 81       	ldd	r25, Y+7	; 0x07
    3976:	00 97       	sbiw	r24, 0x00	; 0
    3978:	31 f0       	breq	.+12     	; 0x3986 <processBrakeCommand+0x40>
    397a:	2e 81       	ldd	r18, Y+6	; 0x06
    397c:	3f 81       	ldd	r19, Y+7	; 0x07
    397e:	21 30       	cpi	r18, 0x01	; 1
    3980:	31 05       	cpc	r19, r1
    3982:	51 f0       	breq	.+20     	; 0x3998 <processBrakeCommand+0x52>
    3984:	0d c0       	rjmp	.+26     	; 0x39a0 <processBrakeCommand+0x5a>
    3986:	ea 81       	ldd	r30, Y+2	; 0x02
    3988:	fb 81       	ldd	r31, Y+3	; 0x03
    398a:	80 81       	ld	r24, Z
    398c:	99 27       	eor	r25, r25
    398e:	87 fd       	sbrc	r24, 7
    3990:	90 95       	com	r25
    3992:	0e 94 8b 1d 	call	0x3b16	; 0x3b16 <setBrake>
    3996:	04 c0       	rjmp	.+8      	; 0x39a0 <processBrakeCommand+0x5a>
    3998:	8c 81       	ldd	r24, Y+4	; 0x04
    399a:	9d 81       	ldd	r25, Y+5	; 0x05
    399c:	0e 94 96 1d 	call	0x3b2c	; 0x3b2c <getBrake>
    39a0:	28 96       	adiw	r28, 0x08	; 8
    39a2:	0f b6       	in	r0, 0x3f	; 63
    39a4:	f8 94       	cli
    39a6:	de bf       	out	0x3e, r29	; 62
    39a8:	0f be       	out	0x3f, r0	; 63
    39aa:	cd bf       	out	0x3d, r28	; 61
    39ac:	cf 91       	pop	r28
    39ae:	df 91       	pop	r29
    39b0:	08 95       	ret

000039b2 <processBatteryCommand>:
    39b2:	df 93       	push	r29
    39b4:	cf 93       	push	r28
    39b6:	cd b7       	in	r28, 0x3d	; 61
    39b8:	de b7       	in	r29, 0x3e	; 62
    39ba:	28 97       	sbiw	r28, 0x08	; 8
    39bc:	0f b6       	in	r0, 0x3f	; 63
    39be:	f8 94       	cli
    39c0:	de bf       	out	0x3e, r29	; 62
    39c2:	0f be       	out	0x3f, r0	; 63
    39c4:	cd bf       	out	0x3d, r28	; 61
    39c6:	89 83       	std	Y+1, r24	; 0x01
    39c8:	7b 83       	std	Y+3, r23	; 0x03
    39ca:	6a 83       	std	Y+2, r22	; 0x02
    39cc:	5d 83       	std	Y+5, r21	; 0x05
    39ce:	4c 83       	std	Y+4, r20	; 0x04
    39d0:	89 81       	ldd	r24, Y+1	; 0x01
    39d2:	28 2f       	mov	r18, r24
    39d4:	33 27       	eor	r19, r19
    39d6:	27 fd       	sbrc	r18, 7
    39d8:	30 95       	com	r19
    39da:	3f 83       	std	Y+7, r19	; 0x07
    39dc:	2e 83       	std	Y+6, r18	; 0x06
    39de:	8e 81       	ldd	r24, Y+6	; 0x06
    39e0:	9f 81       	ldd	r25, Y+7	; 0x07
    39e2:	00 97       	sbiw	r24, 0x00	; 0
    39e4:	31 f0       	breq	.+12     	; 0x39f2 <processBatteryCommand+0x40>
    39e6:	2e 81       	ldd	r18, Y+6	; 0x06
    39e8:	3f 81       	ldd	r19, Y+7	; 0x07
    39ea:	21 30       	cpi	r18, 0x01	; 1
    39ec:	31 05       	cpc	r19, r1
    39ee:	31 f0       	breq	.+12     	; 0x39fc <processBatteryCommand+0x4a>
    39f0:	09 c0       	rjmp	.+18     	; 0x3a04 <processBatteryCommand+0x52>
    39f2:	8c 81       	ldd	r24, Y+4	; 0x04
    39f4:	9d 81       	ldd	r25, Y+5	; 0x05
    39f6:	0e 94 69 1d 	call	0x3ad2	; 0x3ad2 <getBatteryVoltage>
    39fa:	04 c0       	rjmp	.+8      	; 0x3a04 <processBatteryCommand+0x52>
    39fc:	8c 81       	ldd	r24, Y+4	; 0x04
    39fe:	9d 81       	ldd	r25, Y+5	; 0x05
    3a00:	0e 94 7a 1d 	call	0x3af4	; 0x3af4 <getSteeringVoltage>
    3a04:	28 96       	adiw	r28, 0x08	; 8
    3a06:	0f b6       	in	r0, 0x3f	; 63
    3a08:	f8 94       	cli
    3a0a:	de bf       	out	0x3e, r29	; 62
    3a0c:	0f be       	out	0x3f, r0	; 63
    3a0e:	cd bf       	out	0x3d, r28	; 61
    3a10:	cf 91       	pop	r28
    3a12:	df 91       	pop	r29
    3a14:	08 95       	ret

00003a16 <processLightCommand>:
    3a16:	df 93       	push	r29
    3a18:	cf 93       	push	r28
    3a1a:	00 d0       	rcall	.+0      	; 0x3a1c <processLightCommand+0x6>
    3a1c:	00 d0       	rcall	.+0      	; 0x3a1e <processLightCommand+0x8>
    3a1e:	cd b7       	in	r28, 0x3d	; 61
    3a20:	de b7       	in	r29, 0x3e	; 62
    3a22:	89 83       	std	Y+1, r24	; 0x01
    3a24:	7b 83       	std	Y+3, r23	; 0x03
    3a26:	6a 83       	std	Y+2, r22	; 0x02
    3a28:	5d 83       	std	Y+5, r21	; 0x05
    3a2a:	4c 83       	std	Y+4, r20	; 0x04
    3a2c:	89 81       	ldd	r24, Y+1	; 0x01
    3a2e:	99 27       	eor	r25, r25
    3a30:	87 fd       	sbrc	r24, 7
    3a32:	90 95       	com	r25
    3a34:	00 97       	sbiw	r24, 0x00	; 0
    3a36:	41 f4       	brne	.+16     	; 0x3a48 <processLightCommand+0x32>
    3a38:	ea 81       	ldd	r30, Y+2	; 0x02
    3a3a:	fb 81       	ldd	r31, Y+3	; 0x03
    3a3c:	80 81       	ld	r24, Z
    3a3e:	99 27       	eor	r25, r25
    3a40:	87 fd       	sbrc	r24, 7
    3a42:	90 95       	com	r25
    3a44:	0e 94 c3 1d 	call	0x3b86	; 0x3b86 <setLight>
    3a48:	26 96       	adiw	r28, 0x06	; 6
    3a4a:	0f b6       	in	r0, 0x3f	; 63
    3a4c:	f8 94       	cli
    3a4e:	de bf       	out	0x3e, r29	; 62
    3a50:	0f be       	out	0x3f, r0	; 63
    3a52:	cd bf       	out	0x3d, r28	; 61
    3a54:	cf 91       	pop	r28
    3a56:	df 91       	pop	r29
    3a58:	08 95       	ret

00003a5a <processCommand>:
    3a5a:	df 93       	push	r29
    3a5c:	cf 93       	push	r28
    3a5e:	00 d0       	rcall	.+0      	; 0x3a60 <processCommand+0x6>
    3a60:	0f 92       	push	r0
    3a62:	0f 92       	push	r0
    3a64:	cd b7       	in	r28, 0x3d	; 61
    3a66:	de b7       	in	r29, 0x3e	; 62
    3a68:	9a 83       	std	Y+2, r25	; 0x02
    3a6a:	89 83       	std	Y+1, r24	; 0x01
    3a6c:	7c 83       	std	Y+4, r23	; 0x04
    3a6e:	6b 83       	std	Y+3, r22	; 0x03
    3a70:	89 81       	ldd	r24, Y+1	; 0x01
    3a72:	9a 81       	ldd	r25, Y+2	; 0x02
    3a74:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <commandIntegCheck>
    3a78:	88 23       	and	r24, r24
    3a7a:	09 f1       	breq	.+66     	; 0x3abe <processCommand+0x64>
    3a7c:	e9 81       	ldd	r30, Y+1	; 0x01
    3a7e:	fa 81       	ldd	r31, Y+2	; 0x02
    3a80:	80 81       	ld	r24, Z
    3a82:	99 27       	eor	r25, r25
    3a84:	87 fd       	sbrc	r24, 7
    3a86:	90 95       	com	r25
    3a88:	81 30       	cpi	r24, 0x01	; 1
    3a8a:	91 05       	cpc	r25, r1
    3a8c:	a9 f4       	brne	.+42     	; 0x3ab8 <processCommand+0x5e>
    3a8e:	e9 81       	ldd	r30, Y+1	; 0x01
    3a90:	fa 81       	ldd	r31, Y+2	; 0x02
    3a92:	e1 81       	ldd	r30, Z+1	; 0x01
    3a94:	89 81       	ldd	r24, Y+1	; 0x01
    3a96:	9a 81       	ldd	r25, Y+2	; 0x02
    3a98:	bc 01       	movw	r22, r24
    3a9a:	6d 5f       	subi	r22, 0xFD	; 253
    3a9c:	7f 4f       	sbci	r23, 0xFF	; 255
    3a9e:	8b 81       	ldd	r24, Y+3	; 0x03
    3aa0:	9c 81       	ldd	r25, Y+4	; 0x04
    3aa2:	ac 01       	movw	r20, r24
    3aa4:	4f 5f       	subi	r20, 0xFF	; 255
    3aa6:	5f 4f       	sbci	r21, 0xFF	; 255
    3aa8:	8b 81       	ldd	r24, Y+3	; 0x03
    3aaa:	9c 81       	ldd	r25, Y+4	; 0x04
    3aac:	9c 01       	movw	r18, r24
    3aae:	2e 5f       	subi	r18, 0xFE	; 254
    3ab0:	3f 4f       	sbci	r19, 0xFF	; 255
    3ab2:	8e 2f       	mov	r24, r30
    3ab4:	0e 94 66 1b 	call	0x36cc	; 0x36cc <processUltrasonicCommand>
    3ab8:	81 e0       	ldi	r24, 0x01	; 1
    3aba:	8d 83       	std	Y+5, r24	; 0x05
    3abc:	01 c0       	rjmp	.+2      	; 0x3ac0 <processCommand+0x66>
    3abe:	1d 82       	std	Y+5, r1	; 0x05
    3ac0:	8d 81       	ldd	r24, Y+5	; 0x05
    3ac2:	0f 90       	pop	r0
    3ac4:	0f 90       	pop	r0
    3ac6:	0f 90       	pop	r0
    3ac8:	0f 90       	pop	r0
    3aca:	0f 90       	pop	r0
    3acc:	cf 91       	pop	r28
    3ace:	df 91       	pop	r29
    3ad0:	08 95       	ret

00003ad2 <getBatteryVoltage>:
    3ad2:	df 93       	push	r29
    3ad4:	cf 93       	push	r28
    3ad6:	0f 92       	push	r0
    3ad8:	0f 92       	push	r0
    3ada:	cd b7       	in	r28, 0x3d	; 61
    3adc:	de b7       	in	r29, 0x3e	; 62
    3ade:	9a 83       	std	Y+2, r25	; 0x02
    3ae0:	89 83       	std	Y+1, r24	; 0x01
    3ae2:	e9 81       	ldd	r30, Y+1	; 0x01
    3ae4:	fa 81       	ldd	r31, Y+2	; 0x02
    3ae6:	10 82       	st	Z, r1
    3ae8:	81 e0       	ldi	r24, 0x01	; 1
    3aea:	0f 90       	pop	r0
    3aec:	0f 90       	pop	r0
    3aee:	cf 91       	pop	r28
    3af0:	df 91       	pop	r29
    3af2:	08 95       	ret

00003af4 <getSteeringVoltage>:
    3af4:	df 93       	push	r29
    3af6:	cf 93       	push	r28
    3af8:	0f 92       	push	r0
    3afa:	0f 92       	push	r0
    3afc:	cd b7       	in	r28, 0x3d	; 61
    3afe:	de b7       	in	r29, 0x3e	; 62
    3b00:	9a 83       	std	Y+2, r25	; 0x02
    3b02:	89 83       	std	Y+1, r24	; 0x01
    3b04:	e9 81       	ldd	r30, Y+1	; 0x01
    3b06:	fa 81       	ldd	r31, Y+2	; 0x02
    3b08:	10 82       	st	Z, r1
    3b0a:	81 e0       	ldi	r24, 0x01	; 1
    3b0c:	0f 90       	pop	r0
    3b0e:	0f 90       	pop	r0
    3b10:	cf 91       	pop	r28
    3b12:	df 91       	pop	r29
    3b14:	08 95       	ret

00003b16 <setBrake>:
    3b16:	df 93       	push	r29
    3b18:	cf 93       	push	r28
    3b1a:	0f 92       	push	r0
    3b1c:	cd b7       	in	r28, 0x3d	; 61
    3b1e:	de b7       	in	r29, 0x3e	; 62
    3b20:	89 83       	std	Y+1, r24	; 0x01
    3b22:	81 e0       	ldi	r24, 0x01	; 1
    3b24:	0f 90       	pop	r0
    3b26:	cf 91       	pop	r28
    3b28:	df 91       	pop	r29
    3b2a:	08 95       	ret

00003b2c <getBrake>:
    3b2c:	df 93       	push	r29
    3b2e:	cf 93       	push	r28
    3b30:	0f 92       	push	r0
    3b32:	0f 92       	push	r0
    3b34:	cd b7       	in	r28, 0x3d	; 61
    3b36:	de b7       	in	r29, 0x3e	; 62
    3b38:	9a 83       	std	Y+2, r25	; 0x02
    3b3a:	89 83       	std	Y+1, r24	; 0x01
    3b3c:	e9 81       	ldd	r30, Y+1	; 0x01
    3b3e:	fa 81       	ldd	r31, Y+2	; 0x02
    3b40:	10 82       	st	Z, r1
    3b42:	81 e0       	ldi	r24, 0x01	; 1
    3b44:	0f 90       	pop	r0
    3b46:	0f 90       	pop	r0
    3b48:	cf 91       	pop	r28
    3b4a:	df 91       	pop	r29
    3b4c:	08 95       	ret

00003b4e <setFNR>:
    3b4e:	df 93       	push	r29
    3b50:	cf 93       	push	r28
    3b52:	0f 92       	push	r0
    3b54:	cd b7       	in	r28, 0x3d	; 61
    3b56:	de b7       	in	r29, 0x3e	; 62
    3b58:	89 83       	std	Y+1, r24	; 0x01
    3b5a:	81 e0       	ldi	r24, 0x01	; 1
    3b5c:	0f 90       	pop	r0
    3b5e:	cf 91       	pop	r28
    3b60:	df 91       	pop	r29
    3b62:	08 95       	ret

00003b64 <getFNR>:
    3b64:	df 93       	push	r29
    3b66:	cf 93       	push	r28
    3b68:	0f 92       	push	r0
    3b6a:	0f 92       	push	r0
    3b6c:	cd b7       	in	r28, 0x3d	; 61
    3b6e:	de b7       	in	r29, 0x3e	; 62
    3b70:	9a 83       	std	Y+2, r25	; 0x02
    3b72:	89 83       	std	Y+1, r24	; 0x01
    3b74:	e9 81       	ldd	r30, Y+1	; 0x01
    3b76:	fa 81       	ldd	r31, Y+2	; 0x02
    3b78:	10 82       	st	Z, r1
    3b7a:	81 e0       	ldi	r24, 0x01	; 1
    3b7c:	0f 90       	pop	r0
    3b7e:	0f 90       	pop	r0
    3b80:	cf 91       	pop	r28
    3b82:	df 91       	pop	r29
    3b84:	08 95       	ret

00003b86 <setLight>:
    3b86:	df 93       	push	r29
    3b88:	cf 93       	push	r28
    3b8a:	0f 92       	push	r0
    3b8c:	cd b7       	in	r28, 0x3d	; 61
    3b8e:	de b7       	in	r29, 0x3e	; 62
    3b90:	89 83       	std	Y+1, r24	; 0x01
    3b92:	81 e0       	ldi	r24, 0x01	; 1
    3b94:	0f 90       	pop	r0
    3b96:	cf 91       	pop	r28
    3b98:	df 91       	pop	r29
    3b9a:	08 95       	ret

00003b9c <setSonarData>:
    3b9c:	cf 93       	push	r28
    3b9e:	df 93       	push	r29
    3ba0:	00 d0       	rcall	.+0      	; 0x3ba2 <setSonarData+0x6>
    3ba2:	cd b7       	in	r28, 0x3d	; 61
    3ba4:	de b7       	in	r29, 0x3e	; 62
    3ba6:	9a 83       	std	Y+2, r25	; 0x02
    3ba8:	89 83       	std	Y+1, r24	; 0x01
    3baa:	6b 83       	std	Y+3, r22	; 0x03
    3bac:	89 81       	ldd	r24, Y+1	; 0x01
    3bae:	9a 81       	ldd	r25, Y+2	; 0x02
    3bb0:	8c 53       	subi	r24, 0x3C	; 60
    3bb2:	95 4e       	sbci	r25, 0xE5	; 229
    3bb4:	2b 81       	ldd	r18, Y+3	; 0x03
    3bb6:	fc 01       	movw	r30, r24
    3bb8:	20 83       	st	Z, r18
    3bba:	0f 90       	pop	r0
    3bbc:	0f 90       	pop	r0
    3bbe:	0f 90       	pop	r0
    3bc0:	df 91       	pop	r29
    3bc2:	cf 91       	pop	r28
    3bc4:	08 95       	ret

00003bc6 <getSonarData>:
    3bc6:	cf 93       	push	r28
    3bc8:	df 93       	push	r29
    3bca:	1f 92       	push	r1
    3bcc:	1f 92       	push	r1
    3bce:	cd b7       	in	r28, 0x3d	; 61
    3bd0:	de b7       	in	r29, 0x3e	; 62
    3bd2:	9a 83       	std	Y+2, r25	; 0x02
    3bd4:	89 83       	std	Y+1, r24	; 0x01
    3bd6:	89 81       	ldd	r24, Y+1	; 0x01
    3bd8:	8e 5f       	subi	r24, 0xFE	; 254
    3bda:	0f 90       	pop	r0
    3bdc:	0f 90       	pop	r0
    3bde:	df 91       	pop	r29
    3be0:	cf 91       	pop	r28
    3be2:	08 95       	ret

00003be4 <getTimerCount>:
    3be4:	cf 93       	push	r28
    3be6:	df 93       	push	r29
    3be8:	cd b7       	in	r28, 0x3d	; 61
    3bea:	de b7       	in	r29, 0x3e	; 62
    3bec:	86 e4       	ldi	r24, 0x46	; 70
    3bee:	90 e0       	ldi	r25, 0x00	; 0
    3bf0:	fc 01       	movw	r30, r24
    3bf2:	80 81       	ld	r24, Z
    3bf4:	df 91       	pop	r29
    3bf6:	cf 91       	pop	r28
    3bf8:	08 95       	ret

00003bfa <__vector_11>:
    3bfa:	1f 92       	push	r1
    3bfc:	0f 92       	push	r0
    3bfe:	00 90 5f 00 	lds	r0, 0x005F
    3c02:	0f 92       	push	r0
    3c04:	11 24       	eor	r1, r1
    3c06:	00 90 5b 00 	lds	r0, 0x005B
    3c0a:	0f 92       	push	r0
    3c0c:	2f 93       	push	r18
    3c0e:	3f 93       	push	r19
    3c10:	4f 93       	push	r20
    3c12:	5f 93       	push	r21
    3c14:	6f 93       	push	r22
    3c16:	7f 93       	push	r23
    3c18:	8f 93       	push	r24
    3c1a:	9f 93       	push	r25
    3c1c:	af 93       	push	r26
    3c1e:	bf 93       	push	r27
    3c20:	ef 93       	push	r30
    3c22:	ff 93       	push	r31
    3c24:	cf 93       	push	r28
    3c26:	df 93       	push	r29
    3c28:	00 d0       	rcall	.+0      	; 0x3c2a <__vector_11+0x30>
    3c2a:	cd b7       	in	r28, 0x3d	; 61
    3c2c:	de b7       	in	r29, 0x3e	; 62
    3c2e:	19 82       	std	Y+1, r1	; 0x01
    3c30:	86 e0       	ldi	r24, 0x06	; 6
    3c32:	91 e0       	ldi	r25, 0x01	; 1
    3c34:	fc 01       	movw	r30, r24
    3c36:	80 81       	ld	r24, Z
    3c38:	88 2f       	mov	r24, r24
    3c3a:	90 e0       	ldi	r25, 0x00	; 0
    3c3c:	20 91 d8 1a 	lds	r18, 0x1AD8
    3c40:	22 2f       	mov	r18, r18
    3c42:	30 e0       	ldi	r19, 0x00	; 0
    3c44:	02 2e       	mov	r0, r18
    3c46:	02 c0       	rjmp	.+4      	; 0x3c4c <__vector_11+0x52>
    3c48:	95 95       	asr	r25
    3c4a:	87 95       	ror	r24
    3c4c:	0a 94       	dec	r0
    3c4e:	e2 f7       	brpl	.-8      	; 0x3c48 <__vector_11+0x4e>
    3c50:	81 70       	andi	r24, 0x01	; 1
    3c52:	99 27       	eor	r25, r25
    3c54:	00 97       	sbiw	r24, 0x00	; 0
    3c56:	49 f0       	breq	.+18     	; 0x3c6a <__vector_11+0x70>
    3c58:	0e 94 f2 1d 	call	0x3be4	; 0x3be4 <getTimerCount>
    3c5c:	8a 83       	std	Y+2, r24	; 0x02
    3c5e:	8e e2       	ldi	r24, 0x2E	; 46
    3c60:	90 e0       	ldi	r25, 0x00	; 0
    3c62:	2f ef       	ldi	r18, 0xFF	; 255
    3c64:	fc 01       	movw	r30, r24
    3c66:	20 83       	st	Z, r18
    3c68:	1d c0       	rjmp	.+58     	; 0x3ca4 <__vector_11+0xaa>
    3c6a:	0e 94 f2 1d 	call	0x3be4	; 0x3be4 <getTimerCount>
    3c6e:	8b 83       	std	Y+3, r24	; 0x03
    3c70:	9b 81       	ldd	r25, Y+3	; 0x03
    3c72:	8a 81       	ldd	r24, Y+2	; 0x02
    3c74:	89 17       	cp	r24, r25
    3c76:	38 f4       	brcc	.+14     	; 0x3c86 <__vector_11+0x8c>
    3c78:	9b 81       	ldd	r25, Y+3	; 0x03
    3c7a:	8a 81       	ldd	r24, Y+2	; 0x02
    3c7c:	f9 2f       	mov	r31, r25
    3c7e:	f8 1b       	sub	r31, r24
    3c80:	8f 2f       	mov	r24, r31
    3c82:	80 93 bb 1a 	sts	0x1ABB, r24
    3c86:	8e e2       	ldi	r24, 0x2E	; 46
    3c88:	90 e0       	ldi	r25, 0x00	; 0
    3c8a:	fc 01       	movw	r30, r24
    3c8c:	10 82       	st	Z, r1
    3c8e:	80 91 ca 1a 	lds	r24, 0x1ACA
    3c92:	90 91 cb 1a 	lds	r25, 0x1ACB
    3c96:	20 e0       	ldi	r18, 0x00	; 0
    3c98:	40 e0       	ldi	r20, 0x00	; 0
    3c9a:	50 e0       	ldi	r21, 0x00	; 0
    3c9c:	60 e0       	ldi	r22, 0x00	; 0
    3c9e:	70 e0       	ldi	r23, 0x00	; 0
    3ca0:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <xQueueGenericSendFromISR>
    3ca4:	0f 90       	pop	r0
    3ca6:	0f 90       	pop	r0
    3ca8:	0f 90       	pop	r0
    3caa:	df 91       	pop	r29
    3cac:	cf 91       	pop	r28
    3cae:	ff 91       	pop	r31
    3cb0:	ef 91       	pop	r30
    3cb2:	bf 91       	pop	r27
    3cb4:	af 91       	pop	r26
    3cb6:	9f 91       	pop	r25
    3cb8:	8f 91       	pop	r24
    3cba:	7f 91       	pop	r23
    3cbc:	6f 91       	pop	r22
    3cbe:	5f 91       	pop	r21
    3cc0:	4f 91       	pop	r20
    3cc2:	3f 91       	pop	r19
    3cc4:	2f 91       	pop	r18
    3cc6:	0f 90       	pop	r0
    3cc8:	00 92 5b 00 	sts	0x005B, r0
    3ccc:	0f 90       	pop	r0
    3cce:	00 92 5f 00 	sts	0x005F, r0
    3cd2:	0f 90       	pop	r0
    3cd4:	1f 90       	pop	r1
    3cd6:	18 95       	reti

00003cd8 <initializeSonarSensors>:
    3cd8:	cf 93       	push	r28
    3cda:	df 93       	push	r29
    3cdc:	cd b7       	in	r28, 0x3d	; 61
    3cde:	de b7       	in	r29, 0x3e	; 62
    3ce0:	8d e7       	ldi	r24, 0x7D	; 125
    3ce2:	90 e0       	ldi	r25, 0x00	; 0
    3ce4:	fc 01       	movw	r30, r24
    3ce6:	10 82       	st	Z, r1
    3ce8:	87 e0       	ldi	r24, 0x07	; 7
    3cea:	91 e0       	ldi	r25, 0x01	; 1
    3cec:	fc 01       	movw	r30, r24
    3cee:	10 82       	st	Z, r1
    3cf0:	87 e2       	ldi	r24, 0x27	; 39
    3cf2:	90 e0       	ldi	r25, 0x00	; 0
    3cf4:	fc 01       	movw	r30, r24
    3cf6:	10 82       	st	Z, r1
    3cf8:	88 e2       	ldi	r24, 0x28	; 40
    3cfa:	90 e0       	ldi	r25, 0x00	; 0
    3cfc:	fc 01       	movw	r30, r24
    3cfe:	10 82       	st	Z, r1
    3d00:	8d e6       	ldi	r24, 0x6D	; 109
    3d02:	90 e0       	ldi	r25, 0x00	; 0
    3d04:	2f ef       	ldi	r18, 0xFF	; 255
    3d06:	fc 01       	movw	r30, r24
    3d08:	20 83       	st	Z, r18
    3d0a:	88 e6       	ldi	r24, 0x68	; 104
    3d0c:	90 e0       	ldi	r25, 0x00	; 0
    3d0e:	27 e0       	ldi	r18, 0x07	; 7
    3d10:	fc 01       	movw	r30, r24
    3d12:	20 83       	st	Z, r18
    3d14:	84 e4       	ldi	r24, 0x44	; 68
    3d16:	90 e0       	ldi	r25, 0x00	; 0
    3d18:	fc 01       	movw	r30, r24
    3d1a:	10 82       	st	Z, r1
    3d1c:	85 e4       	ldi	r24, 0x45	; 69
    3d1e:	90 e0       	ldi	r25, 0x00	; 0
    3d20:	25 e0       	ldi	r18, 0x05	; 5
    3d22:	fc 01       	movw	r30, r24
    3d24:	20 83       	st	Z, r18
    3d26:	df 91       	pop	r29
    3d28:	cf 91       	pop	r28
    3d2a:	08 95       	ret

00003d2c <vTaskSonar>:
    3d2c:	cf 93       	push	r28
    3d2e:	df 93       	push	r29
    3d30:	00 d0       	rcall	.+0      	; 0x3d32 <vTaskSonar+0x6>
    3d32:	1f 92       	push	r1
    3d34:	cd b7       	in	r28, 0x3d	; 61
    3d36:	de b7       	in	r29, 0x3e	; 62
    3d38:	9c 83       	std	Y+4, r25	; 0x04
    3d3a:	8b 83       	std	Y+3, r24	; 0x03
    3d3c:	0e 94 6c 1e 	call	0x3cd8	; 0x3cd8 <initializeSonarSensors>
    3d40:	43 e0       	ldi	r20, 0x03	; 3
    3d42:	60 e0       	ldi	r22, 0x00	; 0
    3d44:	81 e0       	ldi	r24, 0x01	; 1
    3d46:	0e 94 ed 0b 	call	0x17da	; 0x17da <xQueueGenericCreate>
    3d4a:	90 93 cb 1a 	sts	0x1ACB, r25
    3d4e:	80 93 ca 1a 	sts	0x1ACA, r24
    3d52:	80 91 ca 1a 	lds	r24, 0x1ACA
    3d56:	90 91 cb 1a 	lds	r25, 0x1ACB
    3d5a:	00 97       	sbiw	r24, 0x00	; 0
    3d5c:	59 f0       	breq	.+22     	; 0x3d74 <vTaskSonar+0x48>
    3d5e:	80 91 ca 1a 	lds	r24, 0x1ACA
    3d62:	90 91 cb 1a 	lds	r25, 0x1ACB
    3d66:	20 e0       	ldi	r18, 0x00	; 0
    3d68:	40 e0       	ldi	r20, 0x00	; 0
    3d6a:	50 e0       	ldi	r21, 0x00	; 0
    3d6c:	60 e0       	ldi	r22, 0x00	; 0
    3d6e:	70 e0       	ldi	r23, 0x00	; 0
    3d70:	0e 94 97 0c 	call	0x192e	; 0x192e <xQueueGenericSend>
    3d74:	10 92 d8 1a 	sts	0x1AD8, r1
    3d78:	1a 82       	std	Y+2, r1	; 0x02
    3d7a:	19 82       	std	Y+1, r1	; 0x01
    3d7c:	26 c0       	rjmp	.+76     	; 0x3dca <vTaskSonar+0x9e>
    3d7e:	89 81       	ldd	r24, Y+1	; 0x01
    3d80:	80 93 d8 1a 	sts	0x1AD8, r24
    3d84:	88 e2       	ldi	r24, 0x28	; 40
    3d86:	90 e0       	ldi	r25, 0x00	; 0
    3d88:	21 e0       	ldi	r18, 0x01	; 1
    3d8a:	30 e0       	ldi	r19, 0x00	; 0
    3d8c:	09 80       	ldd	r0, Y+1	; 0x01
    3d8e:	02 c0       	rjmp	.+4      	; 0x3d94 <vTaskSonar+0x68>
    3d90:	22 0f       	add	r18, r18
    3d92:	33 1f       	adc	r19, r19
    3d94:	0a 94       	dec	r0
    3d96:	e2 f7       	brpl	.-8      	; 0x3d90 <vTaskSonar+0x64>
    3d98:	fc 01       	movw	r30, r24
    3d9a:	20 83       	st	Z, r18
    3d9c:	80 91 ca 1a 	lds	r24, 0x1ACA
    3da0:	90 91 cb 1a 	lds	r25, 0x1ACB
    3da4:	20 e0       	ldi	r18, 0x00	; 0
    3da6:	4f ef       	ldi	r20, 0xFF	; 255
    3da8:	5f ef       	ldi	r21, 0xFF	; 255
    3daa:	60 e0       	ldi	r22, 0x00	; 0
    3dac:	70 e0       	ldi	r23, 0x00	; 0
    3dae:	0e 94 86 0d 	call	0x1b0c	; 0x1b0c <xQueueGenericReceive>
    3db2:	20 91 bb 1a 	lds	r18, 0x1ABB
    3db6:	89 81       	ldd	r24, Y+1	; 0x01
    3db8:	9a 81       	ldd	r25, Y+2	; 0x02
    3dba:	62 2f       	mov	r22, r18
    3dbc:	0e 94 ce 1d 	call	0x3b9c	; 0x3b9c <setSonarData>
    3dc0:	89 81       	ldd	r24, Y+1	; 0x01
    3dc2:	9a 81       	ldd	r25, Y+2	; 0x02
    3dc4:	01 96       	adiw	r24, 0x01	; 1
    3dc6:	9a 83       	std	Y+2, r25	; 0x02
    3dc8:	89 83       	std	Y+1, r24	; 0x01
    3dca:	89 81       	ldd	r24, Y+1	; 0x01
    3dcc:	9a 81       	ldd	r25, Y+2	; 0x02
    3dce:	82 30       	cpi	r24, 0x02	; 2
    3dd0:	91 05       	cpc	r25, r1
    3dd2:	ac f2       	brlt	.-86     	; 0x3d7e <vTaskSonar+0x52>
    3dd4:	d1 cf       	rjmp	.-94     	; 0x3d78 <vTaskSonar+0x4c>

00003dd6 <getAllSensors>:
    3dd6:	cf 93       	push	r28
    3dd8:	df 93       	push	r29
    3dda:	00 d0       	rcall	.+0      	; 0x3ddc <getAllSensors+0x6>
    3ddc:	1f 92       	push	r1
    3dde:	cd b7       	in	r28, 0x3d	; 61
    3de0:	de b7       	in	r29, 0x3e	; 62
    3de2:	9c 83       	std	Y+4, r25	; 0x04
    3de4:	8b 83       	std	Y+3, r24	; 0x03
    3de6:	1a 82       	std	Y+2, r1	; 0x02
    3de8:	19 82       	std	Y+1, r1	; 0x01
    3dea:	14 c0       	rjmp	.+40     	; 0x3e14 <getAllSensors+0x3e>
    3dec:	89 81       	ldd	r24, Y+1	; 0x01
    3dee:	9a 81       	ldd	r25, Y+2	; 0x02
    3df0:	88 0f       	add	r24, r24
    3df2:	99 1f       	adc	r25, r25
    3df4:	2b 81       	ldd	r18, Y+3	; 0x03
    3df6:	3c 81       	ldd	r19, Y+4	; 0x04
    3df8:	82 0f       	add	r24, r18
    3dfa:	93 1f       	adc	r25, r19
    3dfc:	29 81       	ldd	r18, Y+1	; 0x01
    3dfe:	3a 81       	ldd	r19, Y+2	; 0x02
    3e00:	2f 5f       	subi	r18, 0xFF	; 255
    3e02:	3f 4f       	sbci	r19, 0xFF	; 255
    3e04:	fc 01       	movw	r30, r24
    3e06:	31 83       	std	Z+1, r19	; 0x01
    3e08:	20 83       	st	Z, r18
    3e0a:	89 81       	ldd	r24, Y+1	; 0x01
    3e0c:	9a 81       	ldd	r25, Y+2	; 0x02
    3e0e:	01 96       	adiw	r24, 0x01	; 1
    3e10:	9a 83       	std	Y+2, r25	; 0x02
    3e12:	89 83       	std	Y+1, r24	; 0x01
    3e14:	89 81       	ldd	r24, Y+1	; 0x01
    3e16:	9a 81       	ldd	r25, Y+2	; 0x02
    3e18:	86 30       	cpi	r24, 0x06	; 6
    3e1a:	91 05       	cpc	r25, r1
    3e1c:	38 f3       	brcs	.-50     	; 0x3dec <getAllSensors+0x16>
    3e1e:	0f 90       	pop	r0
    3e20:	0f 90       	pop	r0
    3e22:	0f 90       	pop	r0
    3e24:	0f 90       	pop	r0
    3e26:	df 91       	pop	r29
    3e28:	cf 91       	pop	r28
    3e2a:	08 95       	ret

00003e2c <getCertainSensor>:
    3e2c:	0f 93       	push	r16
    3e2e:	1f 93       	push	r17
    3e30:	cf 93       	push	r28
    3e32:	df 93       	push	r29
    3e34:	00 d0       	rcall	.+0      	; 0x3e36 <getCertainSensor+0xa>
    3e36:	cd b7       	in	r28, 0x3d	; 61
    3e38:	de b7       	in	r29, 0x3e	; 62
    3e3a:	89 83       	std	Y+1, r24	; 0x01
    3e3c:	7b 83       	std	Y+3, r23	; 0x03
    3e3e:	6a 83       	std	Y+2, r22	; 0x02
    3e40:	89 81       	ldd	r24, Y+1	; 0x01
    3e42:	86 30       	cpi	r24, 0x06	; 6
    3e44:	b4 f4       	brge	.+44     	; 0x3e72 <getCertainSensor+0x46>
    3e46:	89 81       	ldd	r24, Y+1	; 0x01
    3e48:	99 27       	eor	r25, r25
    3e4a:	87 fd       	sbrc	r24, 7
    3e4c:	90 95       	com	r25
    3e4e:	88 0f       	add	r24, r24
    3e50:	99 1f       	adc	r25, r25
    3e52:	2a 81       	ldd	r18, Y+2	; 0x02
    3e54:	3b 81       	ldd	r19, Y+3	; 0x03
    3e56:	89 01       	movw	r16, r18
    3e58:	08 0f       	add	r16, r24
    3e5a:	19 1f       	adc	r17, r25
    3e5c:	89 81       	ldd	r24, Y+1	; 0x01
    3e5e:	99 27       	eor	r25, r25
    3e60:	87 fd       	sbrc	r24, 7
    3e62:	90 95       	com	r25
    3e64:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <getSonarData>
    3e68:	88 2f       	mov	r24, r24
    3e6a:	90 e0       	ldi	r25, 0x00	; 0
    3e6c:	f8 01       	movw	r30, r16
    3e6e:	91 83       	std	Z+1, r25	; 0x01
    3e70:	80 83       	st	Z, r24
    3e72:	0f 90       	pop	r0
    3e74:	0f 90       	pop	r0
    3e76:	0f 90       	pop	r0
    3e78:	df 91       	pop	r29
    3e7a:	cf 91       	pop	r28
    3e7c:	1f 91       	pop	r17
    3e7e:	0f 91       	pop	r16
    3e80:	08 95       	ret

00003e82 <getSensorGroup>:
    3e82:	0f 93       	push	r16
    3e84:	1f 93       	push	r17
    3e86:	cf 93       	push	r28
    3e88:	df 93       	push	r29
    3e8a:	00 d0       	rcall	.+0      	; 0x3e8c <getSensorGroup+0xa>
    3e8c:	cd b7       	in	r28, 0x3d	; 61
    3e8e:	de b7       	in	r29, 0x3e	; 62
    3e90:	89 83       	std	Y+1, r24	; 0x01
    3e92:	7b 83       	std	Y+3, r23	; 0x03
    3e94:	6a 83       	std	Y+2, r22	; 0x02
    3e96:	89 81       	ldd	r24, Y+1	; 0x01
    3e98:	99 27       	eor	r25, r25
    3e9a:	87 fd       	sbrc	r24, 7
    3e9c:	90 95       	com	r25
    3e9e:	81 30       	cpi	r24, 0x01	; 1
    3ea0:	91 05       	cpc	r25, r1
    3ea2:	01 f1       	breq	.+64     	; 0x3ee4 <getSensorGroup+0x62>
    3ea4:	82 30       	cpi	r24, 0x02	; 2
    3ea6:	91 05       	cpc	r25, r1
    3ea8:	b9 f1       	breq	.+110    	; 0x3f18 <getSensorGroup+0x96>
    3eaa:	00 97       	sbiw	r24, 0x00	; 0
    3eac:	09 f0       	breq	.+2      	; 0x3eb0 <getSensorGroup+0x2e>
    3eae:	4e c0       	rjmp	.+156    	; 0x3f4c <getSensorGroup+0xca>
    3eb0:	80 e0       	ldi	r24, 0x00	; 0
    3eb2:	90 e0       	ldi	r25, 0x00	; 0
    3eb4:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <getSonarData>
    3eb8:	28 2f       	mov	r18, r24
    3eba:	30 e0       	ldi	r19, 0x00	; 0
    3ebc:	8a 81       	ldd	r24, Y+2	; 0x02
    3ebe:	9b 81       	ldd	r25, Y+3	; 0x03
    3ec0:	fc 01       	movw	r30, r24
    3ec2:	31 83       	std	Z+1, r19	; 0x01
    3ec4:	20 83       	st	Z, r18
    3ec6:	8a 81       	ldd	r24, Y+2	; 0x02
    3ec8:	9b 81       	ldd	r25, Y+3	; 0x03
    3eca:	8c 01       	movw	r16, r24
    3ecc:	0e 5f       	subi	r16, 0xFE	; 254
    3ece:	1f 4f       	sbci	r17, 0xFF	; 255
    3ed0:	81 e0       	ldi	r24, 0x01	; 1
    3ed2:	90 e0       	ldi	r25, 0x00	; 0
    3ed4:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <getSonarData>
    3ed8:	88 2f       	mov	r24, r24
    3eda:	90 e0       	ldi	r25, 0x00	; 0
    3edc:	f8 01       	movw	r30, r16
    3ede:	91 83       	std	Z+1, r25	; 0x01
    3ee0:	80 83       	st	Z, r24
    3ee2:	34 c0       	rjmp	.+104    	; 0x3f4c <getSensorGroup+0xca>
    3ee4:	82 e0       	ldi	r24, 0x02	; 2
    3ee6:	90 e0       	ldi	r25, 0x00	; 0
    3ee8:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <getSonarData>
    3eec:	28 2f       	mov	r18, r24
    3eee:	30 e0       	ldi	r19, 0x00	; 0
    3ef0:	8a 81       	ldd	r24, Y+2	; 0x02
    3ef2:	9b 81       	ldd	r25, Y+3	; 0x03
    3ef4:	fc 01       	movw	r30, r24
    3ef6:	31 83       	std	Z+1, r19	; 0x01
    3ef8:	20 83       	st	Z, r18
    3efa:	8a 81       	ldd	r24, Y+2	; 0x02
    3efc:	9b 81       	ldd	r25, Y+3	; 0x03
    3efe:	8c 01       	movw	r16, r24
    3f00:	0e 5f       	subi	r16, 0xFE	; 254
    3f02:	1f 4f       	sbci	r17, 0xFF	; 255
    3f04:	83 e0       	ldi	r24, 0x03	; 3
    3f06:	90 e0       	ldi	r25, 0x00	; 0
    3f08:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <getSonarData>
    3f0c:	88 2f       	mov	r24, r24
    3f0e:	90 e0       	ldi	r25, 0x00	; 0
    3f10:	f8 01       	movw	r30, r16
    3f12:	91 83       	std	Z+1, r25	; 0x01
    3f14:	80 83       	st	Z, r24
    3f16:	1a c0       	rjmp	.+52     	; 0x3f4c <getSensorGroup+0xca>
    3f18:	84 e0       	ldi	r24, 0x04	; 4
    3f1a:	90 e0       	ldi	r25, 0x00	; 0
    3f1c:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <getSonarData>
    3f20:	28 2f       	mov	r18, r24
    3f22:	30 e0       	ldi	r19, 0x00	; 0
    3f24:	8a 81       	ldd	r24, Y+2	; 0x02
    3f26:	9b 81       	ldd	r25, Y+3	; 0x03
    3f28:	fc 01       	movw	r30, r24
    3f2a:	31 83       	std	Z+1, r19	; 0x01
    3f2c:	20 83       	st	Z, r18
    3f2e:	8a 81       	ldd	r24, Y+2	; 0x02
    3f30:	9b 81       	ldd	r25, Y+3	; 0x03
    3f32:	8c 01       	movw	r16, r24
    3f34:	0e 5f       	subi	r16, 0xFE	; 254
    3f36:	1f 4f       	sbci	r17, 0xFF	; 255
    3f38:	85 e0       	ldi	r24, 0x05	; 5
    3f3a:	90 e0       	ldi	r25, 0x00	; 0
    3f3c:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <getSonarData>
    3f40:	88 2f       	mov	r24, r24
    3f42:	90 e0       	ldi	r25, 0x00	; 0
    3f44:	f8 01       	movw	r30, r16
    3f46:	91 83       	std	Z+1, r25	; 0x01
    3f48:	80 83       	st	Z, r24
    3f4a:	00 00       	nop
    3f4c:	0f 90       	pop	r0
    3f4e:	0f 90       	pop	r0
    3f50:	0f 90       	pop	r0
    3f52:	df 91       	pop	r29
    3f54:	cf 91       	pop	r28
    3f56:	1f 91       	pop	r17
    3f58:	0f 91       	pop	r16
    3f5a:	08 95       	ret

00003f5c <getSpeed>:
    3f5c:	df 93       	push	r29
    3f5e:	cf 93       	push	r28
    3f60:	0f 92       	push	r0
    3f62:	0f 92       	push	r0
    3f64:	cd b7       	in	r28, 0x3d	; 61
    3f66:	de b7       	in	r29, 0x3e	; 62
    3f68:	9a 83       	std	Y+2, r25	; 0x02
    3f6a:	89 83       	std	Y+1, r24	; 0x01
    3f6c:	e9 81       	ldd	r30, Y+1	; 0x01
    3f6e:	fa 81       	ldd	r31, Y+2	; 0x02
    3f70:	10 82       	st	Z, r1
    3f72:	81 e0       	ldi	r24, 0x01	; 1
    3f74:	0f 90       	pop	r0
    3f76:	0f 90       	pop	r0
    3f78:	cf 91       	pop	r28
    3f7a:	df 91       	pop	r29
    3f7c:	08 95       	ret

00003f7e <setSpeed>:
    3f7e:	df 93       	push	r29
    3f80:	cf 93       	push	r28
    3f82:	0f 92       	push	r0
    3f84:	cd b7       	in	r28, 0x3d	; 61
    3f86:	de b7       	in	r29, 0x3e	; 62
    3f88:	89 83       	std	Y+1, r24	; 0x01
    3f8a:	81 e0       	ldi	r24, 0x01	; 1
    3f8c:	0f 90       	pop	r0
    3f8e:	cf 91       	pop	r28
    3f90:	df 91       	pop	r29
    3f92:	08 95       	ret

00003f94 <setAngle>:
    3f94:	df 93       	push	r29
    3f96:	cf 93       	push	r28
    3f98:	0f 92       	push	r0
    3f9a:	cd b7       	in	r28, 0x3d	; 61
    3f9c:	de b7       	in	r29, 0x3e	; 62
    3f9e:	89 83       	std	Y+1, r24	; 0x01
    3fa0:	81 e0       	ldi	r24, 0x01	; 1
    3fa2:	0f 90       	pop	r0
    3fa4:	cf 91       	pop	r28
    3fa6:	df 91       	pop	r29
    3fa8:	08 95       	ret

00003faa <getAngle>:
    3faa:	df 93       	push	r29
    3fac:	cf 93       	push	r28
    3fae:	0f 92       	push	r0
    3fb0:	0f 92       	push	r0
    3fb2:	cd b7       	in	r28, 0x3d	; 61
    3fb4:	de b7       	in	r29, 0x3e	; 62
    3fb6:	9a 83       	std	Y+2, r25	; 0x02
    3fb8:	89 83       	std	Y+1, r24	; 0x01
    3fba:	e9 81       	ldd	r30, Y+1	; 0x01
    3fbc:	fa 81       	ldd	r31, Y+2	; 0x02
    3fbe:	10 82       	st	Z, r1
    3fc0:	81 e0       	ldi	r24, 0x01	; 1
    3fc2:	0f 90       	pop	r0
    3fc4:	0f 90       	pop	r0
    3fc6:	cf 91       	pop	r28
    3fc8:	df 91       	pop	r29
    3fca:	08 95       	ret

00003fcc <getDesiredAngle>:
    3fcc:	df 93       	push	r29
    3fce:	cf 93       	push	r28
    3fd0:	0f 92       	push	r0
    3fd2:	0f 92       	push	r0
    3fd4:	cd b7       	in	r28, 0x3d	; 61
    3fd6:	de b7       	in	r29, 0x3e	; 62
    3fd8:	9a 83       	std	Y+2, r25	; 0x02
    3fda:	89 83       	std	Y+1, r24	; 0x01
    3fdc:	e9 81       	ldd	r30, Y+1	; 0x01
    3fde:	fa 81       	ldd	r31, Y+2	; 0x02
    3fe0:	10 82       	st	Z, r1
    3fe2:	81 e0       	ldi	r24, 0x01	; 1
    3fe4:	0f 90       	pop	r0
    3fe6:	0f 90       	pop	r0
    3fe8:	cf 91       	pop	r28
    3fea:	df 91       	pop	r29
    3fec:	08 95       	ret

00003fee <changePID>:
    3fee:	df 93       	push	r29
    3ff0:	cf 93       	push	r28
    3ff2:	00 d0       	rcall	.+0      	; 0x3ff4 <changePID+0x6>
    3ff4:	cd b7       	in	r28, 0x3d	; 61
    3ff6:	de b7       	in	r29, 0x3e	; 62
    3ff8:	89 83       	std	Y+1, r24	; 0x01
    3ffa:	6a 83       	std	Y+2, r22	; 0x02
    3ffc:	4b 83       	std	Y+3, r20	; 0x03
    3ffe:	81 e0       	ldi	r24, 0x01	; 1
    4000:	0f 90       	pop	r0
    4002:	0f 90       	pop	r0
    4004:	0f 90       	pop	r0
    4006:	cf 91       	pop	r28
    4008:	df 91       	pop	r29
    400a:	08 95       	ret

0000400c <setLimits>:
    400c:	df 93       	push	r29
    400e:	cf 93       	push	r28
    4010:	0f 92       	push	r0
    4012:	0f 92       	push	r0
    4014:	cd b7       	in	r28, 0x3d	; 61
    4016:	de b7       	in	r29, 0x3e	; 62
    4018:	89 83       	std	Y+1, r24	; 0x01
    401a:	6a 83       	std	Y+2, r22	; 0x02
    401c:	81 e0       	ldi	r24, 0x01	; 1
    401e:	0f 90       	pop	r0
    4020:	0f 90       	pop	r0
    4022:	cf 91       	pop	r28
    4024:	df 91       	pop	r29
    4026:	08 95       	ret

00004028 <__udivmodsi4>:
    4028:	a1 e2       	ldi	r26, 0x21	; 33
    402a:	1a 2e       	mov	r1, r26
    402c:	aa 1b       	sub	r26, r26
    402e:	bb 1b       	sub	r27, r27
    4030:	fd 01       	movw	r30, r26
    4032:	0d c0       	rjmp	.+26     	; 0x404e <__udivmodsi4_ep>

00004034 <__udivmodsi4_loop>:
    4034:	aa 1f       	adc	r26, r26
    4036:	bb 1f       	adc	r27, r27
    4038:	ee 1f       	adc	r30, r30
    403a:	ff 1f       	adc	r31, r31
    403c:	a2 17       	cp	r26, r18
    403e:	b3 07       	cpc	r27, r19
    4040:	e4 07       	cpc	r30, r20
    4042:	f5 07       	cpc	r31, r21
    4044:	20 f0       	brcs	.+8      	; 0x404e <__udivmodsi4_ep>
    4046:	a2 1b       	sub	r26, r18
    4048:	b3 0b       	sbc	r27, r19
    404a:	e4 0b       	sbc	r30, r20
    404c:	f5 0b       	sbc	r31, r21

0000404e <__udivmodsi4_ep>:
    404e:	66 1f       	adc	r22, r22
    4050:	77 1f       	adc	r23, r23
    4052:	88 1f       	adc	r24, r24
    4054:	99 1f       	adc	r25, r25
    4056:	1a 94       	dec	r1
    4058:	69 f7       	brne	.-38     	; 0x4034 <__udivmodsi4_loop>
    405a:	60 95       	com	r22
    405c:	70 95       	com	r23
    405e:	80 95       	com	r24
    4060:	90 95       	com	r25
    4062:	9b 01       	movw	r18, r22
    4064:	ac 01       	movw	r20, r24
    4066:	bd 01       	movw	r22, r26
    4068:	cf 01       	movw	r24, r30
    406a:	08 95       	ret

0000406c <memcpy>:
    406c:	fb 01       	movw	r30, r22
    406e:	dc 01       	movw	r26, r24
    4070:	02 c0       	rjmp	.+4      	; 0x4076 <memcpy+0xa>
    4072:	01 90       	ld	r0, Z+
    4074:	0d 92       	st	X+, r0
    4076:	41 50       	subi	r20, 0x01	; 1
    4078:	50 40       	sbci	r21, 0x00	; 0
    407a:	d8 f7       	brcc	.-10     	; 0x4072 <memcpy+0x6>
    407c:	08 95       	ret

0000407e <memset>:
    407e:	dc 01       	movw	r26, r24
    4080:	01 c0       	rjmp	.+2      	; 0x4084 <memset+0x6>
    4082:	6d 93       	st	X+, r22
    4084:	41 50       	subi	r20, 0x01	; 1
    4086:	50 40       	sbci	r21, 0x00	; 0
    4088:	e0 f7       	brcc	.-8      	; 0x4082 <memset+0x4>
    408a:	08 95       	ret

0000408c <strncpy>:
    408c:	fb 01       	movw	r30, r22
    408e:	dc 01       	movw	r26, r24
    4090:	41 50       	subi	r20, 0x01	; 1
    4092:	50 40       	sbci	r21, 0x00	; 0
    4094:	48 f0       	brcs	.+18     	; 0x40a8 <strncpy+0x1c>
    4096:	01 90       	ld	r0, Z+
    4098:	0d 92       	st	X+, r0
    409a:	00 20       	and	r0, r0
    409c:	c9 f7       	brne	.-14     	; 0x4090 <strncpy+0x4>
    409e:	01 c0       	rjmp	.+2      	; 0x40a2 <strncpy+0x16>
    40a0:	1d 92       	st	X+, r1
    40a2:	41 50       	subi	r20, 0x01	; 1
    40a4:	50 40       	sbci	r21, 0x00	; 0
    40a6:	e0 f7       	brcc	.-8      	; 0x40a0 <strncpy+0x14>
    40a8:	08 95       	ret

000040aa <itoa>:
    40aa:	fb 01       	movw	r30, r22
    40ac:	9f 01       	movw	r18, r30
    40ae:	e8 94       	clt
    40b0:	42 30       	cpi	r20, 0x02	; 2
    40b2:	c4 f0       	brlt	.+48     	; 0x40e4 <itoa+0x3a>
    40b4:	45 32       	cpi	r20, 0x25	; 37
    40b6:	b4 f4       	brge	.+44     	; 0x40e4 <itoa+0x3a>
    40b8:	4a 30       	cpi	r20, 0x0A	; 10
    40ba:	29 f4       	brne	.+10     	; 0x40c6 <itoa+0x1c>
    40bc:	97 fb       	bst	r25, 7
    40be:	1e f4       	brtc	.+6      	; 0x40c6 <itoa+0x1c>
    40c0:	90 95       	com	r25
    40c2:	81 95       	neg	r24
    40c4:	9f 4f       	sbci	r25, 0xFF	; 255
    40c6:	64 2f       	mov	r22, r20
    40c8:	77 27       	eor	r23, r23
    40ca:	0e 94 86 20 	call	0x410c	; 0x410c <__udivmodhi4>
    40ce:	80 5d       	subi	r24, 0xD0	; 208
    40d0:	8a 33       	cpi	r24, 0x3A	; 58
    40d2:	0c f0       	brlt	.+2      	; 0x40d6 <itoa+0x2c>
    40d4:	89 5d       	subi	r24, 0xD9	; 217
    40d6:	81 93       	st	Z+, r24
    40d8:	cb 01       	movw	r24, r22
    40da:	00 97       	sbiw	r24, 0x00	; 0
    40dc:	a1 f7       	brne	.-24     	; 0x40c6 <itoa+0x1c>
    40de:	16 f4       	brtc	.+4      	; 0x40e4 <itoa+0x3a>
    40e0:	5d e2       	ldi	r21, 0x2D	; 45
    40e2:	51 93       	st	Z+, r21
    40e4:	10 82       	st	Z, r1
    40e6:	c9 01       	movw	r24, r18
    40e8:	0c 94 76 20 	jmp	0x40ec	; 0x40ec <strrev>

000040ec <strrev>:
    40ec:	dc 01       	movw	r26, r24
    40ee:	fc 01       	movw	r30, r24
    40f0:	67 2f       	mov	r22, r23
    40f2:	71 91       	ld	r23, Z+
    40f4:	77 23       	and	r23, r23
    40f6:	e1 f7       	brne	.-8      	; 0x40f0 <strrev+0x4>
    40f8:	32 97       	sbiw	r30, 0x02	; 2
    40fa:	04 c0       	rjmp	.+8      	; 0x4104 <strrev+0x18>
    40fc:	7c 91       	ld	r23, X
    40fe:	6d 93       	st	X+, r22
    4100:	70 83       	st	Z, r23
    4102:	62 91       	ld	r22, -Z
    4104:	ae 17       	cp	r26, r30
    4106:	bf 07       	cpc	r27, r31
    4108:	c8 f3       	brcs	.-14     	; 0x40fc <strrev+0x10>
    410a:	08 95       	ret

0000410c <__udivmodhi4>:
    410c:	aa 1b       	sub	r26, r26
    410e:	bb 1b       	sub	r27, r27
    4110:	51 e1       	ldi	r21, 0x11	; 17
    4112:	07 c0       	rjmp	.+14     	; 0x4122 <__udivmodhi4_ep>

00004114 <__udivmodhi4_loop>:
    4114:	aa 1f       	adc	r26, r26
    4116:	bb 1f       	adc	r27, r27
    4118:	a6 17       	cp	r26, r22
    411a:	b7 07       	cpc	r27, r23
    411c:	10 f0       	brcs	.+4      	; 0x4122 <__udivmodhi4_ep>
    411e:	a6 1b       	sub	r26, r22
    4120:	b7 0b       	sbc	r27, r23

00004122 <__udivmodhi4_ep>:
    4122:	88 1f       	adc	r24, r24
    4124:	99 1f       	adc	r25, r25
    4126:	5a 95       	dec	r21
    4128:	a9 f7       	brne	.-22     	; 0x4114 <__udivmodhi4_loop>
    412a:	80 95       	com	r24
    412c:	90 95       	com	r25
    412e:	bc 01       	movw	r22, r24
    4130:	cd 01       	movw	r24, r26
    4132:	08 95       	ret

00004134 <_exit>:
    4134:	f8 94       	cli

00004136 <__stop_program>:
    4136:	ff cf       	rjmp	.-2      	; 0x4136 <__stop_program>
